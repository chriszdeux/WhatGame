{"version":3,"sources":["context/DataFetchContext.js","data/fetchGames.js","hooks/useFetchGame.js","hooks/useShowContent.js","assets/horizon.jpg","components/modal/RatingStar.jsx","components/modal/GameDescription.jsx","components/loading/LoadingComponent.jsx","components/modal/GallerySelector.jsx","components/modal/MainImageGallery.jsx","components/modal/Platforms.jsx","components/modal/GameGallery.jsx","components/modal/GeneralInfo.jsx","components/modal/HeroImageModal.jsx","components/modal/Rating.jsx","components/modal/CardContent.jsx","components/videogames-lists/GameMediumCard.jsx","components/search-page/OrderBy.jsx","components/search-page/ResultHeader.jsx","hooks/usePagination.js","hooks/useFullData.js","components/helpers/ShowMoreButton.jsx","components/search-page/SearchPage.jsx","data/menu.js","components/header/ListDropDown.jsx","components/header/ListItem.jsx","components/header/SearchButton.jsx","components/header/SearchBar.jsx","components/header/MenuList.jsx","components/header/MenuItem.jsx","components/header/Navbar.jsx","components/header/Header.jsx","components/home/CheckNow.jsx","assets/re-v.jpg","components/home/Home.jsx","components/videogames-lists/GameSmallCard.jsx","components/videogames-lists/GameList.jsx","router/history.js","components/genres-page/GamesGenreGrid.jsx","components/genres-page/GenrePage.jsx","components/game-page/GameResults.jsx","components/game-page/GamePage.jsx","router/GameRouter.jsx","WhatGameApp.js","index.js"],"names":["DataContext","createContext","mainUrl","api_key","queryGame","urlGamePage","GetGames","page","a","tempPage","undefined","fetch","response","json","results","next","previous","count","randomResult","Math","floor","random","length","dataGame","map","game","id","name","released","metacritic","image","background_image","slug","rating_star","rating_top","console","error","getGenreGames","dataGenres","genre","total_games","games_count","image_background","getGamesByGenre","genreInput","includes","gameByGenre","listGame","platforms","calification","rating","ratings","updated","clasification","esrb_rating","gallery","short_screenshots","Error","getDetailsGame","data","description","description_raw","genres","image2","background_image_additional","people_say","developers","publishers","tags","getGameScreenshots","gameScreenshots","screenshot","errror","getGameByName","searchInput","inputSearch","searchResult","result","useFetchGames","pagination","useState","loading","setDataGame","useEffect","then","setTimeout","useFetchGenres","setDataGenres","useGamesByGenre","gamesByGenreData","setGamesByGenreData","useGetGameDetails","gameDetails","setGameDetails","useGetGamesByName","resultData","setResultData","isMounted","useRef","current","useShowContent","initialState","openContent","setOpenContent","handleOpenContent","RatingStar","ratingStars","index","i","round","push","className","GameDescription","LoadingComponent","cleanData","replace","GallerySelector","screenshots","setCurrentScreenshot","src","alt","onClick","effect","MainImageGallery","currentScreenshot","Platforms","platform","GameGallery","screenshotData","setScreenshot","useGetScreenshots","GeneralInfo","publisher","HeroImageModal","Rating","orderRating","sort","b","log","title","style","width","percent","CardContent","handleOpenModal","href","GameMediumCard","gameCalification","isOpen","onRequestClose","overlayClassName","ariaHideApp","OrderBy","value","ResultHeader","usePagination","setPage","currentPage","setCurrentPage","myLoad","setMyLoad","loadMoreGames","setLoadMoreGames","handleNextPage","handlePreviousPage","useFullData","moreLoad","setMoreLoad","fullData","setFullData","setPagination","c","flat","filter","item","ShowMoreButton","myData","eslint-disable-next-line","SearchPage","searchGame","useContext","toString","menuList","content","subMenu","ListDropDown","ListItem","handleClickSubmit","e","preventDefault","to","SearchButton","useHistory","type","SearchBar","history","setSearchGame","inputValue","setInputValue","onSubmit","toLowerCase","onChange","target","MenuList","MenuItem","list","setGamesByGenre","Navbar","Header","CheckNow","backgroundImage","Home","GameSmallCard","GameList","ref","moveToRight","scrollLeft","moveToLeft","createBrowserHistory","GamesGenreGrid","gamesByGenre","GenrePage","GameResults","GamePage","GameRouter","slice","exact","path","component","delayTime","WhatGameApp","setStateGenre","genreLoading","Provider","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ea2e21cd.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const DataContext = createContext()\r\n\r\n","import { useState } from \"react\";\r\nimport Resizer from \"react-image-file-resizer\";\r\n\r\nconst mainUrl = `https://api.rawg.io/api/`;\r\nconst api_key = 'key=566bbd60217a466287e5e182d0437bc8';\r\nconst queryGame = 'games?';\r\nconst queryGenres = 'genres?';\r\nconst urlGamePage = `${mainUrl}${queryGame}${api_key}&page_size=40`;\r\n\r\nexport const GetGames = async ( page ) => {\r\n  let tempPage = ''\r\n  try {\r\n    // const response = await fetch( \r\n    //   (page === undefined)\r\n    //     ? `${mainUrl}${queryGame}${api_key}&page_size=40`\r\n    //     : page\r\n    //  );\r\n\r\n      if(page === undefined || page === '') {\r\n        tempPage = urlGamePage\r\n      } else {\r\n        tempPage = page\r\n      }\r\n    //  debugger\r\n    // const { results, next, previous } = await response.json();\r\n    // debugger\r\n    const response = await fetch(tempPage)\r\n    const {results, next, previous, count} = await response.json()\r\n    // debugger\r\n    // const {next, previous} = data\r\n    const randomResult = results[Math.floor( Math.random() * results.length )]\r\n    // debugger\r\n    const dataGame = results.map(game => {\r\n      return {\r\n        id: game.id,\r\n        name: game.name,\r\n        released: game.released,\r\n        metacritic: game.metacritic,\r\n        image: game.background_image,\r\n        slug: game.slug,\r\n        rating_star: game.rating_top,\r\n        // random: randomResult,\r\n        // nextPage: next,\r\n        // previousPage: previous,\r\n      }\r\n    })\r\n    // debugger\r\n    // const responseNext = await fetch(data.next)\r\n    // const nextPage = await responseNext.json()\r\n\r\n    // const responsePrevious = await fetch(data.previous)\r\n    // const previousPage = await responsePrevious.json()\r\n\r\n\r\n    // debugger\r\n    // debugger\r\n    return [dataGame, next, previous, randomResult, count]\r\n    // return [dataGame, nextPage, previousPage]\r\n    // return [dataGame, next, previous]\r\n    \r\n  } catch (error) {\r\n    console.error('error on: ',  error)\r\n  }\r\n}\r\n\r\n\r\nexport const getGenreGames = async () => {\r\n  const response = await fetch(`${mainUrl}${queryGenres}${api_key}`);\r\n  const { results } = await response.json();\r\n  \r\n  const dataGenres = results.map(genre => {\r\n    return {\r\n      id: genre.id,\r\n      slug: genre.slug,\r\n      name: genre.name,\r\n      total_games: genre.games_count,\r\n      image: genre.image_background\r\n    }\r\n  })\r\n  \r\n  return dataGenres\r\n}\r\n\r\nexport const getGamesByGenre = async ( genre ) => {\r\n  // debugger\r\n  try {\r\n    let genreInput = ''\r\n    // debugger\r\n    if(genre.includes('genres=')) {\r\n      genreInput = genre\r\n      // debugger\r\n      // debugger\r\n    } else {\r\n      genreInput = `${mainUrl}${queryGame}${api_key}&genres=${genre}&page=1&page_size=40`\r\n      // debugger\r\n    }    \r\n    // debugger\r\n    const response = await fetch( genreInput );\r\n    // debugger\r\n    const { results, next, previous, count } = await response.json();\r\n    // debugger\r\n    // debugger\r\n  const gameByGenre = results.map( listGame => {\r\n    return {\r\n      name: listGame.name,\r\n      slug: listGame.slug,\r\n      platforms: listGame.platforms,\r\n      released: listGame.released,\r\n      image: listGame.background_image,\r\n      calification: listGame.rating,\r\n      rating_star: listGame.rating_top,\r\n      ratings: listGame.ratings,\r\n      metacritic: listGame.metacritic,\r\n      updated: listGame.updated,\r\n      clasification: listGame.esrb_rating,\r\n      gallery: listGame.short_screenshots\r\n    }\r\n  })\r\n\r\n  return [gameByGenre, next, previous, count]\r\n  } catch (error) {\r\n    console.error(new Error(error))\r\n  }\r\n}\r\n\r\nexport const getDetailsGame = async ( game ) => {\r\n  const response = await fetch(`${mainUrl}games/${game}?${api_key}`)\r\n  const data = await response.json();\r\n  // debugger\r\n  return {\r\n    id: data.id,\r\n    name: data?.name,\r\n    slug: data?.slug,\r\n    description: data?.description_raw,\r\n    metacritic: data?.metacritic,\r\n    released: data?.released,\r\n    image: data?.background_image,\r\n    genre: data?.genres,\r\n    image2: data?.background_image_additional,\r\n    calification: data?.rating,\r\n    rating_star: data?.rating_top,\r\n    people_say: data?.ratings,\r\n    platforms: data?.platforms,\r\n    developers: data?.developers,\r\n    publishers: data?.publishers,\r\n    clasification: data?.esrb_rating,\r\n    tags: data?.tags\r\n  }\r\n}\r\n\r\nexport const getGameScreenshots = async ( game ) => {\r\n try {\r\n  const response = await fetch(`${mainUrl}games/${game}/screenshots?${api_key}`);\r\n  const { results } = await response.json();\r\n  \r\n  const gameScreenshots = results.map(screenshot => {\r\n    return {\r\n      id: screenshot.id,\r\n      screenshot: screenshot.image\r\n    }\r\n  })\r\n\r\n  return gameScreenshots;\r\n } catch (error) {\r\n   console.errror(error)\r\n }\r\n  \r\n}\r\n\r\nexport const getGameByName = async ( searchInput ) => {\r\n  let inputSearch = ''\r\n  // debugger\r\n  // switch(searchInput) {\r\n  //   case searchInput == undefined:\r\n  //     inputSearch = null\r\n  //     break\r\n      \r\n  //     case searchInput !== undefined:\r\n  //       inputSearch = `${mainUrl}${queryGame}${api_key}&search=${searchInput}`\r\n  //       break\r\n  //   case searchInput.includes('.com'):\r\n  //     inputSearch = searchInput\r\n  //     break\r\n  //   default:\r\n  //     return inputSearch\r\n    \r\n  // }\r\n  // debugger\r\n  if(searchInput && searchInput.includes('.com')){\r\n    inputSearch = `${searchInput}&page_size=40`\r\n  } else if(searchInput) {\r\n    inputSearch =`${mainUrl}${queryGame}${api_key}&search=${searchInput}&page_size=40`\r\n  } \r\n  // debugger\r\n  const response = await fetch(inputSearch)\r\n  // debugger\r\n  // const response = await fetch(\r\n  //   (searchInput && searchInput.includes('.com'))\r\n  //     ? searchInput\r\n  //     : `${mainUrl}${queryGame}${api_key}&search=${searchInput}`\r\n  // );\r\n  // const response = await fetch(`${mainUrl}${queryGame}${api_key}&search=${searchInput}`);\r\n  const { results, next, previous } = await response.json();\r\n  // debugger\r\n  // const responseNext = await fetch(next)\r\n  // const { results: }\r\n  // const responsePrevious = await fetch(previous)\r\n  // debugger\r\n  const searchResult = results.map( result => {\r\n    return {\r\n      id: result.id,\r\n      name: result.name,\r\n      slug: result.slug,\r\n      released: result.released,\r\n      calification: result.rating,\r\n      rating_star: result.rating_top,\r\n      image: result.background_image,\r\n      metacritic: result.metacritic\r\n    }\r\n  })\r\n  // debugger\r\n  return [searchResult,next, previous]\r\n}\r\n\r\nconst paginationFetch = async ( page ) => {\r\n  const response = await fetch(page)\r\n  const { results } = await response.json()\r\n}","import { useEffect, useRef, useState } from \"react\"\r\nimport { getDetailsGame, GetGames, getGamesByGenre, getGenreGames, getGameScreenshots, getGameByName, resizeFile } from \"../data/fetchGames\"\r\n\r\nexport const useFetchGames = ( pagination ) => {\r\n  const [dataGame, setDataGame] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    // debugger\r\n    GetGames( pagination )\r\n      .then(game => {\r\n        setTimeout(() => {\r\n          setDataGame({\r\n            data: game,\r\n            loading: false\r\n          })\r\n        }, 2000);\r\n      })\r\n  }, [ pagination ])\r\n  // debugger\r\n  return dataGame\r\n}\r\n\r\nexport const useFetchGenres = () => {\r\n  const [dataGenres, setDataGenres] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGenreGames()\r\n      .then(genre => {\r\n        setTimeout(() => {\r\n          setDataGenres({\r\n            data: genre,\r\n            loading: false\r\n          })\r\n        }, 2000);\r\n      })\r\n  }, [ ])\r\n  // debugger\r\n  return dataGenres\r\n}\r\n\r\nexport const useGamesByGenre = ( genre ) => {\r\n  const [gamesByGenreData, setGamesByGenreData] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGamesByGenre(genre)\r\n      .then(listGame => {\r\n        setTimeout(() => {\r\n          setGamesByGenreData({\r\n            data: listGame,\r\n            loading: false\r\n          })\r\n        }, 3000);\r\n      })\r\n  }, [ genre ])\r\n\r\n  return gamesByGenreData\r\n}\r\n\r\nexport const useGetGameDetails = ( game ) => {\r\n  const [gameDetails, setGameDetails] = useState({\r\n    data: { },\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getDetailsGame(game)\r\n      .then(dataGame => {\r\n        setTimeout(() => {\r\n          setGameDetails({\r\n            data: dataGame,\r\n            loading: false\r\n          })\r\n        }, 2000);\r\n      })\r\n    }, [ game ]);\r\n    // debugger\r\n  return gameDetails\r\n}\r\n\r\nexport const useGetScreenshots = ( game ) => {\r\n  const [screenshots, setScreenshot] = useState({\r\n    screenshotData: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGameScreenshots( game )\r\n      .then(screenshot => {\r\n        setTimeout(() => {\r\n          setScreenshot({\r\n            screenshotData: screenshot,\r\n            loading: false\r\n          })\r\n        }, 3000);\r\n      })\r\n\r\n  }, [ game ])\r\n\r\n  return screenshots;\r\n}\r\n\r\nexport const useGetGamesByName = ( searchInput ) => {\r\n  const [resultData, setResultData] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  const isMounted = useRef(true)\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false\r\n    }\r\n  }, [ ])\r\n\r\n  useEffect(() => {\r\n    getGameByName( searchInput )\r\n      .then(result => {\r\n        setTimeout(() => {\r\n          setResultData({\r\n            data: result,\r\n            loading: false\r\n          })\r\n        }, 3000);\r\n      })\r\n  }, [ searchInput ])\r\n// debugger\r\n  return resultData\r\n}\r\n\r\n// export const useResizeImage = ( image = 'https://media.rawg.io/media/screenshots/a87/a8733e877f8fbe45e4a727c22a06aa2e.jpg') => {\r\n//   const [resizeImage, setResizeImage] = useState({\r\n//     lowImage: {},\r\n//     loading: true\r\n//   })\r\n\r\n//   useEffect(() => {\r\n//     resizeFile(image)\r\n//       .then(myImage => {\r\n//         setResizeImage({\r\n//           lowImage: myImage,\r\n//           loading: false\r\n//         })\r\n//       })\r\n//   })\r\n//   // debugger\r\n//   return resizeImage\r\n// }","import { useState } from \"react\";\r\n\r\nexport const useShowContent = ( initialState = false ) => {\r\n  const [openContent, setOpenContent] = useState(initialState);\r\n\r\n  const handleOpenContent = () => {\r\n    openContent ? setOpenContent(false) : setOpenContent( true )\r\n  }\r\n\r\n  return [openContent, handleOpenContent]\r\n  \r\n}","export default __webpack_public_path__ + \"static/media/horizon.41cc8253.jpg\";","import React from 'react'\r\nimport { RiStarFill as StarIcon} from 'react-icons/ri';\r\n\r\nexport const RatingStar = ({ rating_star, index }) => {\r\n  let ratingStars = []\r\n  // const myRating = \r\n  if( rating_star ) {\r\n    for(let i = 0; i < Math.round(rating_star); i++) {\r\n     ratingStars.push(<StarIcon key={i} className=\"star--icon\"/>)\r\n     }\r\n  }\r\n  // return ratingStars\r\n  // debugger\r\n  return (\r\n    <div className=\"rating--star\">\r\n      {\r\n        ratingStars\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GameDescription = ({ data }) => {\r\n  const { description } = data;\r\n  // debugger\r\n  return (\r\n    <div id=\"description--game\" className=\"game__description animate__animated animate__fadeIn\">\r\n      <h3 className=\"game--subtitles\">Description</h3>\r\n      <p className=\"game--description\">{ description }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport '../../styles/loading-style.css';\r\n\r\nexport const LoadingComponent = ({data}) => {\r\n  // debugger\r\n  // const { searchGame } = data\r\n  const cleanData = !!data && data.replace(/-/gi, ' ')\r\n  return (\r\n    <div className=\"loading__container\">\r\n      <div className=\"animation__container\">\r\n        <div className=\"loading--animation\"></div>\r\n        <div className=\"loading--animation2\"></div>\r\n        <div className=\"loading--animation3\"></div>\r\n        <div className=\"loading--animation4\"></div>\r\n      </div>\r\n      <h2 className=\"loading--text\">Loading {cleanData}</h2>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { LoadingComponent } from '../loading/LoadingComponent';\r\n\r\nexport const GallerySelector = ({ screenshots, setCurrentScreenshot }) => {\r\n  const {screenshot, name} = screenshots;\r\n  // debugger\r\n  const handleLoad = () => {\r\n    return <LoadingComponent />\r\n  }\r\n  return (\r\n    <figure className=\"game__gallery__selection\">\r\n      <LazyLoadImage \r\n        className=\"selection--image\" src={ screenshot } alt={ name }\r\n        onClick={() => setCurrentScreenshot(screenshot)}\r\n        effect=\"opacity\"\r\n      //  afterLoad={ handleLoad }\r\n      // visibleByDefault={ Image.src === '' }\r\n        />\r\n    </figure>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const MainImageGallery = ( {currentScreenshot} ) => {\r\n  // debugger\r\n  return (\r\n    <figure className=\"main__image__gallery\">\r\n      <img className=\"main--gallery--image\" src={ currentScreenshot } alt=\"horizon\"/>\r\n    </figure>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Platforms = ( { platforms } ) => {\r\n  // debugger\r\n  return (\r\n    <div className=\"game__platforms\">\r\n      <h3 className=\"game--subtitles\">Platforms</h3>\r\n      <ul className=\"platforms\">\r\n        {\r\n          platforms.map(({ platform }) => (\r\n            <li key={platform.id} className=\"platform--item\">{ platform.name }</li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useGetScreenshots } from '../../hooks/useFetchGame'\r\nimport { LoadingComponent } from '../loading/LoadingComponent'\r\nimport { GallerySelector } from './GallerySelector'\r\nimport { MainImageGallery } from './MainImageGallery'\r\nimport { Platforms } from './Platforms'\r\n\r\nexport const GameGallery = ({ data }) => {\r\n  const { image, image2, name, slug } = data;\r\n  const { screenshotData, loading } = useGetScreenshots( slug )\r\n  // const { screenshot } = loading!== true && screenshotData[0]\r\n  // debugger\r\n  const [currentScreenshot, setCurrentScreenshot] = useState( image2 )\r\n\r\n  return (\r\n    <div className=\"game__gallery\">\r\n      <h3 className=\"game--subtitles\">Gallery</h3>\r\n      {\r\n        loading\r\n        ? <LoadingComponent />\r\n        : <div>\r\n            <MainImageGallery currentScreenshot={ currentScreenshot } />\r\n              <div className=\"carousel__item\">\r\n                {\r\n                  screenshotData.map( screenshots => (\r\n                    <GallerySelector \r\n                      key={screenshots.id} \r\n                      screenshots={screenshots}\r\n                      setCurrentScreenshot={setCurrentScreenshot}\r\n                    />\r\n                  ))\r\n                }\r\n                </div>  \r\n            </div>\r\n      }\r\n      \r\n      {/* <Platforms platforms={ platforms }/> */}\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GeneralInfo = ({ data }) => {\r\n  const { publishers, released, metacritic, clasification, genre } = data;\r\n  // if(clasification.name || publishers)\r\n  // debugger\r\n  return (\r\n    <div className=\"game__info\">\r\n      <p className=\"info--title\">Publisher: { publishers.map(publisher => ( \r\n        publisher.name && <span key={ publisher.id }>{publisher.name}</span> )) }</p>\r\n\r\n      <p className=\"info--title\">Release-Date: <span>{ released }</span></p>\r\n      <p className=\"info--title\">Metacritic: <span>{ metacritic }</span></p>\r\n      {\r\n        clasification !== null && <p className=\"info--title\">ESRB: <span>{ clasification.name }</span></p>\r\n      }\r\n      <p className=\"info--title\">Gender: <span>{ genre.map(genre => `${genre.name} `)  }</span></p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { RatingStar } from './RatingStar'\r\n\r\nexport const HeroImageModal = ( {data} ) => {\r\n  const { slug, name, image, rating_star, rating } = data;\r\n  // debugger\r\n  return (\r\n    <>\r\n    <figure className=\"game__img\">\r\n      <img className=\"card--image\" src={ image } alt={ slug }/>\r\n      <div className=\"rating__stars\">\r\n        <h2 className=\"card--title\">{ name }</h2>\r\n        <RatingStar rating_star={ rating_star }/>\r\n      </div>\r\n    </figure>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Rating = ({data }) => {\r\n\r\n  const { people_say } = data;\r\n  const orderRating = people_say.sort((a,b) => {\r\n    if( a.id < b.id ) return 1\r\n    if( a.id > b.id ) return -1\r\n  })\r\n\r\n  // const {}\r\n\r\n  console.log(orderRating)\r\n  // debugger\r\n  return (\r\n      <div className=\"game__char__rating\">\r\n        <h3 className=\"game--subtitles\">What People Say</h3>\r\n        <ul className=\"game__char\">\r\n          {\r\n            orderRating.map(rating => (\r\n              <li key={  rating.id } className={ `game--${rating.title}` } style={{width: `${rating.percent}%`}}></li>\r\n            ))\r\n          }\r\n\r\n        </ul>\r\n        <ul className=\"rating__tags\">\r\n          {\r\n            orderRating.map(rating => (\r\n              <li key={rating.id} className=\"rating--tag\"> {rating.title} <div className={ `square--${rating.title}` }></div></li>\r\n            ))\r\n          }\r\n        </ul>\r\n      </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport Horizon from '../../assets/horizon.jpg'\r\nimport { useGetGameDetails } from '../../hooks/useFetchGame';\r\nimport { GameDescription } from './GameDescription';\r\nimport { GameGallery } from './GameGallery';\r\nimport { GeneralInfo } from './GeneralInfo';\r\nimport { HeroImageModal } from './HeroImageModal';\r\nimport { useShowContent } from '../../hooks/useShowContent';\r\nimport { Rating } from './Rating';\r\nimport { Platforms } from './Platforms';\r\nimport { DataContext } from '../../context/DataFetchContext';\r\nimport { LoadingComponent } from '../loading/LoadingComponent';\r\n\r\n\r\nexport const CardContent = ( { slug } ) => {\r\n  const { data, loading } = useGetGameDetails( slug );\r\n  const { platforms } = data\r\n  // const { openContent, handleOpenModal } = useContext(DataContext)\r\nconst  [openContent, handleOpenModal] = useShowContent()\r\n  // debugger\r\n  return (\r\n    <div className=\"card__info\">\r\n        {\r\n          loading\r\n          ? <LoadingComponent data={ slug }/>\r\n          : <div className=\"card__hero animate__animated animate__fadeIn\">\r\n              <div className=\"card__main__content\">\r\n                <HeroImageModal data={ data }/>\r\n                <GeneralInfo data={ data }/>\r\n              </div>\r\n              <a\r\n                className=\"submit--button\"\r\n                onClick={ handleOpenModal }\r\n                href=\"#description--game\"\r\n              > {\r\n                !openContent ? 'Read More' : 'Read Less'\r\n              } </a>\r\n              {\r\n                openContent && <GameDescription  data={ data }/>\r\n              }\r\n              \r\n              <GameGallery data={ data } />\r\n              <Rating data={ data }/>\r\n              <Platforms platforms={ platforms }/>\r\n            </div>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { LazyLoadComponent, LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport Horizon from '../../assets/horizon.jpg';\r\nimport { RatingStar } from '../modal/RatingStar';\r\nimport { InteractiveButtons } from './InteractiveButtons';\r\nimport Modal from 'react-modal';\r\nimport { useShowContent } from '../../hooks/useShowContent';\r\nimport { CardContent } from '../modal/CardContent';\r\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\r\nimport { LoadingComponent } from '../loading/LoadingComponent';\r\nimport { CgArrowsExpandUpRight } from 'react-icons/cg'\r\n\r\nexport const GameMediumCard = ({data}) => {\r\n  const [ openContent, handleOpenContent ] = useShowContent()\r\n  // debugger\r\n  const { name, image, calification, metacritic, rating_star,  slug } = data\r\n  // debugger\r\n  // debugger\r\n  // debugger\r\n  let gameCalification = []\r\n  if(metacritic >= 90 ) {\r\n    gameCalification.push(<h2 key={1} className=\"calification high--rate--color\">{ metacritic }</h2>)\r\n  } else if ( metacritic >= 70 && metacritic < 90 ) {\r\n    gameCalification.push(<h2 key={2} className=\"calification medium--rate--color\">{ metacritic }</h2>)\r\n  } else if(metacritic < 70){\r\n    gameCalification.push(<h2 key={3} className=\"calification low--rate--color\">{ metacritic }</h2>)\r\n  }\r\n  // debugger\r\n  const handleLoading = () => {\r\n    return <h1>LOADING////</h1>\r\n  }\r\n  return (\r\n    <LazyLoadComponent className=\"game__medium__card\" \r\n    >\r\n      <figure className=\"game__medium__container\">\r\n        <LazyLoadImage \r\n          // placeholderSrc=\"../../assets/horizon.jpg\"\r\n          className=\"game--image--medium animate__animated animate__fadeIn\"\r\n          src={ image } alt=\"videogame\"\r\n          effect=\"opacity\" \r\n          \r\n          // beforeLoad={ () => handleLoading() }\r\n          // visibleByDefault={ image.src === '../../assets/horizon.jpg' }\r\n        />\r\n        \r\n      <div className=\"game__content animate__animated animate__fadeIn\">\r\n        <h2 className=\"list--title\">{ name }</h2>\r\n        <div className=\"card__medium__info\">\r\n          {\r\n            gameCalification\r\n          }\r\n          <RatingStar rating_star={ rating_star }/>\r\n          <CgArrowsExpandUpRight \r\n            className=\"dots\"\r\n            onClick={ handleOpenContent }\r\n          />\r\n        </div>\r\n      </div>\r\n        \r\n\r\n        {/* <InteractiveButtons /> */}\r\n        {/* <div className=\"bottom--fade\"></div> */}\r\n      </figure>\r\n      <Modal\r\n        isOpen={ openContent }\r\n        // onAfterOpen={ handleToggleContent }\r\n        onRequestClose={ handleOpenContent }\r\n        className=\"Modal\"\r\n        overlayClassName=\"Overlay--cards\"\r\n        ariaHideApp={false}\r\n      >\r\n        <CardContent slug={ slug }/>\r\n        <CloseIcon \r\n          className=\"close--icon\"\r\n          onClick={ handleOpenContent }\r\n        />\r\n      </Modal>\r\n    </LazyLoadComponent>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const OrderBy = () => {\r\n  return (\r\n    <>\r\n      <label className=\"list--title\">Order By </label>\r\n      <select name=\"order\" id=\"order\" className=\"order__options\">\r\n        <option value=\"abc\">A-Z</option>\r\n        <option value=\"abc\">Z-A</option>\r\n        <option value=\"number\">0-9</option>\r\n        <option value=\"number\">9-0</option>\r\n      </select>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { OrderBy } from './OrderBy';\r\nimport { SuggestionsSearch } from './SuggestionsSearch';\r\n\r\nimport '../../styles/game-page-style.css';\r\nexport const ResultHeader = ( {page} ) => {\r\n  // debugger\r\n  return (\r\n    <form className=\"result\">\r\n      <div className=\"header__result\">\r\n        <h3 className=\"list--title\">Search <span className=\"highlight--text\">{ page }</span></h3>\r\n        <OrderBy />\r\n      </div>\r\n      {/* {\r\n        cleanedGames.length <= 0 && <SuggestionsSearch data={ data } />\r\n      } */}\r\n    </form>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const usePagination = ( ) => {\r\n  \r\n  const [page, setPage] = useState( '' )\r\n  const [currentPage, setCurrentPage] = useState( 1 )\r\n  const [myLoad, setMyLoad] = useState( true )\r\n  const [loadMoreGames, setLoadMoreGames] = useState(false)\r\n  // debugger\r\n  const handleNextPage = ( page ) => {\r\n    if(page){\r\n    setPage( page )\r\n    setLoadMoreGames(true)\r\n    // setCurrentPage(currentPage + 1)\r\n    // setMyLoad(true)\r\n  }\r\n  }\r\n  \r\n  const handlePreviousPage = ( page ) => {\r\n    \r\n    if(page) {\r\n      setPage( page )\r\n      setCurrentPage(currentPage - 1)\r\n      // setMyLoad(true)\r\n    }\r\n  }\r\n  // debugger\r\n  return {handleNextPage, handlePreviousPage, page, myLoad, currentPage, setMyLoad, setPage, setCurrentPage, loadMoreGames, setLoadMoreGames}\r\n}\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const useFullData = ( data ) => {\r\n  const [moreLoad, setMoreLoad] = useState([])\r\n  const [fullData, setFullData] = useState()\r\n  const [pagination, setPagination] = useState()\r\n  useEffect(() => {\r\n    setMoreLoad(c => [...c, data[0]])\r\n    // debugger\r\n    setPagination({\r\n      next: data[1],\r\n      previous: data[2],\r\n      count: data[4],\r\n      // fullData: moreLoad.flat().filter(item => {return item !== undefined})\r\n    })\r\n    // debugger\r\n  }, [ data ])\r\n  \r\n  useEffect(() => {\r\n    setFullData(moreLoad?.flat().filter(item => {return item !== undefined}))\r\n  }, [ moreLoad ])\r\n  // debugger\r\n  return { moreLoad, pagination, fullData, setMoreLoad }\r\n}","import React from 'react'\r\nimport { usePagination } from '../../hooks/usePagination'\r\n\r\nexport const ShowMoreButton = ( {myData} ) => {\r\n  const { handleNextPage, loadMoreGames, next } = !!myData && myData\r\n    // debugger\r\n  return (\r\n    <div className=\"scroll__more\">\r\n      <button \r\n        className=\"show--more\"\r\n        onClick={() => handleNextPage(next)}\r\n        eslint-disable-next-line \r\n        // className={ myLoad &&'loading--button--animation'  }\r\n      >{\r\n        loadMoreGames\r\n          ?  'loading...'\r\n          : 'Show More'\r\n      }</button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { DataContext } from '../../context/DataFetchContext'\r\nimport { useFetchGames, useGetGamesByName } from '../../hooks/useFetchGame'\r\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\r\nimport { ResultHeader } from './ResultHeader'\r\nimport { SuggestionsSearch } from './SuggestionsSearch'\r\nimport { IoIosArrowBack as LeftArrow, IoIosArrowForward as RightArrow } from 'react-icons/io'\r\nimport { LoadingComponent } from '../loading/LoadingComponent'\r\nimport { Pagination } from '../pagination/Pagination'\r\nimport { usePagination } from '../../hooks/usePagination'\r\nimport { useFullData } from '../../hooks/useFullData'\r\nimport { ShowMoreButton } from '../helpers/ShowMoreButton'\r\n\r\nexport const SearchPage = () => {\r\n  const { searchGame } = useContext( DataContext )\r\n\r\n  const {handleNextPage, handlePreviousPage, page, myLoad, currentPage, setMyLoad, setPage, setCurrentPage, loadMoreGames, setLoadMoreGames} = usePagination(  )\r\n  \r\n  useEffect(() => {\r\n    setPage(searchGame)\r\n  }, [ searchGame ])\r\n\r\n  const { data, loading } = useGetGamesByName( page )\r\n  const { moreLoad, pagination, fullData, setMoreLoad } = useFullData(data)\r\n  \r\n  const { next } = !!pagination && pagination\r\n  useEffect(() => {\r\n    setMyLoad(loading)\r\n  }, [ data ])\r\n\r\n  // useEffect(() => {\r\n    \r\n  // }, [ loading ])\r\n\r\n  useEffect(() => {\r\n    // setCurrentPage(1)\r\n    setMyLoad(true)\r\n    setMoreLoad([])\r\n    setLoadMoreGames(false)\r\n  }, [searchGame])\r\n\r\n  useEffect(() => {\r\n    setLoadMoreGames(false)\r\n  }, [ fullData ])\r\n  \r\n  // debugger\r\n  // debugger\r\n  let cleanedGames = [] \r\n  \r\n  if(data[0]) {\r\n    // debugger\r\n    cleanedGames = data[0].filter(game => {\r\n        // console.log(game.slug)\r\n      // debugger\r\n      if (game.slug.includes(searchGame)) return game.rating_star >= 1\r\n    })\r\n  }\r\n\r\n  // const handleLoadingMoreGames = () => {\r\n\r\n  // }\r\n\r\n  // for(let i = 1; i <=10; i++) {\r\n  //   pages.push(i);\r\n  // }\r\n  // debugger\r\n  \r\n  return (\r\n    \r\n      <>\r\n      {\r\n        myLoad \r\n          ? <LoadingComponent data={ searchGame }/>\r\n          : <section className=\"second__container games__list\">\r\n          <ResultHeader page={ page }/> \r\n          <div className=\"cards__medium__container\">\r\n              {\r\n                fullData.map( data => (\r\n                  <GameMediumCard key={ data.id.toString() }  className=\"animate__animated animate__fadeIn\" data={ data }/>\r\n                ))\r\n              }\r\n            </div>\r\n            {/* <Pagination pagination={{ handleNextPage, handlePreviousPage, currentPage, next, previous }}/> */}\r\n            </section>\r\n      }\r\n      <ShowMoreButton myData={ {next, handleNextPage, loadMoreGames} }/>\r\n            </>\r\n  )\r\n}\r\n","export const menuList = [\r\n  {\r\n    name: 'Home',\r\n    content: false,\r\n    page: '/',\r\n    subMenu: false\r\n  },\r\n  {\r\n    name: 'Games',\r\n    content: false,\r\n    page: '/games',\r\n    subMenu: false\r\n  },\r\n  {\r\n    name: 'Genres',\r\n    content: true,\r\n    page: '/genres',\r\n    subMenu: true\r\n  },\r\n  {\r\n    name: 'API',\r\n    content: false,\r\n    page: '/',\r\n    subMenu: false\r\n  },\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useFetchGenres } from '../../hooks/useFetchGame'\r\nimport { LoadingComponent } from '../loading/LoadingComponent'\r\n\r\nexport const ListDropDown = () => {\r\n  const { data, loading } = useFetchGenres()\r\n  return (\r\n    <ul className=\"drop__down__list\">\r\n      {\r\n        loading\r\n          ? <LoadingComponent />\r\n          : data.map(({id, name}) => (\r\n            <li key={id} className=\"list--item\">\r\n              <Link>{ name }</Link>\r\n            </li>\r\n          ) )\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { IoMdArrowDropdown as DownArrow } from 'react-icons/io';\r\nimport { Link } from 'react-router-dom';\r\nimport { menuList } from '../../data/menu';\r\nimport { useShowContent } from '../../hooks/useShowContent';\r\nimport { ListDropDown } from './ListDropDown';\r\n\r\nexport const ListItem = ( { handleOpenContent } ) => {\r\n  const [genres, setGenres] = useState(false)\r\n\r\n  // const [ openContent, handleOpenContent ] = useShowContent()\r\n\r\n  const handleClickSubmit = (e) => {\r\n    e.preventDefault()\r\n    handleOpenContent(false)\r\n    console.log('click')\r\n    // unmountComponentAtNode(document.getElementById('root'));\r\n\r\n  }\r\n  return (\r\n    <ul className=\"menu__list\">\r\n      {\r\n        menuList.map(({name, page, subMenu}) => (\r\n          <li \r\n            key={ name }\r\n            className=\"list--item\"\r\n            onClick={ handleClickSubmit }\r\n          >\r\n            <Link to={ page } >\r\n              { name }\r\n            </Link>\r\n            {/* <DownArrow className=\"down--arrow\"/> */}\r\n          </li>\r\n        ))\r\n      }        \r\n    </ul>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import history from ''\r\nimport { AiOutlineSearch as SearchIcon } from 'react-icons/ai';\r\nimport { useHistory } from 'react-router-dom'\r\nexport const SearchButton = () => {\r\n   const history = useHistory(); \r\n  const handleClick = (  ) => {\r\n    // history.replace('./games', null)\r\n    // console.log(history)\r\n    // debugger\r\n  }\r\n  // console.log(history)\r\n  // debugger\r\n  return (\r\n    <button \r\n          type=\"submit\" \r\n          className=\"button--submit\"\r\n          onClick={ handleClick }\r\n        >\r\n        <SearchIcon className=\"search--icon\"/>\r\n       </button>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { unmountComponentAtNode } from 'react-dom'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { DataContext } from '../../context/DataFetchContext';\r\nimport { useGetGamesByName } from '../../hooks/useFetchGame';\r\nimport { LoadingComponent } from '../loading/LoadingComponent';\r\nimport { SearchButton } from './SearchButton';\r\n\r\nexport const SearchBar = ( { handleOpenContent } ) => {\r\n\r\n  const history = useHistory();\r\n  const { setSearchGame } = useContext( DataContext )\r\n  const [inputValue, setInputValue] = useState('')\r\n  // const { setSearchGame } = useContext( SearchContext );\r\n  // setSearchGame({\r\n  //   name: 'arce',\r\n  //   age: 28\r\n  // debugger\r\n  // })\r\n  const handleOnChange = ( e ) => {\r\n    setInputValue(e.target.value)\r\n    // console.log(e.target.value)\r\n  }\r\n\r\n\r\n  const handleSubmit = ( e ) => {\r\n    e.preventDefault();\r\n    if(inputValue.length > 2) {\r\n      const replaceSimbols = /\\s/gi\r\n      setSearchGame( inputValue.toLowerCase().replace(replaceSimbols, '-') )\r\n      setInputValue('')\r\n      handleOpenContent(true)\r\n      history.push('./search-result', null)\r\n      // debugger\r\n      return <LoadingComponent />\r\n    }\r\n    // debugger\r\n    // history.push('./genres')\r\n    // debugger\r\n    // e.history.pushState(inputValue, 'New page', './genres')\r\n  }\r\n  // console.log(resultData)\r\n  // debugger\r\n  return (\r\n    <>\r\n    <form \r\n      className=\"search__bar\"\r\n      onSubmit={ handleSubmit }\r\n      to=\"/games\"\r\n    >\r\n      <input \r\n        className=\"search--input\" \r\n        type=\"search\"\r\n        value={ inputValue }\r\n        onChange={ handleOnChange }\r\n      />\r\n      {/* <Link to=\"/genres\"> \r\n      </Link> */}\r\n      <SearchButton />\r\n    </form>\r\n        </>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useShowContent } from '../../hooks/useShowContent';\r\nimport { ListItem } from './ListItem';\r\nimport { SearchBar } from './SearchBar';\r\nimport { useGetGamesByName } from '../../hooks/useFetchGame';\r\nimport { SearchContext } from '../../context/DataFetchContext';\r\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc'; //YOU ARE HERE\r\n\r\nexport const MenuList = ( { handleOpenContent} ) => {\r\n  return (\r\n      // <div className=\"modal\">\r\n      // <div className=\"menu--overlay\"></div>\r\n      <div className=\"drop__menu\">\r\n        <CloseIcon \r\n                className=\"close--icon \" \r\n                onClick={ handleOpenContent }\r\n              />\r\n          <SearchBar handleOpenContent={ handleOpenContent }/>\r\n        {/* <Link to=\"/results\" className=\"input--link\">\r\n        </Link> */}\r\n        <ListItem handleOpenContent={ handleOpenContent }/>      \r\n        </div>\r\n    // </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { DataContext } from '../../context/DataFetchContext';\r\nimport { menuList } from '../../data/menu';\r\nimport { useFetchGenres } from '../../hooks/useFetchGame';\r\nimport { useHistory } from 'react-router';\r\nimport { LoadingComponent } from '../loading/LoadingComponent';\r\n\r\nexport const MenuItem = ({list}) => {\r\n  const { data, loading } = useFetchGenres()\r\n  // debugger\\\r\n  const { setGamesByGenre } = useContext\r\n  (DataContext)\r\n  const history = useHistory()\r\n\r\n  const handleGenrePage = ( genre ) => {\r\n    // debugger\r\n    setGamesByGenre( genre )\r\n    // debugger\r\n    history.push('./genres', null)\r\n    return <LoadingComponent />\r\n  }\r\n  // debugger\r\n  return (\r\n\r\n      <li \r\n        key={ list.name }\r\n        className={ \r\n          (list.subMenu)\r\n          ? 'list--item  submenu'\r\n          : 'list--item'\r\n         }\r\n        // onClick={ handleClickSubmit }\r\n        >\r\n          {/* { JSON.parse((item)) } */}\r\n          {\r\n            (!list.subMenu) \r\n            ? <Link \r\n                to={ list.page }\r\n              >\r\n                { list.name }\r\n              </Link>\r\n            : <Link \r\n                to={ list.page }\r\n          >\r\n                { list.name }\r\n              </Link>\r\n          }\r\n          {\r\n            list.subMenu && \r\n            <ul className=\"sub--menu animate__animated animate__fadeIn\">\r\n              {\r\n                !loading &&\r\n                data.map(item => ((\r\n                  <li\r\n                  key={item.slug} \r\n                    className=\"sub--menu--item\"\r\n                    onClick={ () => handleGenrePage(item.slug) }\r\n                    \r\n                  >\r\n                    { item.name }\r\n                  </li>\r\n                )))\r\n              }\r\n            </ul>\r\n          }\r\n      </li>\r\n      )\r\n  \r\n}\r\n","import React from 'react'\r\nimport { IoMdArrowDropdown as DownArrow } from 'react-icons/io';\r\nimport { menuList } from '../../data/menu';\r\nimport { ListDropDown } from './ListDropDown';\r\nimport { MenuItem } from './MenuItem';\r\nimport { SearchBar } from './SearchBar';\r\nimport { SubMenuItem } from './SubMenuItem';\r\n\r\nexport const Navbar = ({ handleOpenContent }) => {\r\n  // const handleClickSubmit = (e) => {\r\n  //   e.preventDefault()\r\n  //   handleOpenContent(false)\r\n  //   console.log('click')\r\n  //   // unmountComponentAtNode(document.getElementById('root'));\r\n\r\n  // }\r\n  // console.log(menuList)\r\n  // debugger\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul className=\"navbar__container\">\r\n      {\r\n        menuList.map( list => (\r\n          <MenuItem key={list.name} list={ list }/>\r\n        ))\r\n      }\r\n      <SearchBar handleOpenContent={handleOpenContent}/>\r\n      </ul>\r\n      <ListDropDown />\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport {  FiMenu as IconMenu } from 'react-icons/fi';\r\nimport '../../styles/header-style.css'\r\nimport { MenuList } from './MenuList';\r\nimport { Navbar } from './Navbar';\r\nimport { useShowContent } from '../../hooks/useShowContent';\r\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc'; //YOU ARE HERE\r\nimport { DataContext } from '../../context/DataFetchContext';\r\n\r\n\r\nexport const Header = () => {\r\n  \r\n  // const [openContent, handleOpenContent] = useShowContent()\r\n  \r\n  const { openContent, handleOpenContent } = useContext(DataContext)\r\n  // debugger\r\n  return (\r\n    <header className=\"main__container\">\r\n      <div className=\"header animate__animated animate__fadeIn\" >\r\n        <h2 className=\"highlight--text\">WhatGame</h2>\r\n        {/* {showContent && <MenuList />} */}\r\n        \r\n        {\r\n          (!openContent)\r\n            ? <IconMenu \r\n                onClick={ handleOpenContent }\r\n                className=\"icon--menu animate__animated animate__fadeIn\"\r\n              />\r\n            : <CloseIcon \r\n                className=\"close--icon animate__animated animate__fadeIn\" \r\n                onClick={ handleOpenContent }\r\n              />\r\n            \r\n\r\n        }\r\n        <Modal\r\n          isOpen={ openContent }\r\n          onRequestClose={ handleOpenContent }\r\n          ariaHideApp={ false }\r\n          className=\"Modal--menu\"\r\n          overlayClassName=\"Overlay\"\r\n        >\r\n          <MenuList handleOpenContent={handleOpenContent}/>\r\n          \r\n        </Modal>\r\n        <Navbar handleOpenContent={ handleOpenContent }/>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useShowContent } from '../../hooks/useShowContent';\r\nimport { CardContent } from '../modal/CardContent';\r\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\r\nimport { useGetGameDetails } from '../../hooks/useFetchGame';\r\nimport { LoadingComponent } from '../loading/LoadingComponent';\r\n\r\n\r\nexport const CheckNow = ({ slug }) => {\r\n\r\n  const [ openContent, handleOpenContent ] = useShowContent()\r\n  const { data, loading } = useGetGameDetails( slug );\r\n  // debugger\r\n  return (\r\n    <div className=\"check__now\">\r\n      <p>Add</p>\r\n      <button \r\n        type=\"button\"\r\n        className=\"submit--button\"\r\n        onClick={ handleOpenContent }\r\n      > Check Now\r\n      </button>\r\n      <p>Info</p>\r\n      <Modal\r\n        isOpen={ openContent }\r\n        // onAfterOpen={ handleToggleContent }\r\n        onRequestClose={ handleOpenContent }\r\n        className=\"Modal\"\r\n        overlayClassName=\"Overlay--cards\"\r\n        ariaHideApp={false}\r\n        style={{ backgroundImage:`url(${data.image})` }}\r\n      >\r\n        {\r\n          loading \r\n            ? <LoadingComponent />\r\n            : <CardContent slug={ slug }/>\r\n        }\r\n        <CloseIcon \r\n          className=\"close--icon\"\r\n          onClick={ handleOpenContent }\r\n        />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/re-v.1a43f246.jpg\";","import React, { useEffect, useState } from 'react'\r\nimport resident from '../../assets/re-v.jpg';\r\nimport { useFetchGames, useGetGameDetails } from '../../hooks/useFetchGame';\r\nimport '../../styles/home-style.css';\r\nimport { LoadingComponent } from '../loading/LoadingComponent';\r\nimport { CheckNow } from './CheckNow';\r\n\r\nexport const Home = () => {\r\n  const { loading, data } = useFetchGames()\r\n  // const  next  = !loading && data[1] \r\n  // debugger\r\n  // const  previous  = !loading && data[2] \r\n  // debugger\r\n  // const [myRandom, setMyRandom] = useState( 0 )\r\n  // debugger\r\n  // const handleRandom = () => {\r\n  // }\r\n  // useEffect(() => {\r\n  //   // handleRandom()\r\n  //   // debugger\r\n  // }, [ loading ])\r\n  const  random = !loading && data[3]\r\n    // useEffect(() => {\r\n    //   setMyRandom(random)\r\n    // }, [data]) \r\n  // setMyRandom( !loading && data[3])\r\n  const { id, name, background_image, slug } = !loading && random;\r\n  // debugger\r\n  // debugger\r\n\r\n// debugger\r\n  return (\r\n    <section id=\"home\" className=\"main__container home \">\r\n      {\r\n        loading \r\n          ? <LoadingComponent />\r\n          : <figure className=\"hero__img__container     animate__animated animate__fadeIn\">\r\n              <img className=\"hero--img animate__animated animate__fadeIn\" src={ background_image } alt={ name }/>\r\n              <div className=\"bottom--fade\"></div>\r\n              <p className=\"hero--text\">{ name }</p>\r\n              <CheckNow slug={ slug }/> \r\n            </figure> \r\n      }\r\n      {/* <div className=\"hero__text__content\">\r\n        <p className=\"hero--text\">{ name }</p>\r\n      </div> */}\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport Horizon from '../../assets/horizon.jpg';\r\nimport { useShowContent } from '../../hooks/useShowContent';\r\nimport { CardContent } from '../modal/CardContent';\r\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { resizeFile } from '../../data/fetchGames';\r\nimport { useResizeImage } from '../../hooks/useFetchGame';\r\n\r\n\r\nexport const GameSmallCard = ({data}) => {\r\n  const [openContent, handleOpenModal] = useShowContent()\r\n  // debugger\r\n  const { image, name, slug } = data;\r\n  // debugger\r\n  // const { resizeImage } = useResizeImage()\r\n  // const { lowImage, loading } = useResizeImage(image)\r\n  // debugger\r\n  return (\r\n    // <article className=\"game__small__card\">\r\n      \r\n      <figure \r\n        className=\"game__small__container\"\r\n      >\r\n        <LazyLoadImage \r\n          className=\"game--image--small\" \r\n          src={ image } \r\n          alt={ name }\r\n          onClick={ handleOpenModal } \r\n          effect=\"opacity\"\r\n        />\r\n\r\n        <Modal\r\n          isOpen={ openContent }\r\n          onRequestClose={ handleOpenModal }\r\n          ariaHideApp={false}\r\n          className=\"Modal \"\r\n          overlayClassName=\"Overlay--cards\"\r\n          \r\n        >\r\n          <CloseIcon \r\n            className=\"close--icon animate__animated animate__fadeIn\"\r\n            onClick={ handleOpenModal }\r\n          />\r\n          <CardContent slug={ slug }/>\r\n        </Modal>\r\n        <caption className=\"game--name\">{name}</caption>\r\n      </figure>\r\n      \r\n    // </article>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { GameSmallCard } from './GameSmallCard';\r\nimport '../../styles/games-lists.css';\r\nimport { useGamesByGenre } from '../../hooks/useFetchGame';\r\nimport { IoIosArrowBack as LeftArrow, IoIosArrowForward as RightArrow } from 'react-icons/io'\r\n\r\nimport { ArrowsSelectors } from './ArrowsSelectors';\r\nimport { LoadingComponent } from '../loading/LoadingComponent';\r\n// import { ListItem } from '../header/ListItem';\r\nexport const GameList = ({ genre: { slug, name } }) => {\r\n  \r\n  const { data, loading } = useGamesByGenre( slug )\r\n  // const handleScrollVertical = () => {\r\n  //   return window.scroll({\r\n  //     righ: 200,\r\n  //     behavior: 'smooth'\r\n  //   })\r\n  // }\r\n  // debugger\r\n  const ref = useRef( null )\r\n\r\n  const handleRightArrow = ( moveToLeft  ) => {\r\n  ref.current.scrollLeft += moveToLeft;\r\n}\r\n\r\nconst handleLeftArrow = ( moveToRight  ) => {\r\n  ref.current.scrollLeft -= moveToRight;\r\n}\r\n  \r\n  useEffect(() => {\r\n\r\n  }, [ data ])\r\n  // debugger\r\n  return (\r\n    <section className=\"main__container games__list\">\r\n      <h2 className=\"list--title\">Best <span className=\"highlight--text\">{ name }</span> Games</h2>\r\n      {/* <button onClick={() => handleScroll(1000) }>Click to move</button> */}\r\n          {/* <div className=\"cards__container\" ref={ ref }> */}\r\n        {/* <ArrowsSelectors handleRightArrow={ {\r\n          handleRightArrow,  handleLeftArrow\r\n        }}/> */}\r\n          <LeftArrow \r\n            className=\"left--arrow\"\r\n            onClick={ () => handleLeftArrow(1100) }\r\n          />\r\n          <RightArrow \r\n            className=\"right--arrow\"\r\n            onClick={ () => handleRightArrow(1100) }\r\n          />\r\n          <div className=\"cards__container\" ref={ ref }>\r\n          {\r\n            loading\r\n              ? <LoadingComponent />\r\n              : data[0].map(data => (\r\n                <GameSmallCard key={ data.slug } data={ data }/>\r\n              ))\r\n          }\r\n          </div>\r\n          {/* </div> */}\r\n    </section>\r\n  )\r\n}\r\n","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();","import React, { useContext, useEffect, useState } from 'react'\r\nimport { DataContext } from '../../context/DataFetchContext'\r\nimport { useGamesByGenre } from '../../hooks/useFetchGame'\r\nimport { usePagination } from '../../hooks/usePagination'\r\nimport { LoadingComponent } from '../loading/LoadingComponent'\r\nimport { Pagination } from '../pagination/Pagination'\r\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { ShowMoreButton } from '../helpers/ShowMoreButton'\r\nimport { useFullData } from '../../hooks/useFullData'\r\n\r\n\r\nexport const GamesGenreGrid = (  ) => {\r\n  const { gamesByGenre, setGamesByGenre } = useContext(DataContext)\r\n  // debugger\r\n  // const [nextPage, setNextPage] = useState( gamesByGenre )\r\n\r\n\r\n  const {\r\n    handleNextPage, handlePreviousPage, page, myLoad, currentPage, setMyLoad, setPage, setCurrentPage, loadMoreGames, setLoadMoreGames } = usePagination( )\r\n\r\n  useEffect(() => {\r\n    setPage(gamesByGenre)\r\n  }, [ gamesByGenre ])\r\n    \r\n  const { data, loading } = useGamesByGenre( page )\r\n  const {moreLoad, pagination, fullData, setMoreLoad} = useFullData( data )\r\n  const { next } = !!pagination && pagination\r\n\r\n  useEffect(() => {\r\n    setMyLoad(loading)\r\n  }, [ data ])\r\n\r\n  useEffect(() => {\r\n    setMyLoad(true)\r\n    setMoreLoad([])\r\n    setLoadMoreGames(true)\r\n  }, [ gamesByGenre ])\r\n\r\n  useEffect(() => {\r\n    setLoadMoreGames(false)\r\n  }, [ fullData ])\r\n  // debugger\r\n  return (\r\n    <>\r\n      <h2 className=\"list--title\">{ gamesByGenre }</h2>\r\n    {\r\n      myLoad\r\n        ? <LoadingComponent />\r\n        :<>\r\n        <section id=\"scrollableDiv\" className=\"genre__games__grid second__container animate__animated animate__fadeIn\">\r\n          {/* <InfiniteScroll\r\n             dataLength={data[0].length}\r\n             next={ () => setNextPage(next) }\r\n             hasMore={true}\r\n             loader={<h4>Loading...</h4>}\r\n             scrollableTarget=\"scrollableDiv\"\r\n             \r\n          > */}\r\n         {\r\n           fullData.map(data => (\r\n             <GameMediumCard key={ data.id } data={ data }/>\r\n             ))\r\n            }\r\n          {/* </InfiniteScroll> */}\r\n        {/* <Pagination pagination={{ handleNextPage, handlePreviousPage, currentPage, next, previous }}/> */}\r\n        </section>\r\n        <ShowMoreButton myData={ {next, handleNextPage, loadMoreGames} }/>\r\n        </>\r\n    }\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { DataContext } from '../../context/DataFetchContext'\r\nimport { GameList } from '../videogames-lists/GameList'\r\nimport { GameSmallCard } from '../videogames-lists/GameSmallCard'\r\nimport { GenresGrid } from './GenresGrid'\r\nimport { HomeImage } from './HomeImage'\r\n\r\nimport '../../styles/genres-style.css'\r\nimport { useFetchGenres, useGamesByGenre } from '../../hooks/useFetchGame'\r\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\r\nimport { GamesGenreGrid } from './GamesGenreGrid'\r\nimport { LoadingComponent } from '../loading/LoadingComponent'\r\nimport { usePagination } from '../../hooks/usePagination'\r\nimport { Pagination } from '../pagination/Pagination'\r\n\r\nexport const GenrePage = () => {\r\n  // const [gamesByGenre, setGamesByGenre] = useState()\r\n  const { data, loading } = useFetchGenres()\r\n  const {\r\n    handleNextPage, \r\n    handlePreviousPage, \r\n    currentPage, \r\n    page, \r\n    myLoad,\r\n    setMyLoad, setCurrentPage } = usePagination( )\r\n  // debugger\r\n  // const { gamesByGenre  } = useContext(DataContext)\r\n  // const { slug, name} = gamesByGenre\r\n  // useEffect(() => {\r\n  //   // console.log('grid changed')\r\n  //   return () => {\r\n      \r\n  //   }\r\n  // }, [ gamesByGenre ])\r\n  // debugger\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        loading\r\n          ? <LoadingComponent />\r\n          : <>\r\n            <main className=\"genres\">\r\n              {/* <h2 className=\"genres--title\">Genres</h2> */}\r\n              {/* <HomeImage \r\n                className=\"genre__home__img\" \r\n                data={ data }\r\n                />       */}\r\n              <div className=\"hero__text__content\">\r\n                {/* <p className=\"hero--text\">{ name }</p> */}\r\n              </div>\r\n            </main>\r\n\r\n          {/* <GenresGrid gamesByGenre={ gamesByGenre }/> */}\r\n          {/* {\r\n            data.map(genre => (\r\n              <GameList \r\n                key={genre.id} \r\n                genre={genre}\r\n                onClick={ () => setGamesByGenre( genre ) }\r\n              />\r\n            ))\r\n          } */}\r\n          {/* <GamesGenreGrid slug={ slug } /> */}\r\n          <GamesGenreGrid />\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport '../../styles/game-page-style.css';\r\nimport { OrderBy } from '../search-page/OrderBy';\r\nexport const GameResults = ( { data } ) => {\r\n  // debugger\r\n  return (\r\n    <form className=\"result\">\r\n      <div className=\"header__result\">\r\n        <h3 className=\"list--title\">Search <span className=\"highlight--text\">Result ...</span></h3>\r\n        <OrderBy />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { DataContext } from '../../context/DataFetchContext'\r\nimport { useFetchGames, useGetGamesByName } from '../../hooks/useFetchGame'\r\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\r\nimport { IoIosArrowBack as LeftArrow, IoIosArrowForward as RightArrow } from 'react-icons/io'\r\nimport { LoadingComponent } from '../loading/LoadingComponent'\r\nimport { ResultHeader } from '../search-page/ResultHeader'\r\nimport { GameResults } from './GameResults'\r\nimport { GetGames } from '../../data/fetchGames'\r\nimport { usePagination } from '../../hooks/usePagination'\r\nimport { Pagination } from '../pagination/Pagination'\r\nimport { useFullData } from '../../hooks/useFullData'\r\nimport { ShowMoreButton } from '../helpers/ShowMoreButton'\r\n\r\nexport const GamePage = ( ) => {\r\n  const {\r\n    handleNextPage, \r\n    handlePreviousPage, \r\n    currentPage, \r\n    page, \r\n    myLoad,\r\n    setMyLoad, setCurrentPage,loadMoreGames, setLoadMoreGames } = usePagination( )\r\n    \r\n  const { data, loading } = useFetchGames( page )\r\n  const {moreLoad, pagination, fullData} = useFullData( data )\r\n  const { next } = !!pagination && pagination\r\n  // debugger\r\n  // const { next, previuos, count, fullData } = !loading && moreLoad\r\n  // debugger\r\n  // const [moreLoad, setMoreLoad] = useState( [] )\r\n  // const [pagination, setPagination] = useState()\r\n  // // const [fullLoad, setFullLoad] = useState([])\r\n  // // const { next, previous, count } = pagination\r\n  // useEffect(() => {\r\n  //   setMoreLoad(c => [...c, data[0]])\r\n  //   setPagination({\r\n  //     next: data[1],\r\n  //     previous: data[2],\r\n  //     count: data[4],\r\n  //   })\r\n  // }, [ data ])\r\n\r\n  // useEffect(() => {\r\n  //   setFullLoad( moreLoad.flat().filter(item => {return item !== undefined}) )\r\n  // }, [ loading === false ])\r\n  // debugger    \r\n  // debugger\r\n  const results = !loading && data[0]\r\n  // debugger\r\n  // if(data !== []) {\r\n  //   setMoreLoad(moreLoad => [...moreLoad, results])\r\n  // }\r\n  // const next  = !loading && data[1]\r\n  // const previous = !loading && data[2]\r\n  // const count = !loading && data[4]\r\n  // let myData = !loading && [data => [...data, results]]\r\n  // let moreData = !loading && [...myData, results]\r\n  // let fullData = !loading && moreData.flat()\r\n  // const fullData = moreLoad.flat().filter(item => {return item !== undefined})\r\n  // debugger\r\n  useEffect(() => {\r\n    setMyLoad(false)\r\n    setLoadMoreGames(true)\r\n  }, [ data ])\r\n\r\n  useEffect(() => {\r\n    setLoadMoreGames(false)\r\n  }, [ fullData ])\r\n  \r\n  // useEffect(() => {\r\n  //   setFullLoad( moreLoad.flat().filter(item => {return item !== undefined}) )\r\n  // }, [ data ])\r\n\r\n  // debugger\r\n  return (\r\n    \r\n       <>\r\n      {\r\n        loading \r\n          ? <LoadingComponent />\r\n          : <section id=\"games\" className=\"second__container games__list\">\r\n          <GameResults /> \r\n          <div id=\"infinite__scroll\" className=\"cards__medium__container\">\r\n            {/* <InfiniteScroll\r\n            style={\r\n              {\r\n                display: 'flex',\r\n                flexWrap: 'wrap'\r\n              }\r\n            } \r\n              dataLength={ fullData.length }\r\n              next={ () => handleNextPage(pagination.next) }\r\n              inverse={ true }\r\n              hasMore={ true }\r\n              loader={<h3>loading...</h3>}\r\n              scrollableTarget=\"infinite__scroll\"\r\n            > */}\r\n\r\n              {\r\n                fullData.map( data => (\r\n                  <GameMediumCard key={ data.id.toString() }  className=\"animate__animated animate__fadeIn\" data={ data }/>\r\n                  ))\r\n                }\r\n              {/* </InfiniteScroll> */}\r\n            </div>\r\n            {/* <Pagination pagination={{ handleNextPage, handlePreviousPage, currentPage, next, previous }}/> */}\r\n            <ShowMoreButton myData={ { handleNextPage, loadMoreGames, next } }/>\r\n      \r\n    </section>\r\n      }\r\n            </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\r\nimport { SearchPage } from '../components/search-page/SearchPage'\r\nimport { Header } from '../components/header/Header'\r\nimport { Home } from '../components/home/Home'\r\nimport { ModalCard } from '../components/modal/ModalCard'\r\nimport { GameList } from '../components/videogames-lists/GameList'\r\nimport { useFetchGenres } from '../hooks/useFetchGame'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport history from './history'\r\nimport { GenrePage } from '../components/genres-page/GenrePage'\r\nimport { LoadingComponent } from '../components/loading/LoadingComponent'\r\nimport { GamePage } from '../components/game-page/GamePage'\r\n\r\n\r\n\r\nexport const GameRouter = () => {\r\n  const { data, loading } = useFetchGenres()\r\n  const dataSlice =  data.slice(6, 11);\r\n  // debugger\r\n  return (\r\n    <>\r\n    <Router history={ history }>\r\n      {\r\n        loading\r\n          ? <LoadingComponent />\r\n          :<> \r\n            <Header />\r\n            <div>\r\n              <Switch>\r\n                <Route  exact path=\"/\" component={ Home }>\r\n                  <Home/>\r\n                  {\r\n                    data.map(genre => (\r\n                      <LazyLoadComponent \r\n                      key={genre.id}\r\n                      delayTime=\"3000\"\r\n                      >\r\n                      <GameList key={genre.id} genre={genre}/>\r\n                      </LazyLoadComponent>\r\n                      ))\r\n                    }\r\n                </Route>\r\n                <Route exact path=\"/games\" component={ GamePage }>\r\n\r\n                </Route>\r\n                <Route exact path=\"/genres\" component={ GenrePage }>\r\n                </Route>\r\n                <Route exact path=\"/search-result\" component={ SearchPage }>\r\n                </Route>\r\n      \r\n              </Switch>\r\n            </div>\r\n          </> \r\n      }\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { DataContext } from './context/DataFetchContext'\r\nimport { useFetchGenres, useGetGamesByName } from './hooks/useFetchGame'\r\nimport { useShowContent } from './hooks/useShowContent';\r\n\r\nimport { GameRouter } from './router/GameRouter';\r\n\r\nexport const WhatGameApp = () => {\r\n  const [ searchGame, setSearchGame ] = useState( );\r\n  const { resultData, loading } = useGetGamesByName( searchGame )\r\n\r\n  const [stateGenre, setStateGenre] = useState( )\r\n  const { data, loading: genreLoading } = useFetchGenres()\r\n  // debugger\r\n\r\n  const [ openContent, handleOpenContent ] = useShowContent()\r\n  // debugger\r\n  const [gamesByGenre, setGamesByGenre] = useState( '' )\r\n  // debugger\r\n  return (\r\n    <>\r\n      <DataContext.Provider value={ \r\n        {\r\n          resultData,\r\n          searchGame, \r\n          setSearchGame, \r\n          loading,\r\n          data,\r\n          genreLoading,\r\n          setStateGenre,\r\n          openContent,\r\n          handleOpenContent,\r\n          gamesByGenre,\r\n          setGamesByGenre\r\n        } \r\n        }>\r\n        <GameRouter />\r\n      </DataContext.Provider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { WhatGameApp } from './WhatGameApp';\r\n\r\n\r\nimport '../src/styles/global-styles.css';\r\nimport '../src/styles/buttons-styles/buttons-styles.css';\r\nimport '../src/styles/loading-style.css'\r\n\r\nimport { LoadingComponent } from './components/loading/LoadingComponent';\r\nimport { LoadingSmallCards } from './components/loading/LoadingSmallCards';\r\n\r\n\r\nReactDOM.render(<WhatGameApp />, document.querySelector('#root'));"],"sourceRoot":""}