{"version":3,"sources":["components/header/ListDropDown.jsx","components/api-component/ApiComponent.jsx","hooks/useShowContent.js","components/header/ListItem.jsx","components/header/FavGames.jsx","components/header/ListGenresMobile.jsx","data/fetchGames.js","hooks/useScrollTop.js","context/DataFetchContext.js","components/helpers/favoritesReducer.js","assets/horizon.jpg","components/modal/RatingStar.jsx","components/modal/GameDescription.jsx","components/helpers/Slider.jsx","components/loading/LoadingText.jsx","components/modal/GallerySelector.jsx","components/modal/MainImageGallery.jsx","components/modal/Platforms.jsx","components/modal/GameGallery.jsx","components/modal/GeneralInfo.jsx","components/helpers/FavSubmit.js","components/modal/HeroImageModal.jsx","components/modal/Rating.jsx","components/loading/LoadingComponentSmall.jsx","components/animations/BackgroundAnimation.jsx","components/modal/CardContent.jsx","components/videogames-lists/GameMediumCard.jsx","components/search-page/ResultHeader.jsx","hooks/usePagination.js","hooks/useFullData.js","components/helpers/ShowMoreButton.jsx","components/search-page/SearchPage.jsx","components/header/SearchBar.jsx","components/header/MenuList.jsx","components/header/MenuItem.jsx","components/header/SubMenuFavGames.jsx","components/header/Navbar.jsx","components/header/Header.jsx","components/videogames-lists/GameSmallCard.jsx","assets/re-v.jpg","components/helpers/ScrollTop.jsx","components/videogames-lists/GameList.jsx","components/videogames-lists/GamesMap.jsx","components/home/CheckNow.jsx","components/home/Home.jsx","router/history.js","components/genres-page/GamesGenreGrid.jsx","components/genres-page/GenrePage.jsx","components/game-page/GameResults.jsx","components/game-page/GamePage.jsx","components/favorite-games-page/FavGamesPage.jsx","router/GameRouter.jsx","WhatGameApp.js","hooks/useModalGame.js","index.js","data/menu.js","components/loading/LoadingComponent.jsx","components/header/SubMenuItem.jsx","hooks/useFetchGame.js"],"names":["ListDropDown","useContext","DataContext","dataGenres","genreLoading","className","map","id","name","to","ApiComponent","href","target","rel","useShowContent","initialState","useState","openContent","setOpenContent","animation","setAnimation","handleOpenContent","setTimeout","ListItem","favoriteGames","setGamesByGenre","history","useHistory","genreList","menuList","scrollTop","useScrollTop","handleClickSubmit","e","preventDefault","show","show2","showComponent","setShowComponent","changeAnimation","setChangeAnimation","changeAnimation2","setChangeAnimation2","sliceFavList","setSliceFavList","useEffect","sliceFav","slice","clearImmediate","length","handleShow","handleShow2","page","subMenu","saved","count","link","onClick","values","handleGenrePage","genre","push","FavGames","item","ListGenresMobile","slug","mainUrl","api_key","queryGame","urlGamePage","GetGames","Math","floor","random","a","tempPage","undefined","fetch","response","json","results","next","previous","mixGames","randomResult","dataGames","game","released","metacritic","image","background_image","rating_star","rating_top","checked","console","error","getGenreGames","total_games","games_count","image_background","getGamesByGenre","genreInput","includes","mixResults","listGame","platforms","calification","rating","ratings","updated","clasification","esrb_rating","gallery","short_screenshots","Error","getDetailsGame","data","description","description_raw","genres","image2","background_image_additional","people_say","developers","publishers","tags","log","getGameScreenshots","gameScreenshots","screenshot","errror","getGameByName","searchInput","inputSearch","filter","result","showScroll","setShowScroll","window","addEventListener","pageYOffset","scrollTo","top","behavior","createContext","GamesDataContext","favoritesReducer","state","action","type","find","payload","RatingStar","ratingStars","index","i","round","GameDescription","Slider","refSlider","moveToRight","current","scrollLeft","moveToLeft","LoadingText","GallerySelector","setCurrentScreenshot","src","effect","MainImageGallery","screenshotData","currentScreenshot","alt","Platforms","platform","GameGallery","useGetScreenshots","loading","useRef","ref","GeneralInfo","publisher","FavSubmit","dispatch","addToggle","setAddToggle","handleAdd","handleRemove","handleRemoveAll","HeroImageModal","Rating","orderingRating","setOrderingRating","sort","b","title","style","width","percent","LoadingComponentSmall","cleanData","replace","BackgroundAnimation","CardContent","React","memo","gameModalInfo","useGetGameDetails","setHandleData","handleDataMemo","useMemo","handleOpenModal","GameMediumCard","handleOpenGameModal","gameCalification","ResultHeader","searchGame","usePagination","setPage","currentPage","setCurrentPage","myLoad","setMyLoad","loadMoreGames","setLoadMoreGames","handleNextPage","handlePreviousPage","useFullData","moreLoad","setMoreLoad","fullData","setFullData","pagination","setPagination","c","flat","ShowMoreButton","refGames","SearchPage","useGetGamesByName","LoadingComponent","toString","SearchBar","setSearchGame","inputValue","setInputValue","onSubmit","toLowerCase","value","onChange","MenuList","MenuItem","list","openSubMenu","setOpenSubMenu","mounted","SubMenuItem","SubMenuFavGames","Navbar","openFavsMenu","setOpenFavsMenu","renderFavGames","setRenderFavGames","myFavGames","cleanup","Header","isOpen","onRequestClose","ariaHideApp","overlayClassName","GameSmallCard","openGameModal","handleCloseGameModal","setHandleModal","ScrollTop","GameList","fullLoad","setFullLoad","settingLoading","GamesMap","genreCollection","handleGenres","setHandleGenres","delayTime","CheckNow","Home","fetchGames","vh","innerHeight","document","documentElement","setProperty","myCheckNow","setMyCheckNow","createBrowserHistory","GamesGenreGrid","gamesByGenre","useGamesByGenre","setButtonLoad","GenrePage","GameResults","GamePage","FavGamesPage","GameRouter","handleModal","useFetchGames","exact","path","component","Provider","WhatGameApp","resultData","open","mainModal","setMainModal","setOpenGameModal","setGameModalInfo","useModalGame","useFetchGenres","genresData","useReducer","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","querySelector","content","setCleanData","isMounted","dataGame","setDataGame","then","setGenresData","setGenreCollection","item2","gamesByGenreData","setGamesByGenreData","gameDetails","setGameDetails","screenshots","setScreenshot","setResultData"],"mappings":"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","file":"static/js/main.317a2efe.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { useFetchGenres } from '../../hooks/useFetchGame'\nimport { LoadingComponent } from '../loading/LoadingComponent'\n\nexport const ListDropDown = () => {\n  // const { data, loading } = useFetchGenres()\n  const { dataGenres, genreLoading } = useContext(DataContext)\n  return (\n    <ul className=\"drop__down__list\">\n      {\n        genreLoading\n          ? <LoadingComponent />\n          : dataGenres.map(({id, name}) => (\n            <li key={id} className=\"list--item\">\n              <Link to=\"/genres\">{ name }</Link>\n            </li>\n          ) )\n      }\n    </ul>\n  )\n}\n","import React from 'react'\n\nimport '../../styles/rawg-styles.css';\nexport const ApiComponent = () => {\n  return (\n    <div className=\"api__container\">\n      <div className=\"api__background\"></div>\n      <div className=\"api__content\">\n        {/* <CloseIcon className=\"close--icon\" /> */}\n        <h2 className=\"title block--temp\"> RAWG</h2>\n        <h3 className=\"subtitle block--temp\">Video Games Database API</h3>\n        <p className=\"paragraph block--temp\">There are two types of companies: hoarders and givers. RAWG is the largest video game database and game discovery service. And we are gladly sharing our 500,000+ games, search, and machine learning recommendations with the world. Learn what the RAWG games database API can do and build something cool with it!</p>\n\n        <h3 className=\"warning block--temp\">\n        If you click on RAWG a new tab will open in your browser\n        </h3>\n        <a className=\"btn block--temp\" href=\"https://rawg.io/apidocs\" target=\"_blank\" rel='noreferrer'>\n          RAWG\n        </a>\n\n      </div>\n    </div>\n  )\n}\n","import { useContext, useState } from \"react\";\n\nexport const useShowContent = ( initialState = false ) => {\n  const [openContent, setOpenContent] = useState(initialState);\n  const [animation, setAnimation] = useState(false);\n\n  // const { handle } = useContext(contextValue)\n  const handleOpenContent = () => {\n    setAnimation(!animation)\n    setTimeout(() => {\n      openContent ? setOpenContent(false) : setOpenContent( true )\n    }, 500);\n  }\n\n  return [openContent, handleOpenContent, animation]\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { IoMdArrowDropdown as DownArrow } from 'react-icons/io';\nimport { Link } from 'react-router-dom';\nimport { menuList } from '../../data/menu';\nimport { useScrollTop } from '../../hooks/useScrollTop';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { ListDropDown } from './ListDropDown';\n\nimport { VscLibrary as LibraryGames } from 'react-icons/vsc';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { FavGames } from './FavGames';\nimport { SubMenuItem } from './SubMenuItem';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { useHistory } from 'react-router';\nimport { ListGenresMobile } from './ListGenresMobile';\nimport { ApiComponent } from '../api-component/ApiComponent';\n\n\nexport const ListItem = ( { handleOpenContent } ) => {\n  const [genres, setGenres] = useState(false)\n  const { favoriteGames, setGamesByGenre, dataGenres,  } = useContext(DataContext)\n  const history = useHistory()\n  const { genreList } = menuList[2]\n  // const [ openContent, handleOpenContent ] = useShowContent()\n  const { scrollTop } = useScrollTop()\n\n  const handleClickSubmit = (e) => {\n    e.preventDefault()\n    handleOpenContent(false)\n    // console.log('click')\n    scrollTop()\n    // unmountComponentAtNode(document.getElementById('root'));\n\n  }\n  // debugger\n  const [showComponent, setShowComponent] = useState({\n    show: false,\n    show2: false\n  })\n  // const [show2, setShow2] = useState(false)\n  const [changeAnimation, setChangeAnimation] = useState(false)\n  const [changeAnimation2, setChangeAnimation2] = useState(false)\n\n\n  const [sliceFavList, setSliceFavList] = useState(favoriteGames)\n\n  useEffect(() => {\n    const sliceFav = setSliceFavList(sliceFavList.slice(0,6))\n    return () => {\n      clearImmediate(sliceFav)\n    }\n  }, [ favoriteGames.length ])\n    // const favGameListSliced = favoriteGames.slice(0, 6)\n  const { show, show2 } = showComponent\n  // debugger\n  const handleShow = () => {\n    setChangeAnimation(!show)\n    setTimeout(() => {\n      setShowComponent({\n        show: !show,\n        show2: false\n      })\n    }, 500);\n  }\n  \n\n  const handleShow2 = () => {\n    setChangeAnimation2(!show2)\n    setTimeout(() => {\n      setShowComponent({\n        show: false,\n        show2: !show2\n      })\n    }, 500);\n  }\n  \n  // debugger\n  const handleGenrePage = ( genre ) => {\n    // debugger\n    setGamesByGenre( genre )\n    // debugger\n    history.push('/whatgame/genres', null)\n    handleOpenContent()\n    return <LoadingComponent />\n  }\n\n  // debugger\n  return (\n    <ul className=\"menu__list\">\n      {\n        menuList.map(({name, page, subMenu, count, saved, link}) => (\n          (saved)\n           ? <li \n              key={name}\n              className=\"list--item\"\n              onClick={ handleShow }  \n            > {name}\n              <span className=\"items--saved--mobile\"> { favoriteGames.length }</span>\n              {\n                show && <FavGames \n                values={ {sliceFavList, changeAnimation, handleOpenContent} } />\n              }\n            </li> \n\n           : <li \n              key={ name }\n              className=\"list--item\"\n              onClick={ subMenu ? handleShow2 : handleClickSubmit }\n            > \n              <Link to={ page } >\n                { name }\n              </Link>\n                  \n                  \n        \n            </li>\n        ))\n      }\n      \n      {/* <li className=\"fav--game\">test</li> */}\n      {/* <li className=\"list--item\">\n        Library { favoriteGames.length }\n      </li>         */}\n      {/* <li className=\"list--item\">\n        { name }\n      </li> */}\n          <li key={genreList}\n            className=\"list--sub\"\n            onClick={ handleShow2 }\n          >\n            { genreList }\n             {\n               show2 && <ListGenresMobile values={{ changeAnimation2, handleGenrePage }}/>\n               \n             }\n          </li>\n\n\n    </ul>\n  )\n}\n","import React, { useContext } from 'react'\nimport { MdRemoveRedEye as Check } from 'react-icons/md'\nimport { Link, useHistory } from 'react-router-dom'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { LoadingComponent } from '../loading/LoadingComponent'\n\nexport const FavGames = ({ values }) => \n{\n  const{ sliceFavList, changeAnimation, handleOpenContent} = values\n\n  // debugger\n  const { favoriteGames } = useContext( DataContext )\n\n  // const history = useHistory()\n  // const handleFavPage = ()  => {\n  //   history.push('./favorite-games', null)\n  //   handleOpenContent()\n  //   return <LoadingComponent />\n  // }\n\n  const handleFavPage = () => {\n    handleOpenContent()\n    return <LoadingComponent />\n  }\n  return (\n    <ul className={`sub__menu__favs ${ changeAnimation ? 'animate__animated animate__fadeInDown' : 'animate__animated animate__fadeOutUp' }`}>\n    {\n      sliceFavList.map(item => (\n        <li key={item.name} className=\"fav--game\"> {item.name} \n        <Check className=\"eye--check\"/> \n        </li>\n      ))\n    }\n    \n      <li className=\"fav--game \" onClick={ handleFavPage }>\n        <Link to=\"/whatgame/favorite-games\" className=\"btn__primary\">\n          View More\n        </Link>\n        {/* <button className=\"show--more\" onClick={ handleFavPage }>Show More</button> */}\n      </li>\n    \n  </ul>\n  )\n}\n\n\n","import React, { useContext } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\n\nexport const ListGenresMobile = ({values}) => {\n  \n  const { dataGenres } = useContext( DataContext )\n  const { changeAnimation2, handleGenrePage } = values\n  return (\n    <ul className={`sub__menu__genres ${ changeAnimation2 ? 'animate__animated animate__fadeInUp' : 'animate__animated animate__fadeOutDown' }`}>\n      {\n        dataGenres.map(item => (\n          <li\n            key={item.name} \n            className=\"genre--item\"\n            onClick={ () => handleGenrePage(item.slug) }\n          >{item.name}\n          \n          </li>\n        ))\n      }\n    </ul>\n  )\n}\n","import { useState } from \"react\";\nimport Resizer from \"react-image-file-resizer\";\n\nconst mainUrl = `https://api.rawg.io/api/`;\nconst api_key = 'key=566bbd60217a466287e5e182d0437bc8';\nconst queryGame = 'games?';\nconst queryGenres = 'genres?';\nconst urlGamePage = `${mainUrl}${queryGame}${api_key}&page_size=40`;\nconst randomPage = Math.floor(Math.random()* 100) + 1;\n\n\nexport const GetGames = async ( page ) => {\n  // debugger\n  let tempPage = ''\n  try {\n    // const response = await fetch( \n    //   (page === undefined)\n    //     ? `${mainUrl}${queryGame}${api_key}&page_size=40`\n    //     : page\n    //  );\n\n      if(page === undefined || page === '') {\n        tempPage = urlGamePage\n      } else {\n        tempPage = page\n      }\n    //  debugger\n    // const { results, next, previous } = await response.json();\n    // debugger\n    const response = await fetch(`${tempPage}`)\n    // const response = await fetch(`${tempPage}&ordering=-metacritic`)\n    // debugger\n    const {results, next, previous, count} = await response.json()\n    // debugger\n    // debugger\n    // const response2 = await fetch(next);\n    // const { results:results2, next:next2 } = await response2.json()\n    // const {next, previous} = data\n    let mixGames = [...results]\n    const randomResult = results[Math.floor( Math.random() * results.length )]\n    // debugger\n    const dataGames = mixGames.map(game => {\n      // debugger\n      return {\n        id: game.id,\n        name: game.name,\n        released: game.released,\n        metacritic: game.metacritic,\n        image: game.background_image,\n        slug: game.slug,\n        rating_star: game.rating_top,\n        checked: false\n        // random: randomResult,\n        // nextPage: next,\n        // previousPage: previous,\n      }\n    })\n\n    // debugger\n    // const responseNext = await fetch(data.next)\n    // const nextPage = await responseNext.json()\n\n    // const responsePrevious = await fetch(data.previous)\n    // const previousPage = await responsePrevious.json()\n\n\n    // debugger\n    // debugger\n    return {dataGames, next, previous, randomResult, count}\n    // return [dataGame, nextPage, previousPage]\n    // return [dataGame, next, previous]\n    \n  } catch (error) {\n    console.error('error on: ',  error)\n  }\n}\n\n\nexport const getGenreGames = async () => {\n  // debugger\n  try {\n    const response = await fetch(`${mainUrl}${queryGenres}${api_key}`);\n  const { results } = await response.json();\n  \n  const dataGames = results.map(genre => {\n    return {\n      id: genre.id,\n      slug: genre.slug,\n      name: genre.name,\n      total_games: genre.games_count,\n      image: genre.image_background\n    }\n  })\n  // let genreCollection = []\n\n  // const handleGamesByGenre = async ( genre ) => {\n  //   const resp = await fetch(`${mainUrl}${queryGame}${api_key}&genres=${genre}&page_size=40&ordering=-metacritic`)\n  //   const {results} = await resp.json()\n  //   const tempResults = {\n  //     genre: genre,\n  //     dataByGenre: results\n  //   }\n  //   // debugger\n  //   return genreCollection.push(tempResults)\n  //   // return results\n  //   // debugger\n  //   // return  genreCollection\n  // }\n  // const temp = dataGames.forEach(item=> {\n  //   // debugger\n  //   return  handleGamesByGenre(item.slug)\n  // });\n  \n  // console.log(genreCollection)\n  // const dataGenreCollection = await dataGames.map(async (item) => {\n  //   const temp = await handleGamesByGenre(item.slug).then(item => {\n  //     return {\n  //       genre: item.slug,\n  //       genreData: item\n  //     }\n  //   })\n  //   // debugger\n\n  //   return temp\n  //   // debugger\n  // })\n  // debugger\n  // let gettingGamesByGenre\n  // setTimeout(() => {\n  //    gettingGamesByGenre = dataGames.map((item) => {\n    \n  //     const myData = fetch(`${mainUrl}${queryGame}${api_key}&genres=${item.slug}&page_size=40&ordering=-metacritic`).then((data) => data.json().catch((error) => console.log(error)))\n  //     debugger\n  //     // gettingGamesByGenre = [...myData]\n  //     // const myData = data.map(item => {\n  //     //   console.log(item)\n  //     // })\n  //     // const myPromise = data.then(item => {\n  //     //   console.log(item)\n  //     // })\n  //     // return data\n  //   })\n    \n  // }, 2000);\n  // console.log(gettingGamesByGenre)\n  // debugger\n  // debugger\n  // console.log(gettingGamesByGenre)\n  // debugger\n  return dataGames\n  } catch (error) {\n    console.error(error)\n  }\n  \n}\n\nexport const getGamesByGenre = async ( genre ) => {\n  // debugger\n  try {\n    let genreInput = ''\n    // debugger\n    if(genre.includes('genres=')) {\n      genreInput = genre\n      // debugger\n      // debugger\n    } else {\n      genreInput = `${mainUrl}${queryGame}${api_key}&genres=${genre}&page_size=40&`\n      // genreInput = `${mainUrl}${queryGame}${api_key}&genres=${genre}&page_size=40&ordering=-metacritic`\n      // debugger\n    }    \n    // debugger\n    const response = await fetch( genreInput );\n    // debugger\n    const { results, next, previous, count } = await response.json();\n    // debugger\n    \n    \n    \n    // const response2 = await fetch(next);\n    // const { results: results2, next: next2 } = await response2.json()\n    // debugger\n    const mixResults = [...results]\n    // debugger\n    // debugger\n  const dataGames = mixResults.map( listGame => {\n    return {\n      id: listGame.id,\n      name: listGame.name,\n      slug: listGame.slug,\n      platforms: listGame.platforms,\n      released: listGame.released,\n      image: listGame.background_image,\n      calification: listGame.rating,\n      rating_star: listGame.rating_top,\n      ratings: listGame.ratings,\n      metacritic: listGame.metacritic,\n      updated: listGame.updated,\n      clasification: listGame.esrb_rating,\n      gallery: listGame.short_screenshots\n    }\n  })\n  // debugger\n  return {dataGames, previous, count, next}\n  } catch (error) {\n    console.error(new Error(error))\n  }\n}\n\nexport const getDetailsGame = async ( game ) => {\n  try {\n    const response = await fetch(`${mainUrl}games/${game}?${api_key}`)\n  const data = await response.json();\n  // debugger\n  return {\n    id: data.id,\n    name: data?.name,\n    slug: data?.slug,\n    description: data?.description_raw,\n    metacritic: data?.metacritic,\n    released: data?.released,\n    image: data?.background_image,\n    genre: data?.genres,\n    image2: data?.background_image_additional,\n    calification: data?.rating,\n    rating_star: data?.rating_top,\n    people_say: data?.ratings,\n    platforms: data?.platforms,\n    developers: data?.developers,\n    publishers: data?.publishers,\n    clasification: data?.esrb_rating,\n    tags: data?.tags\n  }\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const getGameScreenshots = async ( game ) => {\n try {\n  const response = await fetch(`${mainUrl}games/${game}/screenshots?${api_key}`);\n  const { results } = await response.json();\n  \n  const gameScreenshots = results.map(screenshot => {\n    return {\n      id: screenshot.id,\n      screenshot: screenshot.image\n    }\n  })\n\n  return gameScreenshots;\n } catch (error) {\n   console.errror(error)\n }\n  \n}\n\nexport const getGameByName = async ( searchInput ) => {\n  // debugger\n  try {\n    let inputSearch = ''\n    // debugger\n  if(searchInput && searchInput.includes('.com')){\n    inputSearch = `${searchInput}&page_size=40`\n  } else if(searchInput) {\n    inputSearch =`${mainUrl}${queryGame}${api_key}&search=${searchInput}&page_size=40`\n  } else {\n    return inputSearch\n  }\n  // debugger\n  const response = await fetch(inputSearch)\n  const { results, next, previous } = await response.json();\n\n  // const response2 = await fetch(next)\n  // const {results: results2, next: next2} = await response2.json()\n\n  const mixResults = [...results]\n  // debugger\n  const dataGames = mixResults.filter(item => {\n    // debugger\n    return item.rating > 1\n  }).map( result => {\n    // debugger\n    return {\n      id: result.id,\n      name: result.name,\n      slug: result.slug,\n      released: result.released,\n      calification: result.rating,\n      rating_star: result.rating_top,\n      image: result.background_image,\n      metacritic: result.metacritic,\n      checked: false\n    }\n  })\n\n  // debugger\n  return {dataGames,next, previous}\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst paginationFetch = async ( page ) => {\n  const response = await fetch(page)\n  const { results } = await response.json()\n}","import { useState } from \"react\";\n\nexport const useScrollTop = () => {\n  \n\n\n  const [showScroll, setShowScroll] = useState(false)\n\n  const checkScrollTop = () => {\n    if (!showScroll && window.pageYOffset > 400){\n      setShowScroll(true)\n    } else if (showScroll && window.pageYOffset <= 400){\n      setShowScroll(false)\n    }\n  };\n\n  const scrollTop = () =>{\n    window.scrollTo({top: 0, behavior: 'smooth'});\n  };\n\n  window.addEventListener('scroll', checkScrollTop)\n\n  return {scrollTop}\n}","import { createContext } from 'react';\n\nexport const DataContext = createContext()\n\nexport const GamesDataContext = createContext()","// let idContainer = []\nexport const favoritesReducer = (state = [], action) => {\n  // debugger\n  switch (action.type) {\n    case 'add': \n    // const { id } = action.payload\n    // let temp = []\n    if(state.find(item => item.id === action.payload.id)) {\n      // debugger\n      return state\n    }\n    else {\n      // debugger\n      // idContainer = [...idContainer, id]\n      // temp = [...temp, {...action.payload.id }]\n      // debugger\n      return [{ ...action.payload, checked: true }, ...state]\n    }\n    // debugger\n    // debugger\n      // return state\n    case 'del': return state.filter(item => item.id !== action.payload);\n\n    case 'remove': return state = []\n    \n    default:\n    return state;\n  }\n}","export default __webpack_public_path__ + \"static/media/horizon.41cc8253.jpg\";","import React from 'react'\nimport { RiStarFill as StarIcon} from 'react-icons/ri';\n\nexport const RatingStar = ({ rating_star, index }) => {\n  let ratingStars = []\n  // const myRating = \n  if( rating_star ) {\n    for(let i = 0; i < Math.round(rating_star); i++) {\n     ratingStars.push(<StarIcon key={i} className=\"star--icon\"/>)\n     }\n  }\n  // return ratingStars\n  // debugger\n  return (\n    <div className=\"rating--star\">\n      {\n        ratingStars\n      }\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nexport const GameDescription = ({ data }) => {\n  const { description } = data;\n  // console.log('game--description')\n  // useEffect(() => {\n  // }, [data])\n  // debugger\n  return (\n    <div id=\"description--game\" className=\"game__description animate__animated animate__fadeIn\">\n      <h3 className=\"game--subtitles\">Description</h3>\n      <p className=\"game--description\">{ description }</p>\n    </div>\n  )\n}\n","import React, { useRef } from 'react'\nimport { IoIosArrowBack as LeftArrow, IoIosArrowForward as RightArrow } from 'react-icons/io'\nexport const Slider = ( { refSlider } ) => {\n  // const ref = useRef( null )\n\n  const handleRightArrow = (  moveToLeft  ) => {\n    refSlider.current.scrollLeft += moveToLeft;\n  }\n\n  const handleLeftArrow = (  moveToRight  ) => {\n    refSlider.current.scrollLeft -= moveToRight;\n  }\n\n\n  return (\n    <div className=\"slider\">\n      <LeftArrow \n        className=\"left--arrow\"\n        onClick={ () => handleLeftArrow(1100) }\n      />\n      <RightArrow \n        className=\"right--arrow\"\n        onClick={ () => handleRightArrow(1100) }\n      />\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const LoadingText = () => {\n  // debugger\n  return (\n    <h1 className=\"loading--text\">loading</h1>\n  )\n}\n","import React from 'react'\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { LoadingComponent } from '../loading/LoadingComponent';\n\nexport const GallerySelector = ({ values }) => {\n  const { item:{ screenshot }, setCurrentScreenshot, index  } = values\n  // const {screenshot, name} = screenshots;\n  // debugger\n  // debugger\n  const handleLoad = () => {\n    return <LoadingComponent />\n  }\n  return (\n    <figure className=\"game__gallery__selection\">\n      <LazyLoadImage \n        className=\"selection--image\" src={ screenshot } \n        onClick={() => setCurrentScreenshot(index)}\n        effect=\"opacity\"\n      //  afterLoad={ handleLoad }\n      // visibleByDefault={ Image.src === '' }\n        />\n    </figure>\n  )\n}\n","import React from 'react'\n\nexport const MainImageGallery = ( {values} ) => {\n  // debugger\n  const { screenshotData, currentScreenshot } = values\n  const { screenshot, name } = !!screenshotData && screenshotData[currentScreenshot]\n  // debugger\n  return (\n    <figure className=\"main__image__gallery animate__animated animate__fadeIn\">\n      <img className=\"main--gallery--image\" src={ screenshot } alt={ name }/>\n    </figure>\n  )\n}\n","import React from 'react'\n\nexport const Platforms = ( { platforms } ) => {\n  // debugger\n  // console.log('platforms')\n  return (\n    <div className=\"game__platforms\">\n      <h3 className=\"game--subtitles\">Platforms</h3>\n      <ul className=\"platforms\">\n        {\n          platforms.map(({ platform }) => (\n            <li key={platform.id} className=\"platform--item\">{ platform.name }</li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useGetScreenshots } from '../../hooks/useFetchGame'\nimport { Slider } from '../helpers/Slider'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { LoadingText } from '../loading/LoadingText'\nimport { GallerySelector } from './GallerySelector'\nimport { MainImageGallery } from './MainImageGallery'\nimport { Platforms } from './Platforms'\n\nexport const GameGallery = ({ data }) => {\n  const { image, image2, name, slug } = data;\n  const { screenshotData, loading } = useGetScreenshots( slug )\n  const refSlider = useRef()\n  // const { screenshot } = loading!== true && screenshotData[0]\n  // debugger\n  const [currentScreenshot, setCurrentScreenshot] = useState( 0 )\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     <MainImageGallery />\n  //   }, 2000)\n  // }, [ currentScreenshot ])\n  // debugger\n  // console.log('game--gallery')\n  // debugger\n  return (\n    <div className=\"game__gallery\">\n      <h3 className=\"game--subtitles\">Gallery</h3>\n      {\n        !loading && \n          <MainImageGallery values={{ screenshotData, currentScreenshot }} className=\"animate__animated animate__fadeIn\"/>\n      }\n      <Slider refSlider={ refSlider } />\n      {\n        loading\n          ? <LoadingText />\n          : <div className=\"carousel__item\" ref={ refSlider }>\n          {\n            screenshotData.map( (item, index) => (\n              <GallerySelector \n                key={item.id} \n                // screenshots={screenshots}\n                // setCurrentScreenshot={setCurrentScreenshot}\n                values={{ item, setCurrentScreenshot, index }}\n              />\n            ))\n          }\n          </div>  \n      }\n      \n      {/* <Platforms platforms={ platforms }/> */}\n      \n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nexport const GeneralInfo = ({ data }) => {\n  // debugger\n  // console.log('general--info')\n  const { publishers, released, metacritic, clasification, genre } = data;\n  // if(clasification.name || publishers)\n  // debugger\n  return (\n    <div className=\"game__info\">\n      <p className=\"info--title\">Publisher: { publishers.map(publisher => ( \n        publisher.name && <span key={ publisher.id }>{publisher.name}</span> )) }</p>\n\n      <p className=\"info--title\">Release-Date: <span>{ released }</span></p>\n      <p className=\"info--title\">Metacritic: <span>{ metacritic }</span></p>\n      {\n        clasification !== null && <p className=\"info--title\">ESRB: <span>{ clasification.name }</span></p>\n      }\n      <p className=\"info--title\">Gender: <span>{ genre.map(genre => `${genre.name} `)  }</span></p>\n    </div>\n  )\n}\n","import { useState } from \"react\"\n\nexport const FavSubmit = ( data, dispatch ) => {\n  // e.preventDefault()\n  // const newfav = data\n  const {checked} = data\n   const [addToggle, setAddToggle] = useState( checked )\n  // debugger\n  const handleAdd = () => {\n    dispatch({\n      type: 'add',\n      payload: data,\n      // checked: !checked\n    })\n\n    setAddToggle({\n      ...data,\n      checked: checked\n    })\n\n    // debugger\n  }\n\n  const handleRemove = () => {\n    dispatch({\n      type: 'del',\n      payload: data.id\n    })\n\n    setAddToggle(!addToggle)\n  }\n\n  const handleRemoveAll = () => {\n    dispatch({\n      type: 'remove',\n      payload: data\n    })\n  }\n  // debugger\n  return { handleAdd, handleRemove, addToggle, handleRemoveAll }\n}","import React, { useContext, useEffect } from 'react'\nimport { RatingStar } from './RatingStar'\nimport { IoMdAdd as AddIcon } from 'react-icons/io'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { FavSubmit } from '../helpers/FavSubmit'\nimport { IoTrashBinSharp as DeleteIcon } from 'react-icons/io5'\n\nexport const HeroImageModal = ( {data} ) => {\n  const { dispatch } = useContext( DataContext )\n  const { handleAdd, handleRemove, addToggle} = FavSubmit(data, dispatch)\n  const { slug, name, image, rating_star, rating } = data;\n  // debugger\n  // console.log('hero--image--modal')\n  // useEffect(() => {\n  //   console.log('hero--image--modal')\n  // }, [ data ])\n  return (\n    <>\n    <figure className=\"game__img\">\n      <img className=\"card--image\" src={ image } alt={ slug }/>\n      <div className=\"rating__stars\">\n        <h2 className=\"card--title\">{ name }</h2>\n        <RatingStar rating_star={ rating_star }/>\n      </div>\n\n{\n            !addToggle \n            ? <AddIcon \n              className=\"add--icon\"\n              onClick={ handleAdd }\n            />\n            : <DeleteIcon \n              className=\"add--icon\"\n              onClick={ handleRemove }\n            />\n          }\n    </figure>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nexport const Rating = ({data }) => {\n\n  const [orderingRating, setOrderingRating] = useState()\n  const { people_say } = data;\n  // const orderRating = people_say.sort((a,b) => {\n  //   // return return\n\n  // })\n  \n  useEffect(() => {\n    setOrderingRating( people_say.sort((a,b) => {\n      if( a.id < b.id ) return 1\n      if( a.id > b.id ) return -1\n    }) )\n    // console.log(orderingRating)\n  }, [ data ])\n  // const {}\n  // console.log('rating')\n  // debugger\n  return (\n      <div className=\"game__char__rating\">\n        <h3 className=\"game--subtitles\">What People Say</h3>\n        {\n          orderingRating !== undefined &&\n        <>        \n          <ul className=\"game__char\">\n            {\n              orderingRating.map(rating => (\n                <li key={  rating.id } className={ `game--${rating.title} percent` } style={{width: `${rating.percent}%`}}></li>\n              ))\n            }\n\n          </ul>\n          <ul className=\"rating__tags\">\n            {\n              orderingRating.map(rating => (\n                <li key={rating.id} className=\"rating--tag\"> {rating.title}:  \n                <div className={ `square--${rating.title}` }>\n                </div>\n                { rating.percent }%\n                </li>\n              ))\n            }\n          </ul>\n        </>\n        }\n      </div>\n  )\n}\n","import React from 'react'\nimport '../../styles/loading-style.css';\n\nexport const LoadingComponentSmall = ({data}) => {\n  // debugger\n  // const { searchGame } = data\n  const cleanData = !!data && data.replace(/-/gi, ' ')\n  // debugger\n  return (\n    <div className=\"loading__component__container\">\n      <div className=\"animation__container\">\n        <div className=\"loading--animation\"></div>\n        <div className=\"loading--animation2\"></div>\n        <div className=\"loading--animation3\"></div>\n        <div className=\"loading--animation4\"></div>\n      </div>\n      <h2 className=\"loading--text\">Loading {cleanData}</h2>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const BackgroundAnimation = () => {\n  return (\n    <div className=\"home__animation\">\n      <div className=\"home__details\">\n        <div className=\"home--detail--1\"></div>\n        <div className=\"home--detail--2\"></div>\n        <div className=\"home--detail--3\"></div>\n      </div>\n      <div className=\"home__details__reverse\">\n        <div className=\"home--detail--1\"></div>\n        <div className=\"home--detail--2\"></div>\n        <div className=\"home--detail--3\"></div>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext, useEffect, useMemo, useState, memo } from 'react'\nimport Horizon from '../../assets/horizon.jpg'\nimport { useGetGameDetails } from '../../hooks/useFetchGame';\nimport { GameDescription } from './GameDescription';\nimport { GameGallery } from './GameGallery';\nimport { GeneralInfo } from './GeneralInfo';\nimport { HeroImageModal } from './HeroImageModal';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { Rating } from './Rating';\nimport { Platforms } from './Platforms';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { LoadingComponentSmall } from '../loading/LoadingComponentSmall';\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation';\n\n\nexport const CardContent = React.memo(( ) => {\n// debugger\n  const { handleAdd , gameModalInfo, animation} = useContext(DataContext)\n  // debugger\n  const { slug } = !!gameModalInfo && gameModalInfo\n  // debugger\n  const { data, loading } = useGetGameDetails( slug );\n  const { platforms } = data\n  useEffect(() => {\n\n  }, [data])\n// debugger\n  // useEffect(() => {\n  //   console.log('card--content--data')\n  // }, [data])\n  // useEffect(() => {\n  //   console.log('card--content--values')\n  // }, [values])\n\n  const [handleData, setHandleData] = useState()\n  // useMemo(() => handleData(data), input)\n  const handleDataMemo = () => {\n    setHandleData(data)\n  }\n\n  const dataMemo = useMemo(() => handleDataMemo, [ gameModalInfo ])\n  // const { openContent, handleOpenModal } = useContext(DataContext)\n// const { openContent, handleOpenModal } = useContext(DataContext)\n\n  const [ openContent, handleOpenModal ] = useShowContent()\n  // debugger\n  return (\n    <div className={ `card__info ` }>\n        {\n          loading\n          ? <LoadingComponentSmall data={ slug }/>\n          : <div className={ `card__hero ${ animation ? 'animate__animated animate__fadeIn' : 'animate__animated animate__fadeOut' }` }>\n            \n              <div className=\"card__main__content\">\n                \n                <HeroImageModal data={ data }/>\n                <GeneralInfo data={ data }/>\n                \n              </div>\n              <button\n                className=\"submit--button\"\n                onClick={ handleOpenModal }\n                href=\"#description--game\"\n              > {\n                !openContent ? 'Read More' : 'Read Less'\n              } </button>\n              {\n                openContent && <GameDescription  data={ data }/>\n              }\n              \n              <GameGallery data={ data } />\n              <Rating data={ data }/>\n              <Platforms platforms={ platforms }/>\n              \n              {/* <BackgroundAnimation /> */}\n            </div>\n        }\n    </div>\n  )\n}\n)","import React, { useContext, useEffect, useState } from 'react'\nimport { LazyLoadComponent, LazyLoadImage } from 'react-lazy-load-image-component';\nimport Horizon from '../../assets/horizon.jpg';\nimport { RatingStar } from '../modal/RatingStar';\nimport { InteractiveButtons } from './InteractiveButtons';\nimport Modal from 'react-modal';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { CardContent } from '../modal/CardContent';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { CgArrowsExpandUpRight } from 'react-icons/cg'\nimport { IoMdAdd as AddIcon } from 'react-icons/io'\nimport { DataContext } from '../../context/DataFetchContext';\nimport { FavSubmit } from '../helpers/FavSubmit';\nimport { IoTrashBinSharp as DeleteIcon } from 'react-icons/io5'\n\n\nexport const GameMediumCard = ({values}) => {\n  const { data, index } =  !!values && values\n  const [ openContent, handleOpenContent, animation ] = useShowContent()\n  // debugger\n  const { dispatch, handleOpenGameModal } = useContext( DataContext )\n  const { handleAdd, handleRemove, addToggle} = FavSubmit(data, dispatch)\n  const { name, image, calification, metacritic, rating_star,  slug, checked } = data\n  const [show, setShow] = useState(true)\n  // debugger\n  // debugger\n  // debugger\n\n  let gameCalification = []\n  if(metacritic >= 90 ) {\n    gameCalification.push(<h2 key={1} className=\"calification high--rate--color\">{ metacritic }</h2>)\n  } else if ( metacritic >= 70 && metacritic < 90 ) {\n    gameCalification.push(<h2 key={2} className=\"calification medium--rate--color\">{ metacritic }</h2>)\n  } else if(metacritic < 70){\n    gameCalification.push(<h2 key={3} className=\"calification low--rate--color\">{ metacritic }</h2>)\n  }\n  // console.log('medium--card')\n  // debugger\n  return (\n    <LazyLoadComponent className=\"game__medium__card\" \n    >\n      {/* <li className=\"game__medium__container\"> */}\n      <li className=\"game__medium__container\">\n      <h2 className=\"card--position\">{index + 1}</h2>\n      <figure className=\"game__medium__container\">\n        <LazyLoadImage \n          // placeholderSrc=\"../../assets/horizon.jpg\"\n          className=\"game--image--medium animate__animated animate__fadeIn\"\n          src={ image } alt=\"videogame\"\n          effect=\"opacity\" \n          \n          // beforeLoad={ () => handleLoading() }\n          // visibleByDefault={ image.src === '../../assets/horizon.jpg' }\n          />\n        \n      <div className=\"game__content animate__animated animate__fadeIn\">\n        {\n          !openContent &&\n          <h2 className=\"list--title\">{ name }</h2>\n        }\n        <div className=\"card__medium__info\">\n          {\n            gameCalification\n          }\n          <RatingStar rating_star={ rating_star }/>\n          <CgArrowsExpandUpRight \n            className=\"dots\"\n            onClick={ () => handleOpenGameModal({slug}) }\n            />\n          \n          {\n            !addToggle \n            ? <AddIcon \n            className=\"add--icon\"\n            onClick={ handleAdd }\n            />\n            : <DeleteIcon \n            className=\"add--icon\"\n            onClick={ handleRemove }\n            />\n          }\n\n        </div>\n      </div>\n      {\n        show &&\n        <div className=\"game--medium--name animate__animated animate__fadeIn\">{ name }</div>\n      }   \n\n        {/* <InteractiveButtons /> */}\n        {/* <div className=\"bottom--fade\"></div> */}\n      </figure>\n      </li>\n      {/* </li> */}\n      {/* <Modal\n        isOpen={ openContent }\n        // onAfterOpen={ handleToggleContent }\n        onRequestClose={ handleOpenContent }\n        className=\"Modal animate__animated animate__fadeIn\"\n        overlayClassName=\"Overlay--cards\"\n        ariaHideApp={false}\n      >\n        <CardContent values={{ slug, animation, handleOpenContent }}/>\n        <CloseIcon \n          className=\"close--icon\"\n          onClick={ handleOpenContent }\n        />\n      </Modal> */}\n    </LazyLoadComponent>\n  )\n}\n","import React from 'react';\nimport { OrderBy } from './OrderBy';\nimport { SuggestionsSearch } from './SuggestionsSearch';\n\nimport '../../styles/game-page-style.css';\nexport const ResultHeader = ( {searchGame} ) => {\n  // debugger\n  return (\n    <form className=\"result\">\n      <div className=\"header__result\">\n        <h3 className=\"list--title\">Search <span className=\"highlight--text\">{ searchGame }</span></h3>\n        {/* <OrderBy /> */}\n        {/* <input type=\"number\" /> */}\n      </div>\n      {/* {\n        cleanedGames.length <= 0 && <SuggestionsSearch data={ data } />\n      } */}\n    </form>\n  )\n}\n","import { useState } from \"react\"\n\nexport const usePagination = ( ref ) => {\n  \n  const [page, setPage] = useState( '' )\n  const [currentPage, setCurrentPage] = useState( 1 )\n  const [myLoad, setMyLoad] = useState( true )\n  const [loadMoreGames, setLoadMoreGames] = useState(false)\n  // debugger\n  \n  const handleNextPage = ( page ) => {\n    // \n    // ref.current\n    if(page){\n    setPage( page )\n    setLoadMoreGames(true)\n    // debugger\n    // setCurrentPage(currentPage + 1)\n    // setMyLoad(true)\n  }\n  }\n  \n  const handlePreviousPage = ( page ) => {\n    \n    if(page) {\n      setPage( page )\n      setCurrentPage(currentPage - 1)\n      // setMyLoad(true)\n    }\n  }\n  // debugger\n  return {handleNextPage, handlePreviousPage, page, myLoad, currentPage, setMyLoad, setPage, setCurrentPage, loadMoreGames, setLoadMoreGames}\n}\n\n\n","import { useEffect, useState } from \"react\"\n\nexport const useFullData = ( data ) => {\n  const [moreLoad, setMoreLoad] = useState([])\n  const [fullData, setFullData] = useState()\n  const [pagination, setPagination] = useState()\n  // debugger\n  useEffect(() => {\n    setMoreLoad(c => [...c, data.dataGames])\n    setPagination({\n      next: data.next,\n      previous: data.previous,\n      count: data.count,\n      // fullData: moreLoad.flat().filter(item => {return item !== undefined})\n    })\n    // debugger\n    // debugger\n  }, [ data ])\n  \n  useEffect(() => {\n    setFullData(moreLoad.flat().filter(item => {return item !== undefined}))\n  }, [ moreLoad ])\n  \n  \n  return { moreLoad, pagination, fullData, setMoreLoad }\n}","import React, { useEffect } from 'react'\nimport { usePagination } from '../../hooks/usePagination'\n\nexport const ShowMoreButton = ( {values} ) => {\n  const { handleNextPage, loadMoreGames, next, refGames } = !!values && values\n    // debugger\n   \n    // debugger\n  return (\n    <div className=\"scroll__more\">\n      <button \n        className=\"show--more\"\n        onClick={() => handleNextPage(next)}\n        // eslint-disable-next-line \n        // className={ myLoad &&'loading--button--animation'  }\n      >{\n        loadMoreGames\n          ?  'loading...'\n          : 'Show More'\n      }</button>\n    </div>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { useFetchGames, useGetGamesByName } from '../../hooks/useFetchGame'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\nimport { ResultHeader } from './ResultHeader'\nimport { SuggestionsSearch } from './SuggestionsSearch'\nimport { IoIosArrowBack as LeftArrow, IoIosArrowForward as RightArrow } from 'react-icons/io'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { Pagination } from '../pagination/Pagination'\nimport { usePagination } from '../../hooks/usePagination'\nimport { useFullData } from '../../hooks/useFullData'\nimport { ShowMoreButton } from '../helpers/ShowMoreButton'\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation'\n\nexport const SearchPage = () => {\n  const { searchGame } = useContext( DataContext )\n\n  const {handleNextPage, handlePreviousPage, page, myLoad, currentPage, setMyLoad, setPage, setCurrentPage, loadMoreGames, setLoadMoreGames} = usePagination(  )\n  \n  useEffect(() => {\n    setPage(searchGame)\n  }, [ searchGame ])\n\n  const { data, loading } = useGetGamesByName( page )\n  // debugger\n  // useEffect(() => {\n  //   setMyLoad(true)\n  // }, [data])\n  // const { dataGame } = !!data && data\n  const { moreLoad, pagination, fullData, setMoreLoad } = useFullData(!!data && data)\n// debugger\n   \nuseEffect(() => {\n  setMoreLoad([])\n}, [ searchGame ])\n\n  // const [cleanGames, setCleanGames] = useState([])\n  // const {next} = !data && data[1]\n  const { next } = !!pagination && pagination\n  // useEffect(() => {\n  //   setMyLoad(loading)\n    \n  // }, [ data ])\n  \n  // useEffect(() => {\n    \n    // }, [ loading ])\n \n    \n    useEffect(() => {\n      setMyLoad(true)\n      setLoadMoreGames(true)\n    }, [data])\n    \n    useEffect(() => {\n      // setMyLoad(false)\n      setLoadMoreGames(false)\n    }, [ fullData ])\n    \n    // debugger\n    // debugger\n    // debugger\n    \n    // const handleLoadingMoreGames = () => {\n      \n      // }\n      \n      // for(let i = 1; i <=10; i++) {\n        //   pages.push(i);\n        // }\n        // debugger\n        \n        return (\n          \n          <>\n      {\n        loading \n        ? <LoadingComponent data={ searchGame }/>\n        : <section className=\"second__container games__list\">\n          <ResultHeader searchGame={ searchGame }/> \n          <ul className=\"games__container\">\n              {\n                fullData.map( (data, index) => (\n                  <GameMediumCard key={ data.id.toString() }  className=\"animate__animated animate__fadeIn\" values={{ data, index }}/>\n                ))\n              }\n            </ul>\n            <ShowMoreButton className=\"animate__animated animate__fadeIn\" values={ {next, handleNextPage, loadMoreGames} }/>\n            {/* <Pagination pagination={{ handleNextPage, handlePreviousPage, currentPage, next, previous }}/> */}\n            <BackgroundAnimation />\n            </section>\n      }\n            </>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { unmountComponentAtNode } from 'react-dom'\nimport { Link, useHistory } from 'react-router-dom';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { useGetGamesByName } from '../../hooks/useFetchGame';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { SearchButton } from './SearchButton';\n\nexport const SearchBar = ( { handleOpenContent } ) => {\n\n  const history = useHistory();\n  const { setSearchGame } = useContext( DataContext )\n  const [inputValue, setInputValue] = useState('')\n  // const { setSearchGame } = useContext( SearchContext );\n  // setSearchGame({\n  //   name: 'arce',\n  //   age: 28\n  // debugger\n  // })\n  const handleOnChange = ( e ) => {\n    setInputValue(e.target.value)\n    // console.log(e.target.value)\n  }\n\n\n  const handleSubmit = ( e ) => {\n    e.preventDefault();\n    if(inputValue.length > 2) {\n      const replaceSimbols = /\\s/gi\n      setSearchGame( inputValue.toLowerCase().replace(replaceSimbols, '-') )\n      setInputValue('')\n      handleOpenContent(true)\n      history.push('/whatgame/search-result', null)\n      // debugger\n      return <LoadingComponent />\n    }\n    // debugger\n    // history.push('./genres')\n    // debugger\n    // e.history.pushState(inputValue, 'New page', './genres')\n  }\n  // console.log(resultData)\n  // debugger\n  return (\n    <>\n    <form \n      className=\"search__bar animate__animated animate__fadeIn\"\n      onSubmit={ handleSubmit }\n      to=\"/games\"\n    >\n      <input \n        className=\"search--input\" \n        type=\"search\"\n        value={ inputValue }\n        onChange={ handleOnChange }\n      />\n      {/* <Link to=\"/genres\"> \n      </Link> */}\n      {/* <SearchButton /> */}\n    </form>\n        </>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { ListItem } from './ListItem';\nimport { SearchBar } from './SearchBar';\nimport { useGetGamesByName } from '../../hooks/useFetchGame';\nimport { SearchContext } from '../../context/DataFetchContext';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc'; //YOU ARE HERE\n\nexport const MenuList = ( { values } ) => {\n  const { handleOpenContent, animation } = values\n  return (\n      // <div className=\"modal\">\n      // <div className=\"menu--overlay\"></div>\n      <div className={ `drop__menu ${ animation ? 'animate__animated animate__fadeInRight' : 'animate__animated animate__fadeOutRight'}` }>\n        <CloseIcon \n                className=\"close--icon \" \n                onClick={ handleOpenContent }\n              />\n          <SearchBar handleOpenContent={ handleOpenContent }/>\n        {/* <Link to=\"/results\" className=\"input--link\">\n        </Link> */}\n        <ListItem handleOpenContent={ handleOpenContent }/>      \n        </div>\n    // </div>\n  )\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { menuList } from '../../data/menu';\nimport { useFetchGenres } from '../../hooks/useFetchGame';\nimport { useHistory } from 'react-router';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { useScrollTop } from '../../hooks/useScrollTop';\nimport { SubMenuItem } from './SubMenuItem';\nimport { useShowContent } from '../../hooks/useShowContent';\n\nexport const MenuItem = ({list}) => {\n  // const { data, loading } = useFetchGenres()\n  // debugger\\\n  const { setGamesByGenre, dataGenres, genreLoading } = useContext\n  (DataContext)\n  const { scrollTop } = useScrollTop()\n  const history = useHistory()\n\n  const [openSubMenu, setOpenSubMenu] = useState(false)\n  const handleGenrePage = ( genre ) => {\n    // debugger\n    setGamesByGenre( genre )\n    // debugger\n    setOpenSubMenu(false)\n    history.push('/whatgame/genres', null)\n    return <LoadingComponent />\n  }\n\n\n  const [ openContent, handleOpen ] = useShowContent()\n  const mounted = useRef(true)\n  // debugger\n  // debugger\n\n  useEffect(() => {\n  \n    return () => {\n      mounted.current = false\n    }\n  }, [ openContent ])\n\n  const handleOpenSubMenu = () => {\n    scrollTop()\n    setOpenSubMenu(!openSubMenu)\n\n  }\n  return (\n\n      <li \n        key={ list.name }\n        className={ \n          (list.subMenu)\n          ? 'list--item  submenu'\n          : 'list--item'\n         }\n         onClick={ () => scrollTop() }\n        // onClick={ handleClickSubmit }\n        >\n          {/* { JSON.parse((item)) } */}\n          {\n            mounted.current &&\n            (!list.subMenu) \n            ? <Link \n                to={ list.page }\n              >\n                { list.name }\n              </Link>\n            : <Link \n                to={ list.page }\n                onClick={ handleOpenSubMenu }\n              >\n                { list.name }\n              </Link>\n          }\n          {\n            openSubMenu &&  <SubMenuItem handleGenrePage={ handleGenrePage }/>\n            \n          }\n      </li>\n      )\n  \n}\n\n\n//try to check what can I do to implement submenu genres mobile","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const SubMenuFavGames = ({ favoriteGames }) => {\n  return (\n    <ul className=\"fav__games__list\">\n      {\n        favoriteGames.slice(0,6).map(item => (\n          <li className=\"fav--games--item\">\n            {item.name}\n          </li>\n        ))\n      }\n\n      <li className=\"list--item \">\n        <Link to=\"/whatgame/favorite-games\" className=\"btn__primary\">\n        View More\n        </Link>\n      </li>\n    </ul>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { IoMdArrowDropdown as DownArrow } from 'react-icons/io';\nimport { menuList } from '../../data/menu';\nimport { ListDropDown } from './ListDropDown';\nimport { MenuItem } from './MenuItem';\n// import { menuIcons } from '../../data/menu'\nimport { SearchBar } from './SearchBar';\nimport { SubMenuItem } from './SubMenuItem';\nimport { VscLibrary as LibraryGames } from 'react-icons/vsc';\nimport { AiOutlineSearch as SearchIcon } from 'react-icons/ai';\nimport { RiUser3Fill as UserIcon } from 'react-icons/ri'\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { Link } from 'react-router-dom';\nimport { SubMenuFavGames } from './SubMenuFavGames';\nimport { cleanup } from '@testing-library/react';\n\nexport const Navbar = ( ) => {\n  const [openContent, handleOpenContent] = useShowContent(false)\n  const [openFavsMenu, setOpenFavsMenu] = useState(false)\n\n  const { favoriteGames } = useContext( DataContext )\n  // debugger\n  const [renderFavGames, setRenderFavGames] = useState()\n\n  const handleFavSubMenu = () => {\n     setOpenFavsMenu(!openFavsMenu)\n  }\n\n  useEffect(() => {\n    const myFavGames =  setRenderFavGames( <span className=\"items--saved\">{ favoriteGames.length }</span>)\n\n    return () => {\n      cleanup(myFavGames)\n    }\n  }, [ favoriteGames.length ])\n\n\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar__container\">\n      {\n        menuList.map( (list, index) => (\n          <MenuItem key={ index } list={ list }/>\n        ))\n      }\n      \n      {/* <SearchBar handleOpenContent={handleOpenContent}/> */}\n      </ul>\n      <ul className=\"navbar__container\">\n        <li className=\"list--item\">\n          <SearchIcon \n            className=\"search--icon\"\n            onClick={ () => handleOpenContent(true) }\n          />\n          {\n            openContent && <SearchBar handleOpenContent={ handleOpenContent }/>\n          }\n        </li>\n        <li \n          className=\"list--item\"\n          onClick={ handleFavSubMenu }\n        >\n          <LibraryGames className=\"games--collection--icon\"\n          />\n          {\n            renderFavGames\n          }\n          {\n            openFavsMenu && \n          <SubMenuFavGames favoriteGames={ favoriteGames }/>\n          }\n          \n        </li>\n        {/* <li className=\"list--item\">\n          <UserIcon className=\"user--icon\"/>\n        </li> */}\n\n      </ul>\n      <ListDropDown />\n    </nav>\n  )\n}\n","import React, { useContext, useState } from 'react';\nimport Modal from 'react-modal';\nimport {  FiMenu as IconMenu } from 'react-icons/fi';\nimport '../../styles/header-style.css'\nimport { MenuList } from './MenuList';\nimport { Navbar } from './Navbar';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc'; //YOU ARE HERE\nimport { DataContext } from '../../context/DataFetchContext';\nimport { Link } from 'react-router-dom';\n\n\nexport const Header = () => {\n  \n  const [openContent, handleOpenContent, animation] = useShowContent()\n  \n  // const { openContent, handleOpenContent, animation } = useContext(DataContext)\n  // debugger\n  return (\n    <header className=\"main__container\">\n      <div className=\"header animate__animated animate__fadeIn\" >\n        <Link to=\"/whatgame\">\n        <h2 className=\"highlight--text\">WhatGame</h2>\n        </Link>\n        {/* {showContent && <MenuList />} */}\n        \n        {\n          (!openContent)\n            ? <IconMenu \n                onClick={ handleOpenContent }\n                className=\"icon--menu animate__animated animate__fadeIn\"\n              />\n            : <CloseIcon \n                className=\"close--icon animate__animated animate__fadeIn\" \n                onClick={ handleOpenContent }\n              />\n            \n\n        }\n        <Modal\n          isOpen={ openContent }\n          onRequestClose={ handleOpenContent }\n          ariaHideApp={ false }\n          className=\"Modal--menu\"\n          overlayClassName=\"Overlay\"\n        >\n          <MenuList values={{handleOpenContent, animation}}/>\n          \n        </Modal>\n        <Navbar />\n      </div>\n    </header>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport Horizon from '../../assets/horizon.jpg';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { CardContent } from '../modal/CardContent';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { resizeFile } from '../../data/fetchGames';\nimport { useResizeImage } from '../../hooks/useFetchGame';\nimport { DataContext } from '../../context/DataFetchContext';\n\n\nexport const GameSmallCard = ({item}) => {\n  const [openContent, handleOpenModal, animation] = useShowContent()\n  const { openGameModal, handleOpenGameModal, handleCloseGameModal } = useContext(DataContext)\n  const { setHandleModal } = useContext(DataContext)\n  const { name, slug, image } = item\n\n  // useEffect(() => {\n  //   setHandleModal({\n  //     openContent, name, slug, handleOpenModal, animation\n  //   })\n  // }, [item])\n//  debugger\n  return (\n    // <article className=\"game__small__card\">\n      <li className=\"game__small__container\">\n    \n        <figure \n          className=\"game__small__container animate__animated animate__fadeIn\"\n          >\n          <LazyLoadImage \n            className=\"game--image--small\" \n            src={ image } \n            alt={ name }\n            onClick={ () =>  handleOpenGameModal({slug}) } \n            effect=\"opacity\"\n            />\n\n          {/* <Modal\n            isOpen={ openGameModal }\n            onRequestClose={ handleCloseGameModal }\n            ariaHideApp={false}\n            className=\"Modal \"\n            overlayClassName=\"Overlay--cards\"\n            \n            >\n            <CloseIcon \n              className=\"close--icon animate__animated animate__fadeIn\"\n              onClick={ handleOpenModal }\n              />\n            <CardContent />\n          </Modal> */}\n          {/* <fgcaption  */}\n          <fgcaption className=\"game--name\">{name}</fgcaption>\n        </figure>\n      </li>\n      \n    // </article>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/re-v.1a43f246.jpg\";","import React from 'react'\nimport { FaArrowAltCircleUp as GoUp } from 'react-icons/fa';\nimport { useScrollTop } from '../../hooks/useScrollTop';\n\nexport const ScrollTop = () => {\n  const { scrollTop } = useScrollTop()\n  return (\n    <div className=\"to__up\">\n      <GoUp \n        className=\"up--arrow\"\n        onClick={ scrollTop } \n      />\n      <div className=\"wave\"></div>\n      <div className=\"wave2\"></div>\n      <div className=\"wave3\"></div>\n    </div>\n  )\n}\n","import React, { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { GameSmallCard } from './GameSmallCard';\nimport '../../styles/games-lists.css';\nimport { useGamesByGenre } from '../../hooks/useFetchGame';\nimport { IoIosArrowBack as LeftArrow, IoIosArrowForward as RightArrow } from 'react-icons/io'\n\nimport { ArrowsSelectors } from './ArrowsSelectors';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { LoadingText } from '../loading/LoadingText';\nimport { ScrollTop } from '../helpers/ScrollTop';\nimport { Slider } from '../helpers/Slider';\nimport { FixedSizeList } from 'react-window';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { cleanup } from '@testing-library/react';\n\n\n// import { ListItem } from '../header/ListItem';\nexport const GameList = ({ genre: { genre, data, id } }) => {\n  const { dataGames } = !!data && data\n  // const { genreCollection, genreLoading } = useContext(DataContext)\n  // debugger\n  // const { data, loading } = useGamesByGenre( slug )\n  // const [collectData, setCollectData] = useState([])\n  // if(genreCollection.length > 0) {\n  //   debugger\n  // }\n  // debugger\n  const [fullLoad, setFullLoad] = useState(true)\n\n  // useEffect(() => {\n  // }, [ genreCollection ])\n  const refSlider = useRef()\n  \n  \n  useEffect(() => {\n    const settingLoading = setTimeout(() => {\n      setFullLoad(!fullLoad)\n    }, 2000);\n\n    return () => {\n      cleanup(settingLoading)\n    }\n  }, [  ])\n\n  // debugger\n  // const { dataGames } = !!data && data\n  // debugger\n  // const { \n  //   allGenresGames,\n  //   handleAllGenresGames } = useContext(DataContext)\n\n  // useEffect(() => {\n  //   setCollectData(c => [...c, dataGames])\n  //   // handleAllGenresGames(data)\n  // }, [data])\n\n  // useEffect(() => {\n  //   console.log('GAMES--MAP')\n  // }, [])\n  // debugger\n  // console.log(allGenresGames)\n  // if(collectData.length > 10) {\n  //   console.log(collectData)\n  //   debugger\n  // }\n\n \n  // const memoData = React.memo( handleData )\n  // const handleScrollVertical = () =>   {\n  //   return window.scroll({\n  //     righ: 200,\n  //     behavior: 'smooth'\n  //   })\n  // }\n  // debugger\n\n  // debugger\n  // useEffect(() => {\n\n  // }, [ data ])\n  // // debugger\n  // if(loading === false) {\n  //   // debugger\n  // }\n  // debugger\n  return (\n    <section \n      className=\" games__list animate__animated animate__fadeIn\"\n    >\n      <h2 className=\"list--title\">Best <span className=\"highlight--text\">{ genre }</span> Games</h2>\n      {/* <button onClick={() => handleScroll(1000) }>Click to move</button> */}\n          {/* <div className=\"cards__container\" ref={ ref }> */}\n        {/* <ArrowsSelectors handleRightArrow={ {\n          handleRightArrow,  handleLeftArrow\n        }}/> */}\n          \n\n        {/* debugger */}\n\n        <Slider refSlider={refSlider}/>\n          <ul\n            className=\"cards__container\"\n            // width={`100%`}\n            // height={500}\n            // itemSize={160}\n            // itemCount={ data.length } \n            ref={ refSlider }\n          >\n          {\n            fullLoad\n              ? <LoadingText />\n              : dataGames.slice(0,10).map(item => (\n                item.image &&\n                <GameSmallCard key={ item.slug } item={ item }/>\n              ))\n          }\n          </ul>\n          {/* </div> */}\n    </section>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useFetchGenres } from '../../hooks/useFetchGame'\nimport { GameList } from '../videogames-lists/GameList'\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation'\nimport { DataContext } from '../../context/DataFetchContext'\nexport const GamesMap = () => {\n  // const { data, loading } = useFetchGenres()\n  const { dataGenres, genreLoading, genreCollection } = useContext(DataContext)\n  useEffect(() => {\n    // console.log('GAMES--MAP')\n  }, [dataGenres])\n  // debugger\n  const [handleGenres, setHandleGenres] = useState([])\n\n  useEffect(() => {\n    setHandleGenres(genreCollection)\n  }, [ genreCollection ])\n\n  if(dataGenres.length ===  genreCollection.genreCollection) {\n    debugger\n  }\n\n  // debugger\n  return (\n    <section className=\"container__games\">\n      {\n           genreLoading\n            ? <LoadingComponent />\n            : <>\n                {\n                  handleGenres.sort().map(genre => (\n                    <LazyLoadComponent \n                    key={genre.id}\n                    delayTime=\"3000\"\n                    >\n                    <GameList key={genre.id} genre={genre}/>\n                    </LazyLoadComponent>\n                    ))\n                  }\n              </>\n          }\n          {/* <BackgroundAnimation /> */}\n    </section>\n  )\n}\n","import React, { useContext, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { CardContent } from '../modal/CardContent';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\nimport { useGetGameDetails } from '../../hooks/useFetchGame';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { FavSubmit } from '../helpers/FavSubmit';\n\n\nexport const CheckNow = ({ slug }) => {\n  const { dispatch, handleOpenGameModal } = useContext( DataContext )\n  // const [ openContent, handleOpenContent, animation ] = useShowContent()\n  const { data, loading } = useGetGameDetails( slug );\n  const { handleAdd, handleRemove, addToggle} = FavSubmit(data, dispatch)\n  // debugger\n  return (\n    <div className=\"check__now animate__animated animate__fadeInUp\">\n      {\n        !addToggle\n        ?  <p onClick={ handleAdd }>Add</p>\n        :  <p onClick={ handleRemove }>Remove</p>\n        \n      }\n      <button \n        type=\"button\"\n        className=\"submit--button\"\n        onClick={ () => handleOpenGameModal({slug}) }\n      > Check Now\n      </button>\n      <p>Info</p>\n      \n    </div>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport resident from '../../assets/re-v.jpg';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { useFetchGames, useGetGameDetails } from '../../hooks/useFetchGame';\nimport '../../styles/home-style.css';\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { CardContent } from '../modal/CardContent';\nimport { GamesMap } from '../videogames-lists/GamesMap';\nimport { CheckNow } from './CheckNow';\n\nexport const Home = () => {\n  // debugger\n  const { fetchGames: {\n    loading, data\n  } } = useContext(DataContext)\n  // const  random = \n  const { id, name, background_image, slug } = !loading && data.randomResult;\n  // debugger\n  // debugger\n  \n  \n  useEffect(() => {\n    const vh = window.innerHeight * 0.01;\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  \n    // We listen to the resize event\n    window.addEventListener('resize', () => {\n      // We execute the same script as before\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\n    });\n  }, [])\n  const [myCheckNow, setMyCheckNow] = useState()\n\n  // const handleCheck = () => {\n  // }\n  // handleCheck()\n  // debugger\n  useEffect(() => {\n    setTimeout(() => {\n      setMyCheckNow(<CheckNow className=\"animate__animated animate__fadeInUp\" slug={ slug }/>)\n    }, 4000);\n\n  }, [data])\n  return (\n    <>\n    <section id=\"home\" className=\"main__container home \">\n      {\n        loading \n          ? <LoadingComponent />\n          : \n          <>\n          <figure className=\"hero__img__container     animate__animated animate__fadeIn\">\n            <div className=\"top--fade\"></div>\n              <img className=\"hero--img animate__animated animate__fadeIn\" src={ background_image } alt={ name }/>\n              <div className=\"bottom--fade\"></div>\n              <caption className=\"hero--text\">{ name }</caption>\n            </figure> \n            \n          </>\n      }\n      {/* <CheckNow slug={ slug }/>  */}\n\n      {\n        myCheckNow\n      }\n      {/* <div className=\"hero__text__content\">\n        <p className=\"hero--text\">{ name }</p>\n      </div> */}\n      <BackgroundAnimation />\n    </section>\n      <GamesMap />\n      \n  </>\n  )\n}\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();","import React, { useContext, useEffect, useState } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { useGamesByGenre } from '../../hooks/useFetchGame'\nimport { usePagination } from '../../hooks/usePagination'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { Pagination } from '../pagination/Pagination'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ShowMoreButton } from '../helpers/ShowMoreButton'\nimport { useFullData } from '../../hooks/useFullData'\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation'\n\n\nexport const GamesGenreGrid = (  ) => {\n  const { gamesByGenre, setGamesByGenre } = useContext(DataContext)\n  // debugger\n  // const [nextPage, setNextPage] = useState( gamesByGenre )\n\n\n  const {\n    handleNextPage, handlePreviousPage, page, myLoad, currentPage, setMyLoad, setPage, setCurrentPage, loadMoreGames, setLoadMoreGames } = usePagination( )\n\n  useEffect(() => {\n    setPage(gamesByGenre)\n  }, [ gamesByGenre ])\n    \n  const { data, loading } = useGamesByGenre( page )\n  // const { dataGames } = !!data && data \n  const {moreLoad, pagination, fullData, setMoreLoad} = useFullData( !!data && data )\n  // debugger\n  useEffect(() => {\n    setMoreLoad([])\n  }, [ gamesByGenre ])\n  // debugger\n  const { next, count } = !!pagination && pagination\n  // debugger\n  useEffect(() => {\n    setMyLoad(false)\n    setLoadMoreGames(true)\n    \n  }, [ data ])\n\n  useEffect(() => {\n    setLoadMoreGames(false)\n  }, [ fullData ])\n\n\n  const [buttonLoad, setButtonLoad] = useState(true)\n  useEffect(() => {\n    setTimeout(() => {\n      setButtonLoad(false)\n    }, 2000);\n  }, [])\n  // debugger\n  return (\n    <>\n    {\n      loading\n      ? <LoadingComponent />\n      :<>\n        \n          <ul className=\"games__container\">\n\n          {/* <InfiniteScroll\n             dataLength={data[0].length}\n             next={ () => setNextPage(next) }\n             hasMore={true}\n             loader={<h4>Loading...</h4>}\n             scrollableTarget=\"scrollableDiv\"\n             \n            > */}\n         {\n           fullData.map((data, index) => (\n             data.image &&\n             <GameMediumCard key={ data.id } values={{ data, index }}/>\n             ))\n            }\n          {/* </InfiniteScroll> */}\n        {/* <Pagination pagination={{ handleNextPage, handlePreviousPage, currentPage, next, previous }}/> */}\n            </ul>\n        {\n          fullData.length > 0 &&\n          <ShowMoreButton values={ {next, handleNextPage, loadMoreGames} }/>\n        }\n        <BackgroundAnimation />\n        </>\n    }\n    </>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { GameList } from '../videogames-lists/GameList'\nimport { GameSmallCard } from '../videogames-lists/GameSmallCard'\nimport { GenresGrid } from './GenresGrid'\nimport { HomeImage } from './HomeImage'\n\nimport '../../styles/genres-style.css'\nimport { useFetchGenres, useGamesByGenre } from '../../hooks/useFetchGame'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\nimport { GamesGenreGrid } from './GamesGenreGrid'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { usePagination } from '../../hooks/usePagination'\nimport { Pagination } from '../pagination/Pagination'\n\nexport const GenrePage = () => {\n  // const [gamesByGenre, setGamesByGenre] = useState()\n  // const { data, loading } = useFetchGenres()\n  const { dataGenres, genreLoading, gamesByGenre } = useContext(DataContext)\n  const {\n    handleNextPage, \n    handlePreviousPage, \n    currentPage, \n    page, \n    myLoad,\n    setMyLoad, setCurrentPage } = usePagination( )\n  // debugger\n  // const { gamesByGenre  } = useContext(DataContext)\n  // const { slug, name} = gamesByGenre\n  // useEffect(() => {\n  //   // console.log('grid changed')\n  //   return () => {\n      \n  //   }\n  // }, [ gamesByGenre ])\n  // debugger\n  \n  return (\n            <section className=\"genres games__list\" >\n          {\n            genreLoading\n              ? <LoadingComponent />\n              : \n              <>\n                {/* <h2 className=\"genres--title\">Genres</h2> */}\n                {/* <HomeImage \n                  className=\"genre__home__img\" \n                  data={ data }\n                />       */}\n                <div className=\"hero__text__content\">\n                <h2 className=\"genre--title\">{ gamesByGenre }</h2>\n                  {/* <p className=\"hero--text\">{ name }</p> */}\n                </div>\n                <GamesGenreGrid />\n              </>\n              } \n            </section>\n\n         \n  )\n}\n","import React, { useRef } from 'react';\nimport { SearchButton } from '../header/SearchButton';\n\nimport '../../styles/game-page-style.css';\nimport { OrderBy } from '../search-page/OrderBy';\nexport const GameResults = ( { data } ) => {\n  const inputRef = useRef(null)\n  // debugger\n  return (\n    <form className=\"result\">\n      {/* <div className=\"header__result\"> */}\n        <h3 className=\"list--title\">Search <span className=\"highlight--text\">Result ...</span></h3>\n        {/* <OrderBy /> */}\n        {/* <div className=\"page__form\">\n          <label htmlFor=\"page--number\" className=\"page--input--label\">Search by page</label>\n          <input type=\"number\" id=\"page--number\"name className=\"page--input\"\n          ref={inputRef}\n          placeholder=\"page by number\"\n          />\n\n        <SearchButton />\n        </div> */}\n      {/* </div> */}\n    </form>\n  )\n}\n","import React, { useContext, useRef } from 'react'\nimport {  GamesDataContext } from '../../context/DataFetchContext'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { GameResults } from './GameResults'\nimport { ShowMoreButton } from '../helpers/ShowMoreButton'\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation'\n\nexport const GamePage = React.memo(({history} ) => {\n// debugger\nconst refGames = useRef(null)\n  const { fullData,\n    loading,\n    next,\n    handleNextPage,\n    loadMoreGames } = useContext(GamesDataContext)\n    // debugger\n   \n\n    // useEffect(() => {\n    //   setTimeout(() => {\n    //     handleToTop()\n        \n    //   }, 1000);\n    // }, [fullData])\n    // debugger\n  // const {\n  //   handleNextPage, \n  //   handlePreviousPage, \n  //   currentPage, \n  //   page, \n  //   myLoad,\n  //   setMyLoad, setCurrentPage,loadMoreGames, setLoadMoreGames } = usePagination( )\n    \n  // const { data, loading } = useFetchGames( page )\n  \n  // const {moreLoad, pagination, fullData} = useFullData( data )\n  // // debugger\n  // const {next}  = !!pagination && pagination\n  // // const results = !loading && data[0]\n  // // debugger\n  // // const {next}  = !!pagination && pagination\n  // // const results = !loading && data[0]\n  // // debugger\n  // useEffect(() => {\n  //   setMyLoad(false)\n  //   setLoadMoreGames(true)\n  // }, [ data ])\n\n  // useEffect(() => {\n  //   setLoadMoreGames(false)\n  // }, [ fullData ])\n  \n  // useEffect(() => {\n  //   setFullLoad( moreLoad.flat().filter(item => {return item !== undefined}) )\n  // }, [ data ])\n  // addToggle\n  // debugger\n  // useEffect(() => {\n  //   if(!refGames) return refGames.current.scrollTop = 500\n    \n  // }, [fullData])\n  // debugger\n\n  return (\n    \n       <>\n      {\n        loading \n          ? <LoadingComponent />\n          : <section id=\"games\" className=\"second__container games__list\">\n          <GameResults /> \n          <ul  className=\"games__container\" ref={!!refGames && refGames}>\n\n              {\n                fullData.map( (data, index) => (\n                  data.image &&\n                  <GameMediumCard key={ data.id }   values={{ data, index }}/>\n                  ))\n                }\n              {/* </InfiniteScroll> */}\n            </ul>\n            {/* <Pagination pagination={{ handleNextPage, handlePreviousPage, currentPage, next, previous }}/> */}\n            {\n              fullData.length > 0 &&\n                <ShowMoreButton values={ { handleNextPage, loadMoreGames, next , refGames} }/>\n            }\n            \n            <BackgroundAnimation />\n\n    </section>\n      }\n            </>\n  )\n})\n","\nimport React, { useContext, useEffect } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { useScrollTop } from '../../hooks/useScrollTop';\nimport '../../styles/favorite-games-page.css'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard';\nimport { ScrollTop } from '../helpers/ScrollTop';\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation';\nimport { FavSubmit } from '../helpers/FavSubmit';\n\n\nexport const FavGamesPage = () => {\n  \n\n  const { favoriteGames, dispatch } = useContext( DataContext )\n\n  const { handleRemoveAll } = FavSubmit(favoriteGames, dispatch)\n  // const { handleAdd, handleRemove, addToggle} = FavSubmit(data, dispatch)\n  // debugger\n  const { scrollTop } = useScrollTop()\n  // // const [favList, setFavList] = useState(favoriteGames)\n  // const [favGame, setFavGame] = useState()\n  // const [showFavGame, setShowFavGame] = useState(false)\n  // const [data, setData] = useState(favGame)\n  // const { name, image, rating_star, metacritic, calification, released } = favGame !== undefined && favGame\n  // const [ openContent, handleOpenContent, animation ] = useShowContent()\n  // // debugger\n  // const [slug, setSlug] = useState()\n  // const [removeRepeatElement, setRemoveRepeatElement] = useState([])\n\n\n  // useEffect(() => {\n  //   setRemoveRepeatElement([...new Set(favoriteGames)])\n  //   // return () => {\n  //   //   cleanup(remove)\n  //   // }\n  // }, [favoriteGames])\n  // debugger\n  // const handleFavGameImage = ( game ) => {\n    \n  //   handleOpenContent()\n  //   // setShowFavGame(false)\n  //   setSlug(game.slug)\n    \n  //   setTimeout(() => {\n  //     // const element = document.getElementById(`${game.name}`)\n  //     // element.scrollIntoView(false)\n  //     // setFavGame(game)\n  //     // setShowFavGame(true)\n  //     // setShowFavGame(!showFavGame)\n  //     // debugger\n  //   }, 200);\n    \n  // }\n  \n  // const handleRemoveGames = () => {\n  //   // setFavGame([])\n  // }\n\n  // const handleToTop = () => {\n  //   scrollTop()\n  // }\n  \n  \n  useEffect(() => {\n    scrollTop()\n    // scrollTop()\n  }, [  ])\n\n  // useEffect(() => {\n\n  // }, [ favGame ])\n  // debugger\n  return (\n    <>\n      <section className=\"favorite__page \">\n      <div className=\"page__header\">\n        <h2 className=\"favorite--games--title\">Favorite Games: { favoriteGames.length }</h2>\n        {\n          favoriteGames.length > 0 &&\n            <button \n              className=\"btn btn--remove\"\n              onClick={ handleRemoveAll }\n            >Remove All</button>\n\n        }\n      </div>\n      <div className=\"games__container\">\n        {\n           \n           favoriteGames.map((data, index) => (\n            <GameMediumCard key={ data.id }  className=\"animate__animated animate__fadeIn\" values={{ data, index }}/>\n            \n          ))\n        }\n      </div>\n      {/* <Modal\n        isOpen={ openContent }\n        // onAfterOpen={ handleToggleContent }\n        onRequestClose={ handleOpenContent }\n        className=\"Modal\"\n        overlayClassName=\"Overlay--cards\"\n        ariaHideApp={false}\n      >\n        <CardContent values={{ slug, animation, handleOpenContent }}/>\n        <CloseIcon \n          className=\"close--icon\"\n          onClick={ handleOpenContent }\n        />\n      </Modal> */}\n      {/* {\n        showFavGame && \n        <div className=\"fav__info\">\n          <figure className={ `fav__img ${ showFavGame ? 'animate__animated animate__fadeIn' : 'animate__animated animate__fadeOut' }` }>\n          <img className=\"fav--image\" src={image} alt={name} />\n          <figcaption className=\"fav--game--name\"> \n            { name }\n          </figcaption>\n        </figure>\n          <p className=\"info--title\">Name: <span>{ name }</span></p>\n          <p className=\"info--title\">Metacritic: <span>{ metacritic }</span></p>\n          <p className=\"info--title\">Calification: <span>{ calification }</span></p>\n          <p className=\"info--title\">Released: <span>{ released }</span></p>\n          <RatingStar rating_star={ rating_star } />\n        </div>\n      }      */}\n      {\n        favoriteGames.length > 10 &&\n        <ScrollTop />\n      }\n      \n      <BackgroundAnimation />\n\n    </section>\n    </>\n  )\n}\n","import React, { useContext, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\nimport { SearchPage } from '../components/search-page/SearchPage'\nimport { Header } from '../components/header/Header'\nimport { Home } from '../components/home/Home'\nimport { ModalCard } from '../components/modal/ModalCard'\nimport { GameList } from '../components/videogames-lists/GameList'\nimport { useFetchGames, useFetchGenres } from '../hooks/useFetchGame'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport history from './history'\nimport { GenrePage } from '../components/genres-page/GenrePage'\nimport { LoadingComponent } from '../components/loading/LoadingComponent'\nimport { GamePage } from '../components/game-page/GamePage'\nimport { GamesMap } from '../components/videogames-lists/GamesMap'\nimport { FavGamesPage } from '../components/favorite-games-page/FavGamesPage'\nimport { ApiComponent } from '../components/api-component/ApiComponent'\nimport { ScrollTop } from '../components/helpers/ScrollTop'\nimport { DataContext, GamesDataContext } from '../context/DataFetchContext'\nimport { usePagination } from '../hooks/usePagination'\nimport { useFullData } from '../hooks/useFullData'\nimport { BackgroundAnimation } from '../components/animations/BackgroundAnimation'\nimport { CardContent } from '../components/modal/CardContent'\n\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\n\n\nexport const GameRouter = () => {\n  // const dataSlice =  data.slice(6, 11);\n  // debugger\n  const {handleModal} = useContext(DataContext)\n  const { openContent, name, slug, handleOpenModal, animation } = handleModal\n  const {\n    handleNextPage, \n    handlePreviousPage, \n    currentPage, \n    page, \n    myLoad,\n    setMyLoad, setCurrentPage,loadMoreGames, setLoadMoreGames } = usePagination( )\n    const { openGameModal, handleOpenGameModal, handleCloseGameModal } = useContext(DataContext)\n\n  const { data, loading } = useFetchGames( page )\n\n  const {moreLoad, pagination, fullData} = useFullData( data )\n\n\n  const {next}  = !!pagination && pagination\n  useEffect(() => {\n    setMyLoad(false)\n    setLoadMoreGames(true)\n  }, [ data ])\n\n  useEffect(() => {\n    setLoadMoreGames(false)\n  }, [ fullData ])\n  \n  return (\n    <>\n    <Router history={ history }>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={ Home } />\n        <Route  exact path=\"/whatgame\" component={ Home }/>\n        {/* <Route  exact path=\"/games\" component={ GamePage }>\n          <Home/>\n        </Route> */}\n        \n\n        <Route exact path=\"/whatgame/genres\" component={ GenrePage }>\n        </Route>\n        <Route exact path=\"/whatgame/search-result\" component={ SearchPage }>\n        </Route>\n        <Route exact path=\"/whatgame/favorite-games\" component={ FavGamesPage }>\n        </Route>\n        <Route  exact path=\"/whatgame/api\" component={ ApiComponent } />\n        <Route exact path=\"/whatgame/games\">\n          <GamesDataContext.Provider value={{\n            fullData,\n            loading,\n            next,\n            handleNextPage,\n            loadMoreGames\n          }}>\n            <GamePage />\n          </GamesDataContext.Provider>\n          </Route>\n          <Route>\n          </Route>\n          <Redirect to=\"/whatgame\" component={ Home }/>\n      </Switch>\n\n      <Modal\n        isOpen={ openGameModal }\n        onRequestClose={ handleCloseGameModal }\n        ariaHideApp={false}\n        className=\"Modal \"\n        overlayClassName=\"Overlay--cards\"\n        \n        >\n        <CloseIcon \n          className=\"close--icon animate__animated animate__fadeIn\"\n          onClick={ handleCloseGameModal }\n          />\n        <CardContent />\n      </Modal>\n{/* \n      <Modal\n        isOpen={ openContent }\n        onRequestClose={ handleOpenModal }\n        ariaHideApp={false}\n        className=\"Modal \"\n        overlayClassName=\"Overlay--cards\"\n        \n        >\n        <CloseIcon \n          className=\"close--icon animate__animated animate__fadeIn\"\n          onClick={ handleOpenModal }\n          />\n        <CardContent values={{ slug, animation }}/>\n      </Modal> */}\n      {/* <ScrollTop /> */}\n      </Router>\n\n    </>\n  )\n}\n","import React, { useEffect, useReducer, useState } from 'react'\nimport { favoritesReducer } from './components/helpers/favoritesReducer';\nimport { DataContext } from './context/DataFetchContext'\nimport { useFetchGames, useFetchGenres, useGetGamesByName } from './hooks/useFetchGame'\nimport { useModalGame } from './hooks/useModalGame';\nimport { useShowContent } from './hooks/useShowContent';\n\nimport { GameRouter } from './router/GameRouter';\n\nexport const WhatGameApp = () => {\n  const [ searchGame, setSearchGame ] = useState( );\n  const { resultData, loading } = useGetGamesByName( searchGame )\n  const [mainModal, setMainModal] = useState({\n    name: '',\n    image: '',\n    open: false\n  })\n\n  const { openGameModal, gameModalInfo, handleCloseGameModal, handleOpenGameModal, animation } = useModalGame()\n  // const handleMainModal = (name, image) => {\n\n  // }\n\n  \n\n  const fetchGames = useFetchGames()\n\n  \n  const { genresData, genreCollection } = useFetchGenres();\n  const { data: dataGenres, loading:genreLoading } = genresData\n  // debugger\n  // const {data: dataGenres, loading: genreLoading,  genreCollection} = useFetchGenres();\n  // debugger\n\n  // const [allGenresGames, setAllGenresGames] = useState([])\n\n  // const handleAllGenresGames = (data) => {\n  //   setAllGenresGames(c => [...c, {\n\n  //   }].filter(item => item !== undefined))\n  // }\n  // const { data: dataGenres, loading: genreLoading } = useFetchGenres();\n  // console.log(dataGenres)\n  // debugger\n  // console.log(dataGenres)\n  const init = () => {\n    return JSON.parse(localStorage.getItem('favoriteGames')) || []\n  }\n\n  const [ openContent, handleOpenContent ] = useShowContent()\n  // debugger\n  const [gamesByGenre, setGamesByGenre] = useState( '' )\n  \n  const [favoriteGames, dispatch,] = useReducer(favoritesReducer, [], init)\n  // debugger\n\n  const [handleModal, setHandleModal] = useState({})\n  \n  useEffect(() => {\n    localStorage.setItem('favoriteGames', JSON.stringify(favoriteGames))\n  }, [ favoriteGames ])\n  // debugger\n  return (\n    <>\n      <DataContext.Provider value={ \n        {\n          fetchGames,\n          resultData,\n          searchGame, \n          setSearchGame, \n          loading,\n          dataGenres,\n          genreLoading,\n          openContent,\n          handleOpenContent,\n          // animation,\n          gamesByGenre,\n          setGamesByGenre,\n          favoriteGames,\n          dispatch,\n          genreCollection,\n          setHandleModal,\n          handleModal,\n          setMainModal,\n          mainModal,\n          openGameModal, \n          gameModalInfo, \n          handleCloseGameModal, \n          handleOpenGameModal, \n          animation \n          // genreData\n          // allGenresGames,\n          // handleAllGenresGames\n        } \n        }>\n        <GameRouter />\n      </DataContext.Provider>\n    </>\n  )\n}\n","import { useState } from \"react\"\n\nexport const useModalGame = () => {\n  const [openGameModal, setOpenGameModal] = useState(false);\n  const [gameModalInfo, setGameModalInfo] = useState('')\n  const [animation, setAnimation] = useState(false);\n\n  const handleOpenGameModal = (values) => {\n    setAnimation(true)\n    // debugger\n    setTimeout(() => {\n      setGameModalInfo(values)\n      setOpenGameModal(true)\n    }, 300);\n  }\n  \n  const handleCloseGameModal = () => {\n    setAnimation(false)\n    setTimeout(() => {\n      setOpenGameModal(false);\n      \n    }, 500);\n    setTimeout(() => {\n      // setGameModalInfo(null)\n    }, 600);\n  }\n  // debugger\n  return {\n    openGameModal, gameModalInfo, handleCloseGameModal, handleOpenGameModal, animation\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { WhatGameApp } from './WhatGameApp';\n\n\nimport '../src/styles/global-styles.css';\nimport '../src/styles/buttons-styles/buttons-styles.css';\nimport '../src/styles/loading-style.css'\n\nimport { LoadingComponent } from './components/loading/LoadingComponent';\nimport { LoadingSmallCards } from './components/loading/LoadingSmallCards';\n\n\nReactDOM.render(<WhatGameApp />, document.querySelector('#root'));","\nexport const menuList = [\n  {\n    name: 'Home',\n    content: false,\n    page: '/whatgame',\n    subMenu: false\n  },\n  {\n    name: 'Games',\n    content: false,\n    page: '/whatgame/games',\n    subMenu: false\n  },\n  {\n    name: 'Genres',\n    content: true,\n    // page: '',\n    subMenu: true\n  },\n  {\n    name: 'Library',\n    content: false,\n    page: '/whatgame/favorite-games',\n    saved: true,\n    count: true\n  },\n  {\n    name: 'API',\n    content: false,\n    page: '/whatgame/api',\n    subMenu: false,\n    // link: 'https://rawg.io/apidocs'\n  },\n\n  // {\n  //   name: 'Icon-Game',\n  //   content: true,\n  //   page: '/my-likes',\n  //   subMenu: false,\n  //   icon: <LibraryGames />\n  // }\n]\n\n// export const menuIcons = [\n//   {\n//     name: 'search',\n//     icon: <SearchIcon className=\"search--icon\"/>\n//   },\n//   {\n//     name: 'game-collection',\n//     icon: <LibraryGames className=\"games--collection--icon\"/>\n//   },\n//   {\n//     name: 'user',\n//     icon: <UserIcon className=\"user--icon\"/>\n//   },\n// ]","import React, { useEffect, useState } from 'react'\nimport '../../styles/loading-style.css';\n\nexport const LoadingComponent = ({data}) => {\n  // debugger\n  // const { searchGame } = data\n  const [cleanData, setCleanData] = useState();\n\n  useEffect(() => {\n    setCleanData(data && data.replace(/-/gi, ' '))\n  },[ data ])\n  // const cleanData = !!data && data.replace(/-/gi, ' ')\n  // debugger\n  return (\n    <div className=\"loading__container\">\n      <div className=\"animation__container\">\n        <div className=\"loading--animation\"></div>\n        <div className=\"loading--animation2\"></div>\n        <div className=\"loading--animation3\"></div>\n        <div className=\"loading--animation4\"></div>\n      </div>\n      <h2 className=\"loading--text\">Loading {cleanData}</h2>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\n\nexport const SubMenuItem = ({ handleGenrePage }) => {\n  \n  const { dataGenres } = useContext(DataContext)\n  // const { genreLoading, dataGenre, handleGenrePage } = values\n  // const { dataGenre} = useContext(DataContext)\n  // debugger\n  return (\n    <>\n      {\n        <ul className=\"sub--menu animate__animated animate__fadeIn\">\n      {\n        dataGenres.map(item => ((\n          <li \n            className=\"sub--menu--item\"\n            onClick={ () => handleGenrePage(item.slug) }\n            \n          >\n            { item.name }\n          </li>\n        )))\n      }\n    </ul>\n      }\n    </>\n  )\n}\n","import { useEffect, useRef, useState } from \"react\"\nimport { getDetailsGame, GetGames, getGamesByGenre, getGenreGames, getGameScreenshots, getGameByName, resizeFile } from \"../data/fetchGames\"\n\nexport const useFetchGames = ( pagination ) => {\n  const isMounted = useRef(true)\n  \n  const [dataGame, setDataGame] = useState({\n    data: [],\n    loading: true\n  })\n\n    useEffect(() => {\n      return () => {\n        isMounted.current = false\n      }\n    }, [])\n  useEffect(() => {\n    // debugger\n    GetGames( pagination )\n      .then(game => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            setDataGame({\n              data: game,\n              loading: false\n            })\n          }\n        }, 0);\n      })\n\n      \n  }, [ pagination ])\n  // debugger\n  return dataGame\n}\n\nexport const useFetchGenres = () => {\n  const [genresData, setGenresData] = useState({\n    data: [],\n    loading: true\n  })\n\n  const [genreCollection, setGenreCollection] = useState([])\n  const isMounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [  ])\n  useEffect(() => {\n    getGenreGames()\n      .then(genre => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            setGenresData({\n              data: genre,\n              loading: false\n            })\n          }\n        }, 0);\n      })\n  }, [ ])\n\n  useEffect(() => {\n    setTimeout(() => {\n      genresData.data.slice(0,6).map(item => {\n        getGamesByGenre(item.slug)\n          .then(item2 => {\n            setGenreCollection(c => [...c, {\n              id: item.id,\n              genre: item.name,\n              data: item2\n            }])\n          })\n      })\n    }, 0);\n  }, [ genresData.data ])\n  // debugger\n  return {genresData, genreCollection}\n}\n\nexport const useGamesByGenre = ( genre ) => {\n  const [gamesByGenreData, setGamesByGenreData] = useState({\n    data: [],\n    loading: true\n  })\n  const isMounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [  ])\n  useEffect(() => {\n    setTimeout(() => {\n    getGamesByGenre(genre)\n      .then(listGame => {\n          if(isMounted.current) {\n            setGamesByGenreData({\n              data: listGame,\n              loading: false\n            })\n          }\n        })\n      }, 3000);\n      }, [ genre ])\n  // debugger\n  return gamesByGenreData\n}\n\nexport const useGetGameDetails = ( game ) => {\n  const [gameDetails, setGameDetails] = useState({\n    data: { },\n    loading: true\n  })\n  const isMounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [  ])\n  useEffect(() => {\n    getDetailsGame(game)\n      .then(dataGame => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            // console.log(`mounted`)\n            setGameDetails({\n              data: dataGame,\n              loading: false\n            })\n          } else {\n            // console.log(`dismounted`)\n          }\n        }, 0);\n      })\n    }, [ game ]);\n    // debugger\n  return gameDetails\n}\n\nexport const useGetScreenshots = ( game ) => {\n  const isMounted = useRef(true)\n  const [screenshots, setScreenshot] = useState({\n    screenshotData: [],\n    loading: true\n  })\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [  ])\n  useEffect(() => {\n    getGameScreenshots( game )\n      .then(screenshot => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            setScreenshot({\n              screenshotData: screenshot,\n              loading: false\n            })\n          }\n        }, 0);\n      })\n\n  }, [ game ])\n\n  return screenshots;\n}\n\nexport const useGetGamesByName = ( searchInput ) => {\n  const [resultData, setResultData] = useState({\n    data: [],\n    loading: true\n  })\n\n  const isMounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [ ])\n\n  useEffect(() => {\n    getGameByName( searchInput )\n      .then(result => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            setResultData({\n              data: result,\n              loading: false\n            })\n          }\n        }, 0);\n      })\n  }, [ searchInput ])\n// debugger\n  return resultData\n}\n\n// export const useResizeImage = ( image = 'https://media.rawg.io/media/screenshots/a87/a8733e877f8fbe45e4a727c22a06aa2e.jpg') => {\n//   const [resizeImage, setResizeImage] = useState({\n//     lowImage: {},\n//     loading: true\n//   })\n\n//   useEffect(() => {\n//     resizeFile(image)\n//       .then(myImage => {\n//         setResizeImage({\n//           lowImage: myImage,\n//           loading: false\n//         })\n//       })\n//   })\n//   // debugger\n//   return resizeImage\n// }\n\n// setTimeout(() => {\n  //   genre.map(item => {\n  //     getGamesByGenre(item.slug)\n  //       .then(item2 => {\n  //         setGenreCollection({\n  //           data:[...data, {\n  //             genre_title: item.name,\n  //             array: item2.dataGames\n  //             // loading: true\n  //           }],\n  //           loading: false\n  //         })\n  //       })\n  //   })\n  // }, 2000);"],"sourceRoot":""}