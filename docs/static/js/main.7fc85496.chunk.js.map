{"version":3,"sources":["hooks/useFetchGame.js","components/header/ListDropDown.jsx","components/api-component/ApiComponent.jsx","hooks/useShowContent.js","components/header/ListItem.jsx","components/header/FavGames.jsx","components/header/ListGenresMobile.jsx","data/fetchGames.js","hooks/useScrollTop.js","context/DataFetchContext.js","components/helpers/favoritesReducer.js","assets/horizon.jpg","components/modal/RatingStar.jsx","components/modal/GameDescription.jsx","components/helpers/Slider.jsx","components/loading/LoadingText.jsx","components/modal/GallerySelector.jsx","components/modal/MainImageGallery.jsx","components/modal/Platforms.jsx","components/modal/GameGallery.jsx","components/modal/GeneralInfo.jsx","components/helpers/FavSubmit.js","components/modal/HeroImageModal.jsx","components/modal/Rating.jsx","components/loading/LoadingComponentSmall.jsx","components/animations/BackgroundAnimation.jsx","components/modal/CardContent.jsx","utils/animation_object.js","hooks/useIntersection.js","components/videogames-lists/GameMediumCard.jsx","components/search-page/ResultHeader.jsx","hooks/usePagination.js","hooks/useFullData.js","components/helpers/ShowMoreButton.jsx","components/search-page/SearchPage.jsx","components/header/SearchBar.jsx","components/header/MenuList.jsx","components/header/MenuItem.jsx","components/header/SubMenuFavGames.jsx","components/header/Navbar.jsx","components/header/Header.jsx","components/videogames-lists/GameSmallCard.jsx","assets/re-v.jpg","components/helpers/ScrollTop.jsx","components/videogames-lists/GameList.jsx","components/videogames-lists/GamesMap.jsx","components/home/CheckNow.jsx","components/home/Home.jsx","router/history.js","components/genres-page/GamesGenreGrid.jsx","components/genres-page/GenrePage.jsx","components/game-page/GameResults.jsx","components/game-page/GamePage.jsx","components/favorite-games-page/FavGamesPage.jsx","router/GameRouter.jsx","WhatGameApp.js","hooks/useModalGame.js","index.js","data/menu.js","components/loading/LoadingComponent.jsx","components/header/SubMenuItem.jsx"],"names":["useFetchGames","pagination","isMounted","useRef","useState","data","loading","dataGame","setDataGame","useEffect","current","GetGames","then","game","setTimeout","useFetchGenres","genresData","setGenresData","genreCollection","setGenreCollection","getGenreGames","genre","map","item","getGamesByGenre","slug","item2","c","id","name","useGamesByGenre","gamesByGenreData","setGamesByGenreData","listGame","useGetGameDetails","gameDetails","setGameDetails","getDetailsGame","useGetScreenshots","screenshotData","screenshots","setScreenshot","getGameScreenshots","screenshot","useGetGamesByName","searchInput","resultData","setResultData","getGameByName","result","ListDropDown","useContext","DataContext","dataGenres","genreLoading","className","to","ApiComponent","href","target","rel","useShowContent","initialState","openContent","setOpenContent","animation","setAnimation","handleOpenContent","ListItem","favoriteGames","setGamesByGenre","history","useHistory","genreList","menuList","scrollTop","useScrollTop","handleClickSubmit","e","preventDefault","show","show2","showComponent","setShowComponent","changeAnimation","setChangeAnimation","changeAnimation2","setChangeAnimation2","sliceFavList","setSliceFavList","sliceFav","slice","clearImmediate","length","handleShow","handleShow2","page","subMenu","saved","count","link","onClick","values","handleGenrePage","push","FavGames","ListGenresMobile","mainUrl","api_key","queryGame","urlGamePage","Math","floor","random","a","tempPage","undefined","fetch","response","json","results","next","previous","mixGames","randomResult","dataGames","released","metacritic","image","background_image","rating_star","rating_top","checked","console","error","total_games","games_count","image_background","genreInput","includes","mixResults","platforms","calification","rating","ratings","updated","clasification","esrb_rating","gallery","short_screenshots","Error","description","description_raw","genres","image2","background_image_additional","people_say","developers","publishers","tags","log","gameScreenshots","errror","inputSearch","filter","showScroll","setShowScroll","window","addEventListener","pageYOffset","scrollTo","top","behavior","createContext","GamesDataContext","favoritesReducer","state","action","type","find","payload","RatingStar","ratingStars","index","i","round","GameDescription","Slider","refSlider","moveToRight","scrollLeft","moveToLeft","LoadingText","GallerySelector","setCurrentScreenshot","src","effect","MainImageGallery","currentScreenshot","alt","Platforms","platform","GameGallery","ref","GeneralInfo","publisher","FavSubmit","dispatch","addToggle","setAddToggle","handleAdd","handleRemove","handleRemoveAll","HeroImageModal","Rating","orderingRating","setOrderingRating","sort","b","title","style","width","percent","LoadingComponentSmall","cleanData","replace","BackgroundAnimation","CardContent","React","memo","gameModalInfo","setHandleData","handleDataMemo","useMemo","handleOpenModal","animations_object","useIntersectionObserver","isVisible","setIsVisible","handleIntersection","entries","entry","isIntersecting","options","root","rootMargin","threshold","observer","IntersectionObserver","observe","unobserve","GameMediumCard","handleOpenGameModal","cardRef","gameCalification","ResultHeader","searchGame","usePagination","setPage","currentPage","setCurrentPage","myLoad","setMyLoad","loadMoreGames","setLoadMoreGames","handleNextPage","handlePreviousPage","useFullData","moreLoad","setMoreLoad","fullData","setFullData","setPagination","flat","ShowMoreButton","refGames","SearchPage","LoadingComponent","toString","SearchBar","setSearchGame","inputValue","setInputValue","onSubmit","toLowerCase","value","onChange","MenuList","MenuItem","list","openSubMenu","setOpenSubMenu","mounted","SubMenuItem","SubMenuFavGames","Navbar","openFavsMenu","setOpenFavsMenu","renderFavGames","setRenderFavGames","myFavGames","cleanup","Header","isOpen","onRequestClose","ariaHideApp","overlayClassName","GameSmallCard","openGameModal","handleCloseGameModal","setHandleModal","intro","ScrollTop","GameList","fullLoad","setFullLoad","settingLoading","GamesMap","handleGenres","setHandleGenres","delayTime","CheckNow","Home","fetchGames","vh","innerHeight","document","documentElement","setProperty","myCheckNow","setMyCheckNow","createBrowserHistory","GamesGenreGrid","gamesByGenre","setButtonLoad","GenrePage","GameResults","GamePage","FavGamesPage","GameRouter","handleModal","exact","path","component","Provider","WhatGameApp","open","mainModal","setMainModal","setOpenGameModal","setGameModalInfo","useModalGame","useReducer","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","querySelector","content","setCleanData"],"mappings":"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","file":"static/js/main.7fc85496.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\"\nimport { getDetailsGame, GetGames, getGamesByGenre, getGenreGames, getGameScreenshots, getGameByName, resizeFile } from \"../data/fetchGames\"\n\nexport const useFetchGames = ( pagination ) => {\n  const isMounted = useRef(true)\n  \n  const [dataGame, setDataGame] = useState({\n    data: [],\n    loading: true\n  })\n\n    useEffect(() => {\n      return () => {\n        isMounted.current = false\n      }\n    }, [])\n  useEffect(() => {\n    // debugger\n    GetGames( pagination )\n      .then(game => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            setDataGame({\n              data: game,\n              loading: false\n            })\n          }\n        }, 0);\n      })\n\n      \n  }, [ pagination ])\n  // debugger\n  return dataGame\n}\n\nexport const useFetchGenres = () => {\n  const [genresData, setGenresData] = useState({\n    data: [],\n    loading: true\n  })\n\n  const [genreCollection, setGenreCollection] = useState([])\n  const isMounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [  ])\n  useEffect(() => {\n    getGenreGames()\n      .then(genre => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            setGenresData({\n              data: genre,\n              loading: false\n            })\n          }\n        }, 0);\n      })\n  }, [ ])\n\n  useEffect(() => {\n    setTimeout(() => {\n      genresData.data.map(item => {\n        getGamesByGenre(item.slug)\n          .then(item2 => {\n            setGenreCollection(c => [...c, {\n              id: item.id,\n              genre: item.name,\n              data: item2\n            }])\n          })\n      })\n    }, 0);\n  }, [ genresData.data ])\n  // debugger\n  return {genresData, genreCollection}\n}\n\nexport const useGamesByGenre = ( genre ) => {\n  const [gamesByGenreData, setGamesByGenreData] = useState({\n    data: [],\n    loading: true\n  })\n  const isMounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [  ])\n  useEffect(() => {\n    setTimeout(() => {\n    getGamesByGenre(genre)\n      .then(listGame => {\n          if(isMounted.current) {\n            setGamesByGenreData({\n              data: listGame,\n              loading: false\n            })\n          }\n        })\n      }, 3000);\n      }, [ genre ])\n  // debugger\n  return gamesByGenreData\n}\n\nexport const useGetGameDetails = ( game ) => {\n  const [gameDetails, setGameDetails] = useState({\n    data: { },\n    loading: true\n  })\n  const isMounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [  ])\n  useEffect(() => {\n    getDetailsGame(game)\n      .then(dataGame => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            // console.log(`mounted`)\n            setGameDetails({\n              data: dataGame,\n              loading: false\n            })\n          } else {\n            // console.log(`dismounted`)\n          }\n        }, 0);\n      })\n    }, [ game ]);\n    // debugger\n  return gameDetails\n}\n\nexport const useGetScreenshots = ( game ) => {\n  const isMounted = useRef(true)\n  const [screenshots, setScreenshot] = useState({\n    screenshotData: [],\n    loading: true\n  })\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [  ])\n  useEffect(() => {\n    getGameScreenshots( game )\n      .then(screenshot => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            setScreenshot({\n              screenshotData: screenshot,\n              loading: false\n            })\n          }\n        }, 0);\n      })\n\n  }, [ game ])\n\n  return screenshots;\n}\n\nexport const useGetGamesByName = ( searchInput ) => {\n  const [resultData, setResultData] = useState({\n    data: [],\n    loading: true\n  })\n\n  const isMounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [ ])\n\n  useEffect(() => {\n    getGameByName( searchInput )\n      .then(result => {\n        setTimeout(() => {\n          if(isMounted.current) {\n            setResultData({\n              data: result,\n              loading: false\n            })\n          }\n        }, 0);\n      })\n  }, [ searchInput ])\n// debugger\n  return resultData\n}\n\n// export const useResizeImage = ( image = 'https://media.rawg.io/media/screenshots/a87/a8733e877f8fbe45e4a727c22a06aa2e.jpg') => {\n//   const [resizeImage, setResizeImage] = useState({\n//     lowImage: {},\n//     loading: true\n//   })\n\n//   useEffect(() => {\n//     resizeFile(image)\n//       .then(myImage => {\n//         setResizeImage({\n//           lowImage: myImage,\n//           loading: false\n//         })\n//       })\n//   })\n//   // debugger\n//   return resizeImage\n// }\n\n// setTimeout(() => {\n  //   genre.map(item => {\n  //     getGamesByGenre(item.slug)\n  //       .then(item2 => {\n  //         setGenreCollection({\n  //           data:[...data, {\n  //             genre_title: item.name,\n  //             array: item2.dataGames\n  //             // loading: true\n  //           }],\n  //           loading: false\n  //         })\n  //       })\n  //   })\n  // }, 2000);","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { useFetchGenres } from '../../hooks/useFetchGame'\nimport { LoadingComponent } from '../loading/LoadingComponent'\n\nexport const ListDropDown = () => {\n  // const { data, loading } = useFetchGenres()\n  const { dataGenres, genreLoading } = useContext(DataContext)\n  return (\n    <ul className=\"drop__down__list\">\n      {\n        genreLoading\n          ? <LoadingComponent />\n          : dataGenres.map(({id, name}) => (\n            <li key={id} className=\"list--item\">\n              <Link to=\"/genres\">{ name }</Link>\n            </li>\n          ) )\n      }\n    </ul>\n  )\n}\n","import React from 'react'\n\nimport '../../styles/rawg-styles.css';\nexport const ApiComponent = () => {\n  return (\n    <div className=\"api__container\">\n      <div className=\"api__background\"></div>\n      <div className=\"api__content\">\n        {/* <CloseIcon className=\"close--icon\" /> */}\n        <h2 className=\"title block--temp\"> RAWG</h2>\n        <h3 className=\"subtitle block--temp\">Video Games Database API</h3>\n        <p className=\"paragraph block--temp\">There are two types of companies: hoarders and givers. RAWG is the largest video game database and game discovery service. And we are gladly sharing our 500,000+ games, search, and machine learning recommendations with the world. Learn what the RAWG games database API can do and build something cool with it!</p>\n\n        <h3 className=\"warning block--temp\">\n        If you click on RAWG a new tab will open in your browser\n        </h3>\n        <a className=\"btn block--temp\" href=\"https://rawg.io/apidocs\" target=\"_blank\" rel='noreferrer'>\n          RAWG\n        </a>\n\n      </div>\n    </div>\n  )\n}\n","import { useContext, useState } from \"react\";\n\nexport const useShowContent = ( initialState = false ) => {\n  const [openContent, setOpenContent] = useState(initialState);\n  const [animation, setAnimation] = useState(false);\n\n  // const { handle } = useContext(contextValue)\n  const handleOpenContent = () => {\n    setAnimation(!animation)\n    setTimeout(() => {\n      openContent ? setOpenContent(false) : setOpenContent( true )\n    }, 500);\n  }\n\n  return [openContent, handleOpenContent, animation]\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { IoMdArrowDropdown as DownArrow } from 'react-icons/io';\nimport { Link } from 'react-router-dom';\nimport { menuList } from '../../data/menu';\nimport { useScrollTop } from '../../hooks/useScrollTop';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { ListDropDown } from './ListDropDown';\n\nimport { VscLibrary as LibraryGames } from 'react-icons/vsc';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { FavGames } from './FavGames';\nimport { SubMenuItem } from './SubMenuItem';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { useHistory } from 'react-router';\nimport { ListGenresMobile } from './ListGenresMobile';\nimport { ApiComponent } from '../api-component/ApiComponent';\n\n\nexport const ListItem = ( { handleOpenContent } ) => {\n  const [genres, setGenres] = useState(false)\n  const { favoriteGames, setGamesByGenre, dataGenres,  } = useContext(DataContext)\n  const history = useHistory()\n  const { genreList } = menuList[2]\n  // const [ openContent, handleOpenContent ] = useShowContent()\n  const { scrollTop } = useScrollTop()\n\n  const handleClickSubmit = (e) => {\n    e.preventDefault()\n    handleOpenContent(false)\n    // console.log('click')\n    scrollTop()\n    // unmountComponentAtNode(document.getElementById('root'));\n\n  }\n  // debugger\n  const [showComponent, setShowComponent] = useState({\n    show: false,\n    show2: false\n  })\n  // const [show2, setShow2] = useState(false)\n  const [changeAnimation, setChangeAnimation] = useState(false)\n  const [changeAnimation2, setChangeAnimation2] = useState(false)\n\n\n  const [sliceFavList, setSliceFavList] = useState(favoriteGames)\n\n  useEffect(() => {\n    const sliceFav = setSliceFavList(sliceFavList.slice(0,6))\n    return () => {\n      clearImmediate(sliceFav)\n    }\n  }, [ favoriteGames.length ])\n    // const favGameListSliced = favoriteGames.slice(0, 6)\n  const { show, show2 } = showComponent\n  // debugger\n  const handleShow = () => {\n    setChangeAnimation(!show)\n    setTimeout(() => {\n      setShowComponent({\n        show: !show,\n        show2: false\n      })\n    }, 500);\n  }\n  \n\n  const handleShow2 = () => {\n    setChangeAnimation2(!show2)\n    setTimeout(() => {\n      setShowComponent({\n        show: false,\n        show2: !show2\n      })\n    }, 500);\n  }\n  \n  // debugger\n  const handleGenrePage = ( genre ) => {\n    // debugger\n    setGamesByGenre( genre )\n    // debugger\n    history.push('/whatgame/genres', null)\n    handleOpenContent()\n    return <LoadingComponent />\n  }\n\n  // debugger\n  return (\n    <ul className=\"menu__list\">\n      {\n        menuList.map(({name, page, subMenu, count, saved, link}) => (\n          (saved)\n           ? <li \n              key={name}\n              className=\"list--item\"\n              onClick={ handleShow }  \n            > {name}\n              <span className=\"items--saved--mobile\"> { favoriteGames.length }</span>\n              {\n                show && <FavGames \n                values={ {sliceFavList, changeAnimation, handleOpenContent} } />\n              }\n            </li> \n\n           : <li \n              key={ name }\n              className=\"list--item\"\n              onClick={ subMenu ? handleShow2 : handleClickSubmit }\n            > \n              <Link to={ page } >\n                { name }\n              </Link>\n                  \n                  \n        \n            </li>\n        ))\n      }\n      \n      {/* <li className=\"fav--game\">test</li> */}\n      {/* <li className=\"list--item\">\n        Library { favoriteGames.length }\n      </li>         */}\n      {/* <li className=\"list--item\">\n        { name }\n      </li> */}\n          <li key={genreList}\n            className=\"list--sub\"\n            onClick={ handleShow2 }\n          >\n            { genreList }\n             {\n               show2 && <ListGenresMobile values={{ changeAnimation2, handleGenrePage }}/>\n               \n             }\n          </li>\n\n\n    </ul>\n  )\n}\n","import React, { useContext } from 'react'\nimport { MdRemoveRedEye as Check } from 'react-icons/md'\nimport { Link, useHistory } from 'react-router-dom'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { LoadingComponent } from '../loading/LoadingComponent'\n\nexport const FavGames = ({ values }) => \n{\n  const{ sliceFavList, changeAnimation, handleOpenContent} = values\n\n  // debugger\n  const { favoriteGames } = useContext( DataContext )\n\n  // const history = useHistory()\n  // const handleFavPage = ()  => {\n  //   history.push('./favorite-games', null)\n  //   handleOpenContent()\n  //   return <LoadingComponent />\n  // }\n\n  const handleFavPage = () => {\n    handleOpenContent()\n    return <LoadingComponent />\n  }\n  return (\n    <ul className={`sub__menu__favs ${ changeAnimation ? 'animate__animated animate__fadeInDown' : 'animate__animated animate__fadeOutUp' }`}>\n    {\n      sliceFavList.map(item => (\n        <li key={item.name} className=\"fav--game\"> {item.name} \n        <Check className=\"eye--check\"/> \n        </li>\n      ))\n    }\n    \n      <li className=\"fav--game \" onClick={ handleFavPage }>\n        <Link to=\"/whatgame/favorite-games\" className=\"btn__primary\">\n          View More\n        </Link>\n        {/* <button className=\"show--more\" onClick={ handleFavPage }>Show More</button> */}\n      </li>\n    \n  </ul>\n  )\n}\n\n\n","import React, { useContext } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\n\nexport const ListGenresMobile = ({values}) => {\n  \n  const { dataGenres } = useContext( DataContext )\n  const { changeAnimation2, handleGenrePage } = values\n  return (\n    <ul className={`sub__menu__genres ${ changeAnimation2 ? 'animate__animated animate__fadeInUp' : 'animate__animated animate__fadeOutDown' }`}>\n      {\n        dataGenres.map(item => (\n          <li\n            key={item.name} \n            className=\"genre--item\"\n            onClick={ () => handleGenrePage(item.slug) }\n          >{item.name}\n          \n          </li>\n        ))\n      }\n    </ul>\n  )\n}\n","import { useState } from \"react\";\nimport Resizer from \"react-image-file-resizer\";\n\nconst mainUrl = `https://api.rawg.io/api/`;\nconst api_key = 'key=566bbd60217a466287e5e182d0437bc8';\nconst queryGame = 'games?';\nconst queryGenres = 'genres?';\nconst urlGamePage = `${mainUrl}${queryGame}${api_key}&page_size=40`;\nconst randomPage = Math.floor(Math.random()* 100) + 1;\n\n\nexport const GetGames = async ( page ) => {\n  // debugger\n  let tempPage = ''\n  try {\n    // const response = await fetch( \n    //   (page === undefined)\n    //     ? `${mainUrl}${queryGame}${api_key}&page_size=40`\n    //     : page\n    //  );\n\n      if(page === undefined || page === '') {\n        tempPage = urlGamePage\n      } else {\n        tempPage = page\n      }\n    //  debugger\n    // const { results, next, previous } = await response.json();\n    // debugger\n    const response = await fetch(`${tempPage}`)\n    // const response = await fetch(`${tempPage}&ordering=-metacritic`)\n    // debugger\n    const {results, next, previous, count} = await response.json()\n    // debugger\n    // debugger\n    // const response2 = await fetch(next);\n    // const { results:results2, next:next2 } = await response2.json()\n    // const {next, previous} = data\n    let mixGames = [...results]\n    const randomResult = results[Math.floor( Math.random() * results.length )]\n    // debugger\n    const dataGames = mixGames.map(game => {\n      // debugger\n      return {\n        id: game.id,\n        name: game.name,\n        released: game.released,\n        metacritic: game.metacritic,\n        image: game.background_image,\n        slug: game.slug,\n        rating_star: game.rating_top,\n        checked: false\n        // random: randomResult,\n        // nextPage: next,\n        // previousPage: previous,\n      }\n    })\n\n    // debugger\n    // const responseNext = await fetch(data.next)\n    // const nextPage = await responseNext.json()\n\n    // const responsePrevious = await fetch(data.previous)\n    // const previousPage = await responsePrevious.json()\n\n\n    // debugger\n    // debugger\n    return {dataGames, next, previous, randomResult, count}\n    // return [dataGame, nextPage, previousPage]\n    // return [dataGame, next, previous]\n    \n  } catch (error) {\n    console.error('error on: ',  error)\n  }\n}\n\n\nexport const getGenreGames = async () => {\n  // debugger\n  try {\n    const response = await fetch(`${mainUrl}${queryGenres}${api_key}`);\n  const { results } = await response.json();\n  \n  const dataGames = results.map(genre => {\n    return {\n      id: genre.id,\n      slug: genre.slug,\n      name: genre.name,\n      total_games: genre.games_count,\n      image: genre.image_background\n    }\n  })\n  // let genreCollection = []\n\n  // const handleGamesByGenre = async ( genre ) => {\n  //   const resp = await fetch(`${mainUrl}${queryGame}${api_key}&genres=${genre}&page_size=40&ordering=-metacritic`)\n  //   const {results} = await resp.json()\n  //   const tempResults = {\n  //     genre: genre,\n  //     dataByGenre: results\n  //   }\n  //   // debugger\n  //   return genreCollection.push(tempResults)\n  //   // return results\n  //   // debugger\n  //   // return  genreCollection\n  // }\n  // const temp = dataGames.forEach(item=> {\n  //   // debugger\n  //   return  handleGamesByGenre(item.slug)\n  // });\n  \n  // console.log(genreCollection)\n  // const dataGenreCollection = await dataGames.map(async (item) => {\n  //   const temp = await handleGamesByGenre(item.slug).then(item => {\n  //     return {\n  //       genre: item.slug,\n  //       genreData: item\n  //     }\n  //   })\n  //   // debugger\n\n  //   return temp\n  //   // debugger\n  // })\n  // debugger\n  // let gettingGamesByGenre\n  // setTimeout(() => {\n  //    gettingGamesByGenre = dataGames.map((item) => {\n    \n  //     const myData = fetch(`${mainUrl}${queryGame}${api_key}&genres=${item.slug}&page_size=40&ordering=-metacritic`).then((data) => data.json().catch((error) => console.log(error)))\n  //     debugger\n  //     // gettingGamesByGenre = [...myData]\n  //     // const myData = data.map(item => {\n  //     //   console.log(item)\n  //     // })\n  //     // const myPromise = data.then(item => {\n  //     //   console.log(item)\n  //     // })\n  //     // return data\n  //   })\n    \n  // }, 2000);\n  // console.log(gettingGamesByGenre)\n  // debugger\n  // debugger\n  // console.log(gettingGamesByGenre)\n  // debugger\n  return dataGames\n  } catch (error) {\n    console.error(error)\n  }\n  \n}\n\nexport const getGamesByGenre = async ( genre ) => {\n  // debugger\n  try {\n    let genreInput = ''\n    // debugger\n    if(genre.includes('genres=')) {\n      genreInput = genre\n      // debugger\n      // debugger\n    } else {\n      genreInput = `${mainUrl}${queryGame}${api_key}&genres=${genre}&page_size=40&`\n      // genreInput = `${mainUrl}${queryGame}${api_key}&genres=${genre}&page_size=40&ordering=-metacritic`\n      // debugger\n    }    \n    // debugger\n    const response = await fetch( genreInput );\n    // debugger\n    const { results, next, previous, count } = await response.json();\n    // debugger\n    \n    \n    \n    // const response2 = await fetch(next);\n    // const { results: results2, next: next2 } = await response2.json()\n    // debugger\n    const mixResults = [...results]\n    // debugger\n    // debugger\n  const dataGames = mixResults.map( listGame => {\n    return {\n      id: listGame.id,\n      name: listGame.name,\n      slug: listGame.slug,\n      platforms: listGame.platforms,\n      released: listGame.released,\n      image: listGame.background_image,\n      calification: listGame.rating,\n      rating_star: listGame.rating_top,\n      ratings: listGame.ratings,\n      metacritic: listGame.metacritic,\n      updated: listGame.updated,\n      clasification: listGame.esrb_rating,\n      gallery: listGame.short_screenshots\n    }\n  })\n  // debugger\n  return {dataGames, previous, count, next}\n  } catch (error) {\n    console.error(new Error(error))\n  }\n}\n\nexport const getDetailsGame = async ( game ) => {\n  try {\n    const response = await fetch(`${mainUrl}games/${game}?${api_key}`)\n  const data = await response.json();\n  // debugger\n  return {\n    id: data.id,\n    name: data?.name,\n    slug: data?.slug,\n    description: data?.description_raw,\n    metacritic: data?.metacritic,\n    released: data?.released,\n    image: data?.background_image,\n    genre: data?.genres,\n    image2: data?.background_image_additional,\n    calification: data?.rating,\n    rating_star: data?.rating_top,\n    people_say: data?.ratings,\n    platforms: data?.platforms,\n    developers: data?.developers,\n    publishers: data?.publishers,\n    clasification: data?.esrb_rating,\n    tags: data?.tags\n  }\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const getGameScreenshots = async ( game ) => {\n try {\n  const response = await fetch(`${mainUrl}games/${game}/screenshots?${api_key}`);\n  const { results } = await response.json();\n  \n  const gameScreenshots = results.map(screenshot => {\n    return {\n      id: screenshot.id,\n      screenshot: screenshot.image\n    }\n  })\n\n  return gameScreenshots;\n } catch (error) {\n   console.errror(error)\n }\n  \n}\n\nexport const getGameByName = async ( searchInput ) => {\n  // debugger\n  try {\n    let inputSearch = ''\n    // debugger\n  if(searchInput && searchInput.includes('.com')){\n    inputSearch = `${searchInput}&page_size=40`\n  } else if(searchInput) {\n    inputSearch =`${mainUrl}${queryGame}${api_key}&search=${searchInput}&page_size=40`\n  } else {\n    return inputSearch\n  }\n  // debugger\n  const response = await fetch(inputSearch)\n  const { results, next, previous } = await response.json();\n\n  // const response2 = await fetch(next)\n  // const {results: results2, next: next2} = await response2.json()\n\n  const mixResults = [...results]\n  // debugger\n  const dataGames = mixResults.filter(item => {\n    // debugger\n    return item.rating > 1\n  }).map( result => {\n    // debugger\n    return {\n      id: result.id,\n      name: result.name,\n      slug: result.slug,\n      released: result.released,\n      calification: result.rating,\n      rating_star: result.rating_top,\n      image: result.background_image,\n      metacritic: result.metacritic,\n      checked: false\n    }\n  })\n\n  // debugger\n  return {dataGames,next, previous}\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst paginationFetch = async ( page ) => {\n  const response = await fetch(page)\n  const { results } = await response.json()\n}","import { useState } from \"react\";\n\nexport const useScrollTop = () => {\n  \n\n\n  const [showScroll, setShowScroll] = useState(false)\n\n  const checkScrollTop = () => {\n    if (!showScroll && window.pageYOffset > 400){\n      setShowScroll(true)\n    } else if (showScroll && window.pageYOffset <= 400){\n      setShowScroll(false)\n    }\n  };\n\n  const scrollTop = () =>{\n    window.scrollTo({top: 0, behavior: 'smooth'});\n  };\n\n  window.addEventListener('scroll', checkScrollTop)\n\n  return {scrollTop}\n}","import { createContext } from 'react';\n\nexport const DataContext = createContext()\n\nexport const GamesDataContext = createContext()","// let idContainer = []\nexport const favoritesReducer = (state = [], action) => {\n  // debugger\n  switch (action.type) {\n    case 'add': \n    // const { id } = action.payload\n    // let temp = []\n    if(state.find(item => item.id === action.payload.id)) {\n      // debugger\n      return state\n    }\n    else {\n      // debugger\n      // idContainer = [...idContainer, id]\n      // temp = [...temp, {...action.payload.id }]\n      // debugger\n      return [{ ...action.payload, checked: true }, ...state]\n    }\n    // debugger\n    // debugger\n      // return state\n    case 'del': return state.filter(item => item.id !== action.payload);\n\n    case 'remove': return state = []\n    \n    default:\n    return state;\n  }\n}","export default __webpack_public_path__ + \"static/media/horizon.41cc8253.jpg\";","import React from 'react'\nimport { RiStarFill as StarIcon} from 'react-icons/ri';\n\nexport const RatingStar = ({ rating_star, index }) => {\n  let ratingStars = []\n  // const myRating = \n  if( rating_star ) {\n    for(let i = 0; i < Math.round(rating_star); i++) {\n     ratingStars.push(<StarIcon key={i} className=\"star--icon\"/>)\n     }\n  }\n  // return ratingStars\n  // debugger\n  return (\n    <div className=\"rating--star\">\n      {\n        ratingStars\n      }\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nexport const GameDescription = ({ data }) => {\n  const { description } = data;\n  // console.log('game--description')\n  // useEffect(() => {\n  // }, [data])\n  // debugger\n  return (\n    <div id=\"description--game\" className=\"game__description animate__animated animate__fadeIn\">\n      <h3 className=\"game--subtitles\">Description</h3>\n      <p className=\"game--description\">{ description }</p>\n    </div>\n  )\n}\n","import React, { useRef } from 'react'\nimport { IoIosArrowBack as LeftArrow, IoIosArrowForward as RightArrow } from 'react-icons/io'\nexport const Slider = ( { refSlider } ) => {\n  // const ref = useRef( null )\n\n  const handleRightArrow = (  moveToLeft  ) => {\n    refSlider.current.scrollLeft += moveToLeft;\n  }\n\n  const handleLeftArrow = (  moveToRight  ) => {\n    refSlider.current.scrollLeft -= moveToRight;\n  }\n\n\n  return (\n    <div className=\"slider\">\n      <LeftArrow \n        className=\"left--arrow\"\n        onClick={ () => handleLeftArrow(1100) }\n      />\n      <RightArrow \n        className=\"right--arrow\"\n        onClick={ () => handleRightArrow(1100) }\n      />\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const LoadingText = () => {\n  // debugger\n  return (\n    <h1 className=\"loading--text\">loading</h1>\n  )\n}\n","import React from 'react'\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { LoadingComponent } from '../loading/LoadingComponent';\n\nexport const GallerySelector = ({ values }) => {\n  const { item:{ screenshot }, setCurrentScreenshot, index  } = values\n  // const {screenshot, name} = screenshots;\n  // debugger\n  // debugger\n  const handleLoad = () => {\n    return <LoadingComponent />\n  }\n  return (\n    <figure className=\"game__gallery__selection\">\n      <LazyLoadImage \n        className=\"selection--image\" src={ screenshot } \n        onClick={() => setCurrentScreenshot(index)}\n        effect=\"opacity\"\n      //  afterLoad={ handleLoad }\n      // visibleByDefault={ Image.src === '' }\n        />\n    </figure>\n  )\n}\n","import React from 'react'\n\nexport const MainImageGallery = ( {values} ) => {\n  // debugger\n  const { screenshotData, currentScreenshot } = values\n  const { screenshot, name } = !!screenshotData && screenshotData[currentScreenshot]\n  // debugger\n  return (\n    <figure className=\"main__image__gallery animate__animated animate__fadeIn\">\n      <img className=\"main--gallery--image\" src={ screenshot } alt={ name }/>\n    </figure>\n  )\n}\n","import React from 'react'\n\nexport const Platforms = ( { platforms } ) => {\n  // debugger\n  // console.log('platforms')\n  return (\n    <div className=\"game__platforms\">\n      <h3 className=\"game--subtitles\">Platforms</h3>\n      <ul className=\"platforms\">\n        {\n          platforms.map(({ platform }) => (\n            <li key={platform.id} className=\"platform--item\">{ platform.name }</li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useGetScreenshots } from '../../hooks/useFetchGame'\nimport { Slider } from '../helpers/Slider'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { LoadingText } from '../loading/LoadingText'\nimport { GallerySelector } from './GallerySelector'\nimport { MainImageGallery } from './MainImageGallery'\nimport { Platforms } from './Platforms'\n\nexport const GameGallery = ({ data }) => {\n  const { image, image2, name, slug } = data;\n  const { screenshotData, loading } = useGetScreenshots( slug )\n  const refSlider = useRef()\n  // const { screenshot } = loading!== true && screenshotData[0]\n  // debugger\n  const [currentScreenshot, setCurrentScreenshot] = useState( 0 )\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     <MainImageGallery />\n  //   }, 2000)\n  // }, [ currentScreenshot ])\n  // debugger\n  // console.log('game--gallery')\n  // debugger\n  return (\n    <div className=\"game__gallery\">\n      <h3 className=\"game--subtitles\">Gallery</h3>\n      {\n        !loading && \n          <MainImageGallery values={{ screenshotData, currentScreenshot }} className=\"animate__animated animate__fadeIn\"/>\n      }\n      <Slider refSlider={ refSlider } />\n      {\n        loading\n          ? <LoadingText />\n          : <div className=\"carousel__item\" ref={ refSlider }>\n          {\n            screenshotData.map( (item, index) => (\n              <GallerySelector \n                key={item.id} \n                // screenshots={screenshots}\n                // setCurrentScreenshot={setCurrentScreenshot}\n                values={{ item, setCurrentScreenshot, index }}\n              />\n            ))\n          }\n          </div>  \n      }\n      \n      {/* <Platforms platforms={ platforms }/> */}\n      \n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nexport const GeneralInfo = ({ data }) => {\n  // debugger\n  // console.log('general--info')\n  const { publishers, released, metacritic, clasification, genre } = data;\n  // if(clasification.name || publishers)\n  // debugger\n  return (\n    <div className=\"game__info\">\n      <p className=\"info--title\">Publisher: { publishers.map(publisher => ( \n        publisher.name && <span key={ publisher.id }>{publisher.name}</span> )) }</p>\n\n      <p className=\"info--title\">Release-Date: <span>{ released }</span></p>\n      <p className=\"info--title\">Metacritic: <span>{ metacritic }</span></p>\n      {\n        clasification !== null && <p className=\"info--title\">ESRB: <span>{ clasification.name }</span></p>\n      }\n      <p className=\"info--title\">Gender: <span>{ genre.map(genre => `${genre.name} `)  }</span></p>\n    </div>\n  )\n}\n","import { useState } from \"react\"\n\nexport const FavSubmit = ( data, dispatch ) => {\n  // e.preventDefault()\n  // const newfav = data\n  const {checked} = data\n   const [addToggle, setAddToggle] = useState( checked )\n  // debugger\n  const handleAdd = () => {\n    dispatch({\n      type: 'add',\n      payload: data,\n      // checked: !checked\n    })\n\n    setAddToggle({\n      ...data,\n      checked: checked\n    })\n\n    // debugger\n  }\n\n  const handleRemove = () => {\n    dispatch({\n      type: 'del',\n      payload: data.id\n    })\n\n    setAddToggle(!addToggle)\n  }\n\n  const handleRemoveAll = () => {\n    dispatch({\n      type: 'remove',\n      payload: data\n    })\n  }\n  // debugger\n  return { handleAdd, handleRemove, addToggle, handleRemoveAll }\n}","import React, { useContext, useEffect } from 'react'\nimport { RatingStar } from './RatingStar'\nimport { IoMdAdd as AddIcon } from 'react-icons/io'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { FavSubmit } from '../helpers/FavSubmit'\nimport { IoTrashBinSharp as DeleteIcon } from 'react-icons/io5'\n\nexport const HeroImageModal = ( {data} ) => {\n  const { dispatch } = useContext( DataContext )\n  const { handleAdd, handleRemove, addToggle} = FavSubmit(data, dispatch)\n  const { slug, name, image, rating_star, rating } = data;\n  // debugger\n  // console.log('hero--image--modal')\n  // useEffect(() => {\n  //   console.log('hero--image--modal')\n  // }, [ data ])\n  return (\n    <>\n    <figure className=\"game__img\">\n      <img className=\"card--image\" src={ image } alt={ slug }/>\n      <div className=\"rating__stars\">\n        <h2 className=\"card--title\">{ name }</h2>\n        <RatingStar rating_star={ rating_star }/>\n      </div>\n\n{\n            !addToggle \n            ? <AddIcon \n              className=\"add--icon\"\n              onClick={ handleAdd }\n            />\n            : <DeleteIcon \n              className=\"add--icon\"\n              onClick={ handleRemove }\n            />\n          }\n    </figure>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nexport const Rating = ({data }) => {\n\n  const [orderingRating, setOrderingRating] = useState()\n  const { people_say } = data;\n  // const orderRating = people_say.sort((a,b) => {\n  //   // return return\n\n  // })\n  \n  useEffect(() => {\n    setOrderingRating( people_say.sort((a,b) => {\n      if( a.id < b.id ) return 1\n      if( a.id > b.id ) return -1\n    }) )\n    // console.log(orderingRating)\n  }, [ data ])\n  // const {}\n  // console.log('rating')\n  // debugger\n  return (\n      <div className=\"game__char__rating\">\n        <h3 className=\"game--subtitles\">What People Say</h3>\n        {\n          orderingRating !== undefined &&\n        <>        \n          <ul className=\"game__char\">\n            {\n              orderingRating.map(rating => (\n                <li key={  rating.id } className={ `game--${rating.title} percent` } style={{width: `${rating.percent}%`}}></li>\n              ))\n            }\n\n          </ul>\n          <ul className=\"rating__tags\">\n            {\n              orderingRating.map(rating => (\n                <li key={rating.id} className=\"rating--tag\"> {rating.title}:  \n                <div className={ `square--${rating.title}` }>\n                </div>\n                { rating.percent }%\n                </li>\n              ))\n            }\n          </ul>\n        </>\n        }\n      </div>\n  )\n}\n","import React from 'react'\nimport '../../styles/loading-style.css';\n\nexport const LoadingComponentSmall = ({data}) => {\n  // debugger\n  // const { searchGame } = data\n  const cleanData = !!data && data.replace(/-/gi, ' ')\n  // debugger\n  return (\n    <div className=\"loading__component__container\">\n      <div className=\"animation__container\">\n        <div className=\"loading--animation\"></div>\n        <div className=\"loading--animation2\"></div>\n        <div className=\"loading--animation3\"></div>\n        <div className=\"loading--animation4\"></div>\n      </div>\n      <h2 className=\"loading--text\">Loading {cleanData}</h2>\n    </div>\n  )\n}\n","import React from 'react'\n\nconst background = 'https://firebasestorage.googleapis.com/v0/b/proyects-screenshots.appspot.com/o/whatgame%2Fbackground.png?alt=media&token=6a1a0b57-d43e-4593-aa46-24807f63570b'\n\nexport const BackgroundAnimation = () => {\n  return (\n    <div className=\"home__animation animate__animated animate__fadeIn\">\n      <figure className='background__image'>\n        <img src={ background } alt=\"\" />\n      </figure>\n      {/* <div className=\"home__details\">\n        <div className=\"home--detail--1\"></div>\n        <div className=\"home--detail--2\"></div>\n        <div className=\"home--detail--3\"></div>\n      </div>\n      <div className=\"home__details__reverse\">\n        <div className=\"home--detail--1\"></div>\n        <div className=\"home--detail--2\"></div>\n        <div className=\"home--detail--3\"></div>\n      </div> */}\n    </div>\n  )\n}\n","import React, { useContext, useEffect, useMemo, useState, memo } from 'react'\nimport Horizon from '../../assets/horizon.jpg'\nimport { useGetGameDetails } from '../../hooks/useFetchGame';\nimport { GameDescription } from './GameDescription';\nimport { GameGallery } from './GameGallery';\nimport { GeneralInfo } from './GeneralInfo';\nimport { HeroImageModal } from './HeroImageModal';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { Rating } from './Rating';\nimport { Platforms } from './Platforms';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { LoadingComponentSmall } from '../loading/LoadingComponentSmall';\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation';\n\n\nexport const CardContent = React.memo(( ) => {\n// debugger\n  const { handleAdd , gameModalInfo, animation} = useContext(DataContext)\n  // debugger\n  const { slug } = !!gameModalInfo && gameModalInfo\n  // debugger\n  const { data, loading } = useGetGameDetails( slug );\n  const { platforms } = data\n  useEffect(() => {\n\n  }, [data])\n// debugger\n  // useEffect(() => {\n  //   console.log('card--content--data')\n  // }, [data])\n  // useEffect(() => {\n  //   console.log('card--content--values')\n  // }, [values])\n\n  const [handleData, setHandleData] = useState()\n  // useMemo(() => handleData(data), input)\n  const handleDataMemo = () => {\n    setHandleData(data)\n  }\n\n  const dataMemo = useMemo(() => handleDataMemo, [ gameModalInfo ])\n  // const { openContent, handleOpenModal } = useContext(DataContext)\n// const { openContent, handleOpenModal } = useContext(DataContext)\n\n  const [ openContent, handleOpenModal ] = useShowContent()\n  // debugger\n  return (\n    <div className={ `card__info ` }>\n        {\n          loading\n          ? <LoadingComponentSmall data={ slug }/>\n          : <div className={ `card__hero ${ animation ? 'animate__animated animate__fadeIn' : 'animate__animated animate__fadeOut' }` }>\n            \n              <div className=\"card__main__content\">\n                \n                <HeroImageModal data={ data }/>\n                <GeneralInfo data={ data }/>\n                \n              </div>\n              <button\n                className=\"submit--button\"\n                onClick={ handleOpenModal }\n                href=\"#description--game\"\n              > {\n                !openContent ? 'Read More' : 'Read Less'\n              } </button>\n              {\n                openContent && <GameDescription  data={ data }/>\n              }\n              \n              <GameGallery data={ data } />\n              <Rating data={ data }/>\n              <Platforms platforms={ platforms }/>\n              \n              {/* <BackgroundAnimation /> */}\n            </div>\n        }\n    </div>\n  )\n}\n)","export const animations_object = {\n  intro: 'animate__animated animate__fadeIn',\n  exit: 'animate__animated animate__fadeOut',\n}","import { useEffect, useState } from \"react\";\n\nexport const useIntersectionObserver = ( ref ) => {\n  const [isVisible, setIsVisible] = useState(false);\n  // const sectionRef = useRef(null)\n  const handleIntersection = ( entries ) => {\n    const [ entry ] = entries;\n\n    // debugger\n    setIsVisible(entry.isIntersecting);\n  }\n\n  const options = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0\n    }\n\n  useEffect(() => {\n    const observer = new IntersectionObserver( handleIntersection, options )\n    // debugger\n    if( ref.current ) {\n      observer.observe(ref.current)\n    }\n\n    return () => {\n      if( ref.current ) {\n        // setHandleAnimation(fade_in)\n        observer.unobserve(ref.current)\n        // setTimeout(() => {\n        // }, 1000);\n      }\n    }\n  }, [ ref, options ])\n\n  return isVisible\n}","import React, { useContext, useEffect, useState, useRef } from 'react'\nimport { LazyLoadComponent, LazyLoadImage } from 'react-lazy-load-image-component';\nimport Horizon from '../../assets/horizon.jpg';\nimport { RatingStar } from '../modal/RatingStar';\nimport { InteractiveButtons } from './InteractiveButtons';\nimport Modal from 'react-modal';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { CardContent } from '../modal/CardContent';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { CgArrowsExpandUpRight } from 'react-icons/cg'\nimport { IoMdAdd as AddIcon } from 'react-icons/io'\nimport { DataContext } from '../../context/DataFetchContext';\nimport { FavSubmit } from '../helpers/FavSubmit';\nimport { IoTrashBinSharp as DeleteIcon } from 'react-icons/io5'\nimport { animations_object } from '../../utils/animation_object';\nimport { useIntersectionObserver } from '../../hooks/useIntersection';\n\n\nexport const GameMediumCard = ({values}) => {\n  const { data, index } =  !!values && values\n  const [ openContent, handleOpenContent, animation ] = useShowContent()\n  // debugger\n  const { dispatch, handleOpenGameModal } = useContext( DataContext )\n  const { handleAdd, handleRemove, addToggle} = FavSubmit(data, dispatch)\n  const { name, image, calification, metacritic, rating_star,  slug, checked } = data\n  const [show, setShow] = useState(true)\n  // debugger\n  // debugger\n  // debugger\n\n  const { intro, exit } = animations_object\n  const cardRef = useRef(null)\n  const isVisible = useIntersectionObserver(cardRef)\n\n\n  let gameCalification = []\n  if(metacritic >= 90 ) {\n    gameCalification.push(<h2 key={1} className=\"calification high--rate--color\">{ metacritic }</h2>)\n  } else if ( metacritic >= 70 && metacritic < 90 ) {\n    gameCalification.push(<h2 key={2} className=\"calification medium--rate--color\">{ metacritic }</h2>)\n  } else if(metacritic < 70){\n    gameCalification.push(<h2 key={3} className=\"calification low--rate--color\">{ metacritic }</h2>)\n  }\n  // console.log('medium--card')\n  // debugger\n  return (\n    <LazyLoadComponent className={`game__medium__card `} \n    >\n      {/* <li className=\"game__medium__container\"> */}\n      <li className={`game__medium__container`}>\n      <h2 className=\"card--position\">{index + 1}</h2>\n      <figure className=\"game__medium__container\">\n        <LazyLoadImage \n          // placeholderSrc=\"../../assets/horizon.jpg\"\n          className=\"game--image--medium animate__animated animate__fadeIn\"\n          src={ image } alt=\"videogame\"\n          effect=\"opacity\" \n          \n          // beforeLoad={ () => handleLoading() }\n          // visibleByDefault={ image.src === '../../assets/horizon.jpg' }\n          />\n        \n      <div className=\"game__content animate__animated animate__fadeIn\">\n        {\n          !openContent &&\n          <h2 className=\"list--title\">{ name }</h2>\n        }\n        <div className=\"card__medium__info\">\n          {\n            gameCalification\n          }\n          <RatingStar rating_star={ rating_star }/>\n          <CgArrowsExpandUpRight \n            className=\"dots\"\n            onClick={ () => handleOpenGameModal({slug}) }\n            />\n          \n          {\n            !addToggle \n            ? <AddIcon \n            className=\"add--icon\"\n            onClick={ handleAdd }\n            />\n            : <DeleteIcon \n            className=\"add--icon\"\n            onClick={ handleRemove }\n            />\n          }\n\n        </div>\n      </div>\n      {\n        show &&\n        <div className=\"game--medium--name animate__animated animate__fadeIn\">{ name }</div>\n      }   \n\n        {/* <InteractiveButtons /> */}\n        {/* <div className=\"bottom--fade\"></div> */}\n      </figure>\n      </li>\n      {/* </li> */}\n      {/* <Modal\n        isOpen={ openContent }\n        // onAfterOpen={ handleToggleContent }\n        onRequestClose={ handleOpenContent }\n        className=\"Modal animate__animated animate__fadeIn\"\n        overlayClassName=\"Overlay--cards\"\n        ariaHideApp={false}\n      >\n        <CardContent values={{ slug, animation, handleOpenContent }}/>\n        <CloseIcon \n          className=\"close--icon\"\n          onClick={ handleOpenContent }\n        />\n      </Modal> */}\n    </LazyLoadComponent>\n  )\n}\n","import React from 'react';\nimport { OrderBy } from './OrderBy';\nimport { SuggestionsSearch } from './SuggestionsSearch';\n\nimport '../../styles/game-page-style.css';\nexport const ResultHeader = ( {searchGame} ) => {\n  // debugger\n  return (\n    <form className=\"result\">\n      <div className=\"header__result\">\n        <h3 className=\"list--title\">Search <span className=\"highlight--text\">{ searchGame }</span></h3>\n        {/* <OrderBy /> */}\n        {/* <input type=\"number\" /> */}\n      </div>\n      {/* {\n        cleanedGames.length <= 0 && <SuggestionsSearch data={ data } />\n      } */}\n    </form>\n  )\n}\n","import { useState } from \"react\"\n\nexport const usePagination = ( ref ) => {\n  \n  const [page, setPage] = useState( '' )\n  const [currentPage, setCurrentPage] = useState( 1 )\n  const [myLoad, setMyLoad] = useState( true )\n  const [loadMoreGames, setLoadMoreGames] = useState(false)\n  // debugger\n  \n  const handleNextPage = ( page ) => {\n    // \n    // ref.current\n    if(page){\n    setPage( page )\n    setLoadMoreGames(true)\n    // debugger\n    // setCurrentPage(currentPage + 1)\n    // setMyLoad(true)\n  }\n  }\n  \n  const handlePreviousPage = ( page ) => {\n    \n    if(page) {\n      setPage( page )\n      setCurrentPage(currentPage - 1)\n      // setMyLoad(true)\n    }\n  }\n  // debugger\n  return {handleNextPage, handlePreviousPage, page, myLoad, currentPage, setMyLoad, setPage, setCurrentPage, loadMoreGames, setLoadMoreGames}\n}\n\n\n","import { useEffect, useState } from \"react\"\n\nexport const useFullData = ( data ) => {\n  const [moreLoad, setMoreLoad] = useState([])\n  const [fullData, setFullData] = useState()\n  const [pagination, setPagination] = useState()\n  // debugger\n  useEffect(() => {\n    setMoreLoad(c => [...c, data.dataGames])\n    setPagination({\n      next: data.next,\n      previous: data.previous,\n      count: data.count,\n      // fullData: moreLoad.flat().filter(item => {return item !== undefined})\n    })\n    // debugger\n    // debugger\n  }, [ data ])\n  \n  useEffect(() => {\n    setFullData(moreLoad.flat().filter(item => {return item !== undefined}))\n  }, [ moreLoad ])\n  \n  \n  return { moreLoad, pagination, fullData, setMoreLoad }\n}","import React, { useEffect } from 'react'\nimport { usePagination } from '../../hooks/usePagination'\n\nexport const ShowMoreButton = ( {values} ) => {\n  const { handleNextPage, loadMoreGames, next, refGames } = !!values && values\n    // debugger\n   \n    // debugger\n  return (\n    <div className=\"scroll__more\">\n      <button \n        className=\"show--more\"\n        onClick={() => handleNextPage(next)}\n        // eslint-disable-next-line \n        // className={ myLoad &&'loading--button--animation'  }\n      >{\n        loadMoreGames\n          ?  'loading...'\n          : 'Show More'\n      }</button>\n    </div>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { useFetchGames, useGetGamesByName } from '../../hooks/useFetchGame'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\nimport { ResultHeader } from './ResultHeader'\nimport { SuggestionsSearch } from './SuggestionsSearch'\nimport { IoIosArrowBack as LeftArrow, IoIosArrowForward as RightArrow } from 'react-icons/io'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { Pagination } from '../pagination/Pagination'\nimport { usePagination } from '../../hooks/usePagination'\nimport { useFullData } from '../../hooks/useFullData'\nimport { ShowMoreButton } from '../helpers/ShowMoreButton'\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation'\n\nexport const SearchPage = () => {\n  const { searchGame } = useContext( DataContext )\n\n  const {handleNextPage, handlePreviousPage, page, myLoad, currentPage, setMyLoad, setPage, setCurrentPage, loadMoreGames, setLoadMoreGames} = usePagination(  )\n  \n  useEffect(() => {\n    setPage(searchGame)\n  }, [ searchGame ])\n\n  const { data, loading } = useGetGamesByName( page )\n  // debugger\n  // useEffect(() => {\n  //   setMyLoad(true)\n  // }, [data])\n  // const { dataGame } = !!data && data\n  const { moreLoad, pagination, fullData, setMoreLoad } = useFullData(!!data && data)\n// debugger\n   \nuseEffect(() => {\n  setMoreLoad([])\n}, [ searchGame ])\n\n  // const [cleanGames, setCleanGames] = useState([])\n  // const {next} = !data && data[1]\n  const { next } = !!pagination && pagination\n  // useEffect(() => {\n  //   setMyLoad(loading)\n    \n  // }, [ data ])\n  \n  // useEffect(() => {\n    \n    // }, [ loading ])\n \n    \n    useEffect(() => {\n      setMyLoad(true)\n      setLoadMoreGames(true)\n    }, [data])\n    \n    useEffect(() => {\n      // setMyLoad(false)\n      setLoadMoreGames(false)\n    }, [ fullData ])\n    \n    // debugger\n    // debugger\n    // debugger\n    \n    // const handleLoadingMoreGames = () => {\n      \n      // }\n      \n      // for(let i = 1; i <=10; i++) {\n        //   pages.push(i);\n        // }\n        // debugger\n        \n        return (\n          \n          <>\n      {\n        loading \n        ? <LoadingComponent data={ searchGame }/>\n        : <section className=\"second__container games__list\">\n          <ResultHeader searchGame={ searchGame }/> \n          <ul className=\"games__container\">\n              {\n                fullData.map( (data, index) => (\n                  <GameMediumCard key={ data.id.toString() }  className=\"animate__animated animate__fadeIn\" values={{ data, index }}/>\n                ))\n              }\n            </ul>\n            <ShowMoreButton className=\"animate__animated animate__fadeIn\" values={ {next, handleNextPage, loadMoreGames} }/>\n            {/* <Pagination pagination={{ handleNextPage, handlePreviousPage, currentPage, next, previous }}/> */}\n            <BackgroundAnimation />\n            </section>\n      }\n            </>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { unmountComponentAtNode } from 'react-dom'\nimport { Link, useHistory } from 'react-router-dom';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { useGetGamesByName } from '../../hooks/useFetchGame';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { SearchButton } from './SearchButton';\n\nexport const SearchBar = ( { handleOpenContent } ) => {\n\n  const history = useHistory();\n  const { setSearchGame } = useContext( DataContext )\n  const [inputValue, setInputValue] = useState('')\n  // const { setSearchGame } = useContext( SearchContext );\n  // setSearchGame({\n  //   name: 'arce',\n  //   age: 28\n  // debugger\n  // })\n  const handleOnChange = ( e ) => {\n    setInputValue(e.target.value)\n    // console.log(e.target.value)\n  }\n\n\n  const handleSubmit = ( e ) => {\n    e.preventDefault();\n    if(inputValue.length > 2) {\n      const replaceSimbols = /\\s/gi\n      setSearchGame( inputValue.toLowerCase().replace(replaceSimbols, '-') )\n      setInputValue('')\n      handleOpenContent(true)\n      history.push('/whatgame/search-result', null)\n      // debugger\n      return <LoadingComponent />\n    }\n    // debugger\n    // history.push('./genres')\n    // debugger\n    // e.history.pushState(inputValue, 'New page', './genres')\n  }\n  // console.log(resultData)\n  // debugger\n  return (\n    <>\n    <form \n      className=\"search__bar animate__animated animate__fadeIn\"\n      onSubmit={ handleSubmit }\n      to=\"/games\"\n    >\n      <input \n        className=\"search--input\" \n        type=\"search\"\n        value={ inputValue }\n        onChange={ handleOnChange }\n      />\n      {/* <Link to=\"/genres\"> \n      </Link> */}\n      {/* <SearchButton /> */}\n    </form>\n        </>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { ListItem } from './ListItem';\nimport { SearchBar } from './SearchBar';\nimport { useGetGamesByName } from '../../hooks/useFetchGame';\nimport { SearchContext } from '../../context/DataFetchContext';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc'; //YOU ARE HERE\n\nexport const MenuList = ( { values } ) => {\n  const { handleOpenContent, animation } = values\n  return (\n      // <div className=\"modal\">\n      // <div className=\"menu--overlay\"></div>\n      <div className={ `drop__menu ${ animation ? 'animate__animated animate__fadeInRight' : 'animate__animated animate__fadeOutRight'}` }>\n        <CloseIcon \n                className=\"close--icon \" \n                onClick={ handleOpenContent }\n              />\n          <SearchBar handleOpenContent={ handleOpenContent }/>\n        {/* <Link to=\"/results\" className=\"input--link\">\n        </Link> */}\n        <ListItem handleOpenContent={ handleOpenContent }/>      \n        </div>\n    // </div>\n  )\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { menuList } from '../../data/menu';\nimport { useFetchGenres } from '../../hooks/useFetchGame';\nimport { useHistory } from 'react-router';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { useScrollTop } from '../../hooks/useScrollTop';\nimport { SubMenuItem } from './SubMenuItem';\nimport { useShowContent } from '../../hooks/useShowContent';\n\nexport const MenuItem = ({list}) => {\n  // const { data, loading } = useFetchGenres()\n  // debugger\\\n  const { setGamesByGenre, dataGenres, genreLoading } = useContext\n  (DataContext)\n  const { scrollTop } = useScrollTop()\n  const history = useHistory()\n\n  const [openSubMenu, setOpenSubMenu] = useState(false)\n  const handleGenrePage = ( genre ) => {\n    // debugger\n    setGamesByGenre( genre )\n    // debugger\n    setOpenSubMenu(false)\n    history.push('/whatgame/genres', null)\n    return <LoadingComponent />\n  }\n\n\n  const [ openContent, handleOpen ] = useShowContent()\n  const mounted = useRef(true)\n  // debugger\n  // debugger\n\n  useEffect(() => {\n  \n    return () => {\n      mounted.current = false\n    }\n  }, [ openContent ])\n\n  const handleOpenSubMenu = () => {\n    scrollTop()\n    setOpenSubMenu(!openSubMenu)\n\n  }\n  return (\n\n      <li \n        key={ list.name }\n        className={ \n          (list.subMenu)\n          ? 'list--item  submenu'\n          : 'list--item'\n         }\n         onClick={ () => scrollTop() }\n        // onClick={ handleClickSubmit }\n        >\n          {/* { JSON.parse((item)) } */}\n          {\n            mounted.current &&\n            (!list.subMenu) \n            ? <Link \n                to={ list.page }\n              >\n                { list.name }\n              </Link>\n            : <Link \n                to={ list.page }\n                onClick={ handleOpenSubMenu }\n              >\n                { list.name }\n              </Link>\n          }\n          {\n            openSubMenu &&  <SubMenuItem handleGenrePage={ handleGenrePage }/>\n            \n          }\n      </li>\n      )\n  \n}\n\n\n//try to check what can I do to implement submenu genres mobile","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const SubMenuFavGames = ({ favoriteGames }) => {\n  return (\n    <ul className=\"fav__games__list\">\n      {\n        favoriteGames.slice(0,6).map(item => (\n          <li className=\"fav--games--item\">\n            {item.name}\n          </li>\n        ))\n      }\n\n      <li className=\"list--item \">\n        <Link to=\"/whatgame/favorite-games\" className=\"btn__primary\">\n        View More\n        </Link>\n      </li>\n    </ul>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { IoMdArrowDropdown as DownArrow } from 'react-icons/io';\nimport { menuList } from '../../data/menu';\nimport { ListDropDown } from './ListDropDown';\nimport { MenuItem } from './MenuItem';\n// import { menuIcons } from '../../data/menu'\nimport { SearchBar } from './SearchBar';\nimport { SubMenuItem } from './SubMenuItem';\nimport { VscLibrary as LibraryGames } from 'react-icons/vsc';\nimport { AiOutlineSearch as SearchIcon } from 'react-icons/ai';\nimport { RiUser3Fill as UserIcon } from 'react-icons/ri'\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { Link } from 'react-router-dom';\nimport { SubMenuFavGames } from './SubMenuFavGames';\nimport { cleanup } from '@testing-library/react';\n\nexport const Navbar = ( ) => {\n  const [openContent, handleOpenContent] = useShowContent(false)\n  const [openFavsMenu, setOpenFavsMenu] = useState(false)\n\n  const { favoriteGames } = useContext( DataContext )\n  // debugger\n  const [renderFavGames, setRenderFavGames] = useState()\n\n  const handleFavSubMenu = () => {\n     setOpenFavsMenu(!openFavsMenu)\n  }\n\n  useEffect(() => {\n    const myFavGames =  setRenderFavGames( <span className=\"items--saved\">{ favoriteGames.length }</span>)\n\n    return () => {\n      cleanup(myFavGames)\n    }\n  }, [ favoriteGames.length ])\n\n\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"navbar__container\">\n      {\n        menuList.map( (list, index) => (\n          <MenuItem key={ index } list={ list }/>\n        ))\n      }\n      \n      {/* <SearchBar handleOpenContent={handleOpenContent}/> */}\n      </ul>\n      <ul className=\"navbar__container\">\n        <li className=\"list--item\">\n          <SearchIcon \n            className=\"search--icon\"\n            onClick={ () => handleOpenContent(true) }\n          />\n          {\n            openContent && <SearchBar handleOpenContent={ handleOpenContent }/>\n          }\n        </li>\n        <li \n          className=\"list--item\"\n          onClick={ handleFavSubMenu }\n        >\n          <LibraryGames className=\"games--collection--icon\"\n          />\n          {\n            renderFavGames\n          }\n          {\n            openFavsMenu && \n          <SubMenuFavGames favoriteGames={ favoriteGames }/>\n          }\n          \n        </li>\n        {/* <li className=\"list--item\">\n          <UserIcon className=\"user--icon\"/>\n        </li> */}\n\n      </ul>\n      <ListDropDown />\n    </nav>\n  )\n}\n","import React, { useContext, useState } from 'react';\nimport Modal from 'react-modal';\nimport {  FiMenu as IconMenu } from 'react-icons/fi';\nimport '../../styles/header-style.css'\nimport { MenuList } from './MenuList';\nimport { Navbar } from './Navbar';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc'; //YOU ARE HERE\nimport { DataContext } from '../../context/DataFetchContext';\nimport { Link } from 'react-router-dom';\n\n\nexport const Header = () => {\n  \n  const [openContent, handleOpenContent, animation] = useShowContent()\n  \n  // const { openContent, handleOpenContent, animation } = useContext(DataContext)\n  // debugger\n  return (\n    <header className=\"main__container\">\n      <div className=\"header animate__animated animate__fadeIn\" >\n        <Link to=\"/whatgame\">\n        <h2 className=\"highlight--text\">WhatGame</h2>\n        </Link>\n        {/* {showContent && <MenuList />} */}\n        \n        {\n          (!openContent)\n            ? <IconMenu \n                onClick={ handleOpenContent }\n                className=\"icon--menu animate__animated animate__fadeIn\"\n              />\n            : <CloseIcon \n                className=\"close--icon animate__animated animate__fadeIn\" \n                onClick={ handleOpenContent }\n              />\n            \n\n        }\n        <Modal\n          isOpen={ openContent }\n          onRequestClose={ handleOpenContent }\n          ariaHideApp={ false }\n          className=\"Modal--menu\"\n          overlayClassName=\"Overlay\"\n        >\n          <MenuList values={{handleOpenContent, animation}}/>\n          \n        </Modal>\n        <Navbar />\n      </div>\n    </header>\n  )\n}\n","import React, { useContext, useEffect, useState, useRef } from 'react';\nimport Modal from 'react-modal';\nimport Horizon from '../../assets/horizon.jpg';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { CardContent } from '../modal/CardContent';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { resizeFile } from '../../data/fetchGames';\nimport { useResizeImage } from '../../hooks/useFetchGame';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { useIntersectionObserver } from '../../hooks/useIntersection';\nimport { animations_object } from '../../utils/animation_object';\n\n\nexport const GameSmallCard = ({item}) => {\n  const [openContent, handleOpenModal, animation] = useShowContent()\n  const { openGameModal, handleOpenGameModal, handleCloseGameModal } = useContext(DataContext)\n  const { setHandleModal } = useContext(DataContext)\n  const { name, slug, image } = item\n  const { intro, exit } = animations_object\n  const cardRef = useRef(null)\n  const isVisible = useIntersectionObserver(cardRef)\n  // useEffect(() => {\n  //   setHandleModal({\n  //     openContent, name, slug, handleOpenModal, animation\n  //   })\n  // }, [item])\n//  debugger\n  return (\n    // <article className=\"game__small__card\">\n      <li className={`game__small__container ${ intro }`} >\n    \n        <figure \n          className=\"game__small__container animate__animated animate__fadeIn\"\n          >\n          <LazyLoadImage \n            className=\"game--image--small\" \n            src={ image } \n            alt={ name }\n            onClick={ () =>  handleOpenGameModal({slug}) } \n            effect=\"opacity\"\n            />\n\n          {/* <Modal\n            isOpen={ openGameModal }\n            onRequestClose={ handleCloseGameModal }\n            ariaHideApp={false}\n            className=\"Modal \"\n            overlayClassName=\"Overlay--cards\"\n            \n            >\n            <CloseIcon \n              className=\"close--icon animate__animated animate__fadeIn\"\n              onClick={ handleOpenModal }\n              />\n            <CardContent />\n          </Modal> */}\n          {/* <fgcaption  */}\n          <fgcaption className=\"game--name\">{name}</fgcaption>\n        </figure>\n      </li>\n      \n    // </article>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/re-v.1a43f246.jpg\";","import React from 'react'\nimport { FaArrowAltCircleUp as GoUp } from 'react-icons/fa';\nimport { useScrollTop } from '../../hooks/useScrollTop';\n\nexport const ScrollTop = () => {\n  const { scrollTop } = useScrollTop()\n  return (\n    <div className=\"to__up\">\n      <GoUp \n        className=\"up--arrow\"\n        onClick={ scrollTop } \n      />\n      <div className=\"wave\"></div>\n      <div className=\"wave2\"></div>\n      <div className=\"wave3\"></div>\n    </div>\n  )\n}\n","import React, { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { GameSmallCard } from './GameSmallCard';\nimport '../../styles/games-lists.css';\nimport { useGamesByGenre } from '../../hooks/useFetchGame';\nimport { IoIosArrowBack as LeftArrow, IoIosArrowForward as RightArrow } from 'react-icons/io'\n\nimport { ArrowsSelectors } from './ArrowsSelectors';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { LoadingText } from '../loading/LoadingText';\nimport { ScrollTop } from '../helpers/ScrollTop';\nimport { Slider } from '../helpers/Slider';\nimport { FixedSizeList } from 'react-window';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { cleanup } from '@testing-library/react';\n\n\n// import { ListItem } from '../header/ListItem';\nexport const GameList = ({ genre: { genre, data, id } }) => {\n  const { dataGames } = !!data && data\n  // const { genreCollection, genreLoading } = useContext(DataContext)\n  // debugger\n  // const { data, loading } = useGamesByGenre( slug )\n  // const [collectData, setCollectData] = useState([])\n  // if(genreCollection.length > 0) {\n  //   debugger\n  // }\n  // debugger\n  const [fullLoad, setFullLoad] = useState(true)\n\n  // useEffect(() => {\n  // }, [ genreCollection ])\n  const refSlider = useRef()\n  \n  \n  useEffect(() => {\n    const settingLoading = setTimeout(() => {\n      setFullLoad(!fullLoad)\n    }, 2000);\n\n    return () => {\n      cleanup(settingLoading)\n    }\n  }, [  ])\n\n  // debugger\n  // const { dataGames } = !!data && data\n  // debugger\n  // const { \n  //   allGenresGames,\n  //   handleAllGenresGames } = useContext(DataContext)\n\n  // useEffect(() => {\n  //   setCollectData(c => [...c, dataGames])\n  //   // handleAllGenresGames(data)\n  // }, [data])\n\n  // useEffect(() => {\n  //   console.log('GAMES--MAP')\n  // }, [])\n  // debugger\n  // console.log(allGenresGames)\n  // if(collectData.length > 10) {\n  //   console.log(collectData)\n  //   debugger\n  // }\n\n \n  // const memoData = React.memo( handleData )\n  // const handleScrollVertical = () =>   {\n  //   return window.scroll({\n  //     righ: 200,\n  //     behavior: 'smooth'\n  //   })\n  // }\n  // debugger\n\n  // debugger\n  // useEffect(() => {\n\n  // }, [ data ])\n  // // debugger\n  // if(loading === false) {\n  //   // debugger\n  // }\n  // debugger\n  return (\n    <section \n      className=\" games__list animate__animated animate__fadeIn\"\n    >\n      <h2 className=\"list--title\">Best <span className=\"highlight--text\">{ genre }</span> Games</h2>\n      {/* <button onClick={() => handleScroll(1000) }>Click to move</button> */}\n          {/* <div className=\"cards__container\" ref={ ref }> */}\n        {/* <ArrowsSelectors handleRightArrow={ {\n          handleRightArrow,  handleLeftArrow\n        }}/> */}\n          \n\n        {/* debugger */}\n\n        <Slider refSlider={refSlider}/>\n          <ul\n            className=\"cards__container\"\n            // width={`100%`}\n            // height={500}\n            // itemSize={160}\n            // itemCount={ data.length } \n            ref={ refSlider }\n          >\n          {\n            fullLoad\n              ? <LoadingText />\n              : dataGames.map(item => (\n                item.image &&\n                <GameSmallCard key={ item.slug } item={ item }/>\n              ))\n          }\n          </ul>\n          {/* </div> */}\n    </section>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useFetchGenres } from '../../hooks/useFetchGame'\nimport { GameList } from '../videogames-lists/GameList'\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation'\nimport { DataContext } from '../../context/DataFetchContext'\nexport const GamesMap = () => {\n  // const { data, loading } = useFetchGenres()\n  const { dataGenres, genreLoading, genreCollection } = useContext(DataContext)\n  useEffect(() => {\n    // console.log('GAMES--MAP')\n  }, [dataGenres])\n  // debugger\n  const [handleGenres, setHandleGenres] = useState([])\n\n  useEffect(() => {\n    setHandleGenres(genreCollection)\n  }, [ genreCollection ])\n\n  if(dataGenres.length ===  genreCollection.genreCollection) {\n    debugger\n  }\n\n  // debugger\n  return (\n    <section className=\"container__games\">\n      {\n           genreLoading\n            ? <LoadingComponent />\n            : <>\n                {\n                  handleGenres.sort().map(genre => (\n                    <LazyLoadComponent \n                    key={genre.id}\n                    delayTime=\"3000\"\n                    >\n                    <GameList key={genre.id} genre={genre}/>\n                    </LazyLoadComponent>\n                    ))\n                  }\n              </>\n          }\n          {/* <BackgroundAnimation /> */}\n    </section>\n  )\n}\n","import React, { useContext, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useShowContent } from '../../hooks/useShowContent';\nimport { CardContent } from '../modal/CardContent';\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\nimport { useGetGameDetails } from '../../hooks/useFetchGame';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { FavSubmit } from '../helpers/FavSubmit';\n\n\nexport const CheckNow = ({ slug }) => {\n  const { dispatch, handleOpenGameModal } = useContext( DataContext )\n  // const [ openContent, handleOpenContent, animation ] = useShowContent()\n  const { data, loading } = useGetGameDetails( slug );\n  const { handleAdd, handleRemove, addToggle} = FavSubmit(data, dispatch)\n  // debugger\n  return (\n    <div className=\"check__now animate__animated animate__fadeInUp\">\n      {\n        !addToggle\n        ?  <p onClick={ handleAdd }>Add</p>\n        :  <p onClick={ handleRemove }>Remove</p>\n        \n      }\n      <button \n        type=\"button\"\n        className=\"submit--button\"\n        onClick={ () => handleOpenGameModal({slug}) }\n      > Check Now\n      </button>\n      <p>Info</p>\n      \n    </div>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport resident from '../../assets/re-v.jpg';\nimport { DataContext } from '../../context/DataFetchContext';\nimport { useFetchGames, useGetGameDetails } from '../../hooks/useFetchGame';\nimport '../../styles/home-style.css';\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation';\nimport { LoadingComponent } from '../loading/LoadingComponent';\nimport { CardContent } from '../modal/CardContent';\nimport { GamesMap } from '../videogames-lists/GamesMap';\nimport { CheckNow } from './CheckNow';\n\nexport const Home = () => {\n  // debugger\n  const { fetchGames: {\n    loading, data\n  } } = useContext(DataContext)\n  // const  random = \n  const { id, name, background_image, slug } = !loading && data.randomResult;\n  // debugger\n  // debugger\n  \n  \n  useEffect(() => {\n    const vh = window.innerHeight * 0.01;\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  \n    // We listen to the resize event\n    window.addEventListener('resize', () => {\n      // We execute the same script as before\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\n    });\n  }, [])\n  const [myCheckNow, setMyCheckNow] = useState()\n\n  // const handleCheck = () => {\n  // }\n  // handleCheck()\n  // debugger\n  useEffect(() => {\n    setTimeout(() => {\n      setMyCheckNow(<CheckNow className=\"animate__animated animate__fadeInUp\" slug={ slug }/>)\n    }, 4000);\n\n  }, [data])\n  return (\n    <>\n    <section id=\"home\" className=\"main__container home \">\n      {\n        loading \n          ? <LoadingComponent />\n          : \n          <>\n          <figure className=\"hero__img__container     animate__animated animate__fadeIn\">\n            <div className=\"top--fade\"></div>\n              <img className=\"hero--img animate__animated animate__fadeIn\" src={ background_image } alt={ name }/>\n              <div className=\"bottom--fade\"></div>\n              <caption className=\"hero--text\">{ name }</caption>\n            </figure> \n            \n          </>\n      }\n      {/* <CheckNow slug={ slug }/>  */}\n\n      {\n        myCheckNow\n      }\n      {/* <div className=\"hero__text__content\">\n        <p className=\"hero--text\">{ name }</p>\n      </div> */}\n      <BackgroundAnimation />\n    </section>\n      <GamesMap />\n      \n  </>\n  )\n}\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();","import React, { useContext, useEffect, useState } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { useGamesByGenre } from '../../hooks/useFetchGame'\nimport { usePagination } from '../../hooks/usePagination'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { Pagination } from '../pagination/Pagination'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ShowMoreButton } from '../helpers/ShowMoreButton'\nimport { useFullData } from '../../hooks/useFullData'\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation'\n\n\nexport const GamesGenreGrid = (  ) => {\n  const { gamesByGenre, setGamesByGenre } = useContext(DataContext)\n  // debugger\n  // const [nextPage, setNextPage] = useState( gamesByGenre )\n\n\n  const {\n    handleNextPage, handlePreviousPage, page, myLoad, currentPage, setMyLoad, setPage, setCurrentPage, loadMoreGames, setLoadMoreGames } = usePagination( )\n\n  useEffect(() => {\n    setPage(gamesByGenre)\n  }, [ gamesByGenre ])\n    \n  const { data, loading } = useGamesByGenre( page )\n  // const { dataGames } = !!data && data \n  const {moreLoad, pagination, fullData, setMoreLoad} = useFullData( !!data && data )\n  // debugger\n  useEffect(() => {\n    setMoreLoad([])\n  }, [ gamesByGenre ])\n  // debugger\n  const { next, count } = !!pagination && pagination\n  // debugger\n  useEffect(() => {\n    setMyLoad(false)\n    setLoadMoreGames(true)\n    \n  }, [ data ])\n\n  useEffect(() => {\n    setLoadMoreGames(false)\n  }, [ fullData ])\n\n\n  const [buttonLoad, setButtonLoad] = useState(true)\n  useEffect(() => {\n    setTimeout(() => {\n      setButtonLoad(false)\n    }, 2000);\n  }, [])\n  // debugger\n  return (\n    <>\n    {\n      loading\n      ? <LoadingComponent />\n      :<>\n        \n          <ul className=\"games__container\">\n\n          {/* <InfiniteScroll\n             dataLength={data[0].length}\n             next={ () => setNextPage(next) }\n             hasMore={true}\n             loader={<h4>Loading...</h4>}\n             scrollableTarget=\"scrollableDiv\"\n             \n            > */}\n         {\n           fullData.map((data, index) => (\n             data.image &&\n             <GameMediumCard key={ data.id } values={{ data, index }}/>\n             ))\n            }\n          {/* </InfiniteScroll> */}\n        {/* <Pagination pagination={{ handleNextPage, handlePreviousPage, currentPage, next, previous }}/> */}\n            </ul>\n        {\n          fullData.length > 0 &&\n          <ShowMoreButton values={ {next, handleNextPage, loadMoreGames} }/>\n        }\n        <BackgroundAnimation />\n        </>\n    }\n    </>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { GameList } from '../videogames-lists/GameList'\nimport { GameSmallCard } from '../videogames-lists/GameSmallCard'\nimport { GenresGrid } from './GenresGrid'\nimport { HomeImage } from './HomeImage'\n\nimport '../../styles/genres-style.css'\nimport { useFetchGenres, useGamesByGenre } from '../../hooks/useFetchGame'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\nimport { GamesGenreGrid } from './GamesGenreGrid'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { usePagination } from '../../hooks/usePagination'\nimport { Pagination } from '../pagination/Pagination'\n\nexport const GenrePage = () => {\n  // const [gamesByGenre, setGamesByGenre] = useState()\n  // const { data, loading } = useFetchGenres()\n  const { dataGenres, genreLoading, gamesByGenre } = useContext(DataContext)\n  const {\n    handleNextPage, \n    handlePreviousPage, \n    currentPage, \n    page, \n    myLoad,\n    setMyLoad, setCurrentPage } = usePagination( )\n  // debugger\n  // const { gamesByGenre  } = useContext(DataContext)\n  // const { slug, name} = gamesByGenre\n  // useEffect(() => {\n  //   // console.log('grid changed')\n  //   return () => {\n      \n  //   }\n  // }, [ gamesByGenre ])\n  // debugger\n  \n  return (\n            <section className=\"genres games__list\" >\n          {\n            genreLoading\n              ? <LoadingComponent />\n              : \n              <>\n                {/* <h2 className=\"genres--title\">Genres</h2> */}\n                {/* <HomeImage \n                  className=\"genre__home__img\" \n                  data={ data }\n                />       */}\n                <div className=\"hero__text__content\">\n                <h2 className=\"genre--title\">{ gamesByGenre }</h2>\n                  {/* <p className=\"hero--text\">{ name }</p> */}\n                </div>\n                <GamesGenreGrid />\n              </>\n              } \n            </section>\n\n         \n  )\n}\n","import React, { useRef } from 'react';\nimport { SearchButton } from '../header/SearchButton';\n\nimport '../../styles/game-page-style.css';\nimport { OrderBy } from '../search-page/OrderBy';\nexport const GameResults = ( { data } ) => {\n  const inputRef = useRef(null)\n  // debugger\n  return (\n    <form className=\"result\">\n      {/* <div className=\"header__result\"> */}\n        <h3 className=\"list--title\">Search <span className=\"highlight--text\">Result ...</span></h3>\n        {/* <OrderBy /> */}\n        {/* <div className=\"page__form\">\n          <label htmlFor=\"page--number\" className=\"page--input--label\">Search by page</label>\n          <input type=\"number\" id=\"page--number\"name className=\"page--input\"\n          ref={inputRef}\n          placeholder=\"page by number\"\n          />\n\n        <SearchButton />\n        </div> */}\n      {/* </div> */}\n    </form>\n  )\n}\n","import React, { useContext, useRef } from 'react'\nimport {  GamesDataContext } from '../../context/DataFetchContext'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard'\nimport { LoadingComponent } from '../loading/LoadingComponent'\nimport { GameResults } from './GameResults'\nimport { ShowMoreButton } from '../helpers/ShowMoreButton'\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation'\n\nexport const GamePage = React.memo(({history} ) => {\n// debugger\nconst refGames = useRef(null)\n  const { fullData,\n    loading,\n    next,\n    handleNextPage,\n    loadMoreGames } = useContext(GamesDataContext)\n    // debugger\n   \n\n    // useEffect(() => {\n    //   setTimeout(() => {\n    //     handleToTop()\n        \n    //   }, 1000);\n    // }, [fullData])\n    // debugger\n  // const {\n  //   handleNextPage, \n  //   handlePreviousPage, \n  //   currentPage, \n  //   page, \n  //   myLoad,\n  //   setMyLoad, setCurrentPage,loadMoreGames, setLoadMoreGames } = usePagination( )\n    \n  // const { data, loading } = useFetchGames( page )\n  \n  // const {moreLoad, pagination, fullData} = useFullData( data )\n  // // debugger\n  // const {next}  = !!pagination && pagination\n  // // const results = !loading && data[0]\n  // // debugger\n  // // const {next}  = !!pagination && pagination\n  // // const results = !loading && data[0]\n  // // debugger\n  // useEffect(() => {\n  //   setMyLoad(false)\n  //   setLoadMoreGames(true)\n  // }, [ data ])\n\n  // useEffect(() => {\n  //   setLoadMoreGames(false)\n  // }, [ fullData ])\n  \n  // useEffect(() => {\n  //   setFullLoad( moreLoad.flat().filter(item => {return item !== undefined}) )\n  // }, [ data ])\n  // addToggle\n  // debugger\n  // useEffect(() => {\n  //   if(!refGames) return refGames.current.scrollTop = 500\n    \n  // }, [fullData])\n  // debugger\n\n  return (\n    \n       <>\n      {\n        loading \n          ? <LoadingComponent />\n          : <section id=\"games\" className=\"second__container games__list\">\n          <GameResults /> \n          <ul  className=\"games__container\" ref={!!refGames && refGames}>\n\n              {\n                fullData.map( (data, index) => (\n                  data.image &&\n                  <GameMediumCard key={ data.id }   values={{ data, index }}/>\n                  ))\n                }\n              {/* </InfiniteScroll> */}\n            </ul>\n            {/* <Pagination pagination={{ handleNextPage, handlePreviousPage, currentPage, next, previous }}/> */}\n            {\n              fullData.length > 0 &&\n                <ShowMoreButton values={ { handleNextPage, loadMoreGames, next , refGames} }/>\n            }\n            \n            <BackgroundAnimation />\n\n    </section>\n      }\n            </>\n  )\n})\n","\nimport React, { useContext, useEffect } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\nimport { useScrollTop } from '../../hooks/useScrollTop';\nimport '../../styles/favorite-games-page.css'\nimport { GameMediumCard } from '../videogames-lists/GameMediumCard';\nimport { ScrollTop } from '../helpers/ScrollTop';\nimport { BackgroundAnimation } from '../animations/BackgroundAnimation';\nimport { FavSubmit } from '../helpers/FavSubmit';\n\n\nexport const FavGamesPage = () => {\n  \n\n  const { favoriteGames, dispatch } = useContext( DataContext )\n\n  const { handleRemoveAll } = FavSubmit(favoriteGames, dispatch)\n  // const { handleAdd, handleRemove, addToggle} = FavSubmit(data, dispatch)\n  // debugger\n  const { scrollTop } = useScrollTop()\n  // // const [favList, setFavList] = useState(favoriteGames)\n  // const [favGame, setFavGame] = useState()\n  // const [showFavGame, setShowFavGame] = useState(false)\n  // const [data, setData] = useState(favGame)\n  // const { name, image, rating_star, metacritic, calification, released } = favGame !== undefined && favGame\n  // const [ openContent, handleOpenContent, animation ] = useShowContent()\n  // // debugger\n  // const [slug, setSlug] = useState()\n  // const [removeRepeatElement, setRemoveRepeatElement] = useState([])\n\n\n  // useEffect(() => {\n  //   setRemoveRepeatElement([...new Set(favoriteGames)])\n  //   // return () => {\n  //   //   cleanup(remove)\n  //   // }\n  // }, [favoriteGames])\n  // debugger\n  // const handleFavGameImage = ( game ) => {\n    \n  //   handleOpenContent()\n  //   // setShowFavGame(false)\n  //   setSlug(game.slug)\n    \n  //   setTimeout(() => {\n  //     // const element = document.getElementById(`${game.name}`)\n  //     // element.scrollIntoView(false)\n  //     // setFavGame(game)\n  //     // setShowFavGame(true)\n  //     // setShowFavGame(!showFavGame)\n  //     // debugger\n  //   }, 200);\n    \n  // }\n  \n  // const handleRemoveGames = () => {\n  //   // setFavGame([])\n  // }\n\n  // const handleToTop = () => {\n  //   scrollTop()\n  // }\n  \n  \n  useEffect(() => {\n    scrollTop()\n    // scrollTop()\n  }, [  ])\n\n  // useEffect(() => {\n\n  // }, [ favGame ])\n  // debugger\n  return (\n    <>\n      <section className=\"favorite__page \">\n      <div className=\"page__header\">\n        <h2 className=\"favorite--games--title\">Favorite Games: { favoriteGames.length }</h2>\n        {\n          favoriteGames.length > 0 &&\n            <button \n              className=\"btn btn--remove\"\n              onClick={ handleRemoveAll }\n            >Remove All</button>\n\n        }\n      </div>\n      <div className=\"games__container\">\n        {\n           \n           favoriteGames.map((data, index) => (\n            <GameMediumCard key={ data.id }  className=\"animate__animated animate__fadeIn\" values={{ data, index }}/>\n            \n          ))\n        }\n      </div>\n      {/* <Modal\n        isOpen={ openContent }\n        // onAfterOpen={ handleToggleContent }\n        onRequestClose={ handleOpenContent }\n        className=\"Modal\"\n        overlayClassName=\"Overlay--cards\"\n        ariaHideApp={false}\n      >\n        <CardContent values={{ slug, animation, handleOpenContent }}/>\n        <CloseIcon \n          className=\"close--icon\"\n          onClick={ handleOpenContent }\n        />\n      </Modal> */}\n      {/* {\n        showFavGame && \n        <div className=\"fav__info\">\n          <figure className={ `fav__img ${ showFavGame ? 'animate__animated animate__fadeIn' : 'animate__animated animate__fadeOut' }` }>\n          <img className=\"fav--image\" src={image} alt={name} />\n          <figcaption className=\"fav--game--name\"> \n            { name }\n          </figcaption>\n        </figure>\n          <p className=\"info--title\">Name: <span>{ name }</span></p>\n          <p className=\"info--title\">Metacritic: <span>{ metacritic }</span></p>\n          <p className=\"info--title\">Calification: <span>{ calification }</span></p>\n          <p className=\"info--title\">Released: <span>{ released }</span></p>\n          <RatingStar rating_star={ rating_star } />\n        </div>\n      }      */}\n      {\n        favoriteGames.length > 10 &&\n        <ScrollTop />\n      }\n      \n      <BackgroundAnimation />\n\n    </section>\n    </>\n  )\n}\n","import React, { useContext, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\nimport { SearchPage } from '../components/search-page/SearchPage'\nimport { Header } from '../components/header/Header'\nimport { Home } from '../components/home/Home'\nimport { ModalCard } from '../components/modal/ModalCard'\nimport { GameList } from '../components/videogames-lists/GameList'\nimport { useFetchGames, useFetchGenres } from '../hooks/useFetchGame'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport history from './history'\nimport { GenrePage } from '../components/genres-page/GenrePage'\nimport { LoadingComponent } from '../components/loading/LoadingComponent'\nimport { GamePage } from '../components/game-page/GamePage'\nimport { GamesMap } from '../components/videogames-lists/GamesMap'\nimport { FavGamesPage } from '../components/favorite-games-page/FavGamesPage'\nimport { ApiComponent } from '../components/api-component/ApiComponent'\nimport { ScrollTop } from '../components/helpers/ScrollTop'\nimport { DataContext, GamesDataContext } from '../context/DataFetchContext'\nimport { usePagination } from '../hooks/usePagination'\nimport { useFullData } from '../hooks/useFullData'\nimport { BackgroundAnimation } from '../components/animations/BackgroundAnimation'\nimport { CardContent } from '../components/modal/CardContent'\n\nimport { VscChromeClose as CloseIcon } from 'react-icons/vsc';\n\n\nexport const GameRouter = () => {\n  // const dataSlice =  data.slice(6, 11);\n  // debugger\n  const {handleModal} = useContext(DataContext)\n  const { openContent, name, slug, handleOpenModal, animation } = handleModal\n  const {\n    handleNextPage, \n    handlePreviousPage, \n    currentPage, \n    page, \n    myLoad,\n    setMyLoad, setCurrentPage,loadMoreGames, setLoadMoreGames } = usePagination( )\n    const { openGameModal, handleOpenGameModal, handleCloseGameModal } = useContext(DataContext)\n\n  const { data, loading } = useFetchGames( page )\n\n  const {moreLoad, pagination, fullData} = useFullData( data )\n\n\n  const {next}  = !!pagination && pagination\n  useEffect(() => {\n    setMyLoad(false)\n    setLoadMoreGames(true)\n  }, [ data ])\n\n  useEffect(() => {\n    setLoadMoreGames(false)\n  }, [ fullData ])\n  \n  return (\n    <>\n    <Router history={ history }>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={ Home } />\n        <Route  exact path=\"/whatgame\" component={ Home }/>\n        {/* <Route  exact path=\"/games\" component={ GamePage }>\n          <Home/>\n        </Route> */}\n        \n\n        <Route exact path=\"/whatgame/genres\" component={ GenrePage }>\n        </Route>\n        <Route exact path=\"/whatgame/search-result\" component={ SearchPage }>\n        </Route>\n        <Route exact path=\"/whatgame/favorite-games\" component={ FavGamesPage }>\n        </Route>\n        <Route  exact path=\"/whatgame/api\" component={ ApiComponent } />\n        <Route exact path=\"/whatgame/games\">\n          <GamesDataContext.Provider value={{\n            fullData,\n            loading,\n            next,\n            handleNextPage,\n            loadMoreGames\n          }}>\n            <GamePage />\n          </GamesDataContext.Provider>\n          </Route>\n          <Route>\n          </Route>\n          <Redirect to=\"/whatgame\" component={ Home }/>\n      </Switch>\n\n      <Modal\n        isOpen={ openGameModal }\n        onRequestClose={ handleCloseGameModal }\n        ariaHideApp={false}\n        className=\"Modal \"\n        overlayClassName=\"Overlay--cards\"\n        \n        >\n        <CloseIcon \n          className=\"close--icon animate__animated animate__fadeIn\"\n          onClick={ handleCloseGameModal }\n          />\n        <CardContent />\n      </Modal>\n{/* \n      <Modal\n        isOpen={ openContent }\n        onRequestClose={ handleOpenModal }\n        ariaHideApp={false}\n        className=\"Modal \"\n        overlayClassName=\"Overlay--cards\"\n        \n        >\n        <CloseIcon \n          className=\"close--icon animate__animated animate__fadeIn\"\n          onClick={ handleOpenModal }\n          />\n        <CardContent values={{ slug, animation }}/>\n      </Modal> */}\n      {/* <ScrollTop /> */}\n      </Router>\n\n    </>\n  )\n}\n","import React, { useEffect, useReducer, useState } from 'react'\nimport { favoritesReducer } from './components/helpers/favoritesReducer';\nimport { DataContext } from './context/DataFetchContext'\nimport { useFetchGames, useFetchGenres, useGetGamesByName } from './hooks/useFetchGame'\nimport { useModalGame } from './hooks/useModalGame';\nimport { useShowContent } from './hooks/useShowContent';\n\nimport { GameRouter } from './router/GameRouter';\n\nexport const WhatGameApp = () => {\n  const [ searchGame, setSearchGame ] = useState( );\n  const { resultData, loading } = useGetGamesByName( searchGame )\n  const [mainModal, setMainModal] = useState({\n    name: '',\n    image: '',\n    open: false\n  })\n\n  const { openGameModal, gameModalInfo, handleCloseGameModal, handleOpenGameModal, animation } = useModalGame()\n  // const handleMainModal = (name, image) => {\n\n  // }\n\n  \n\n  const fetchGames = useFetchGames()\n\n  \n  const { genresData, genreCollection } = useFetchGenres();\n  const { data: dataGenres, loading:genreLoading } = genresData\n  // debugger\n  // const {data: dataGenres, loading: genreLoading,  genreCollection} = useFetchGenres();\n  // debugger\n\n  // const [allGenresGames, setAllGenresGames] = useState([])\n\n  // const handleAllGenresGames = (data) => {\n  //   setAllGenresGames(c => [...c, {\n\n  //   }].filter(item => item !== undefined))\n  // }\n  // const { data: dataGenres, loading: genreLoading } = useFetchGenres();\n  // console.log(dataGenres)\n  // debugger\n  // console.log(dataGenres)\n  const init = () => {\n    return JSON.parse(localStorage.getItem('favoriteGames')) || []\n  }\n\n  const [ openContent, handleOpenContent ] = useShowContent()\n  // debugger\n  const [gamesByGenre, setGamesByGenre] = useState( '' )\n  \n  const [favoriteGames, dispatch,] = useReducer(favoritesReducer, [], init)\n  // debugger\n\n  const [handleModal, setHandleModal] = useState({})\n  \n  useEffect(() => {\n    localStorage.setItem('favoriteGames', JSON.stringify(favoriteGames))\n  }, [ favoriteGames ])\n  // debugger\n  return (\n    <>\n      <DataContext.Provider value={ \n        {\n          fetchGames,\n          resultData,\n          searchGame, \n          setSearchGame, \n          loading,\n          dataGenres,\n          genreLoading,\n          openContent,\n          handleOpenContent,\n          // animation,\n          gamesByGenre,\n          setGamesByGenre,\n          favoriteGames,\n          dispatch,\n          genreCollection,\n          setHandleModal,\n          handleModal,\n          setMainModal,\n          mainModal,\n          openGameModal, \n          gameModalInfo, \n          handleCloseGameModal, \n          handleOpenGameModal, \n          animation \n          // genreData\n          // allGenresGames,\n          // handleAllGenresGames\n        } \n        }>\n        <GameRouter />\n      </DataContext.Provider>\n    </>\n  )\n}\n","import { useState } from \"react\"\n\nexport const useModalGame = () => {\n  const [openGameModal, setOpenGameModal] = useState(false);\n  const [gameModalInfo, setGameModalInfo] = useState('')\n  const [animation, setAnimation] = useState(false);\n\n  const handleOpenGameModal = (values) => {\n    setAnimation(true)\n    // debugger\n    setTimeout(() => {\n      setGameModalInfo(values)\n      setOpenGameModal(true)\n    }, 300);\n  }\n  \n  const handleCloseGameModal = () => {\n    setAnimation(false)\n    setTimeout(() => {\n      setOpenGameModal(false);\n      \n    }, 500);\n    setTimeout(() => {\n      // setGameModalInfo(null)\n    }, 600);\n  }\n  // debugger\n  return {\n    openGameModal, gameModalInfo, handleCloseGameModal, handleOpenGameModal, animation\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { WhatGameApp } from './WhatGameApp';\n\n\nimport '../src/styles/global-styles.css';\nimport '../src/styles/buttons-styles/buttons-styles.css';\nimport '../src/styles/loading-style.css'\n\nimport { LoadingComponent } from './components/loading/LoadingComponent';\nimport { LoadingSmallCards } from './components/loading/LoadingSmallCards';\n\n\nReactDOM.render(<WhatGameApp />, document.querySelector('#root'));","\nexport const menuList = [\n  {\n    name: 'Home',\n    content: false,\n    page: '/whatgame',\n    subMenu: false\n  },\n  {\n    name: 'Games',\n    content: false,\n    page: '/whatgame/games',\n    subMenu: false\n  },\n  {\n    name: 'Genres',\n    content: true,\n    // page: '',\n    subMenu: true\n  },\n  {\n    name: 'Library',\n    content: false,\n    page: '/whatgame/favorite-games',\n    saved: true,\n    count: true\n  },\n  {\n    name: 'API',\n    content: false,\n    page: '/whatgame/api',\n    subMenu: false,\n    // link: 'https://rawg.io/apidocs'\n  },\n\n  // {\n  //   name: 'Icon-Game',\n  //   content: true,\n  //   page: '/my-likes',\n  //   subMenu: false,\n  //   icon: <LibraryGames />\n  // }\n]\n\n// export const menuIcons = [\n//   {\n//     name: 'search',\n//     icon: <SearchIcon className=\"search--icon\"/>\n//   },\n//   {\n//     name: 'game-collection',\n//     icon: <LibraryGames className=\"games--collection--icon\"/>\n//   },\n//   {\n//     name: 'user',\n//     icon: <UserIcon className=\"user--icon\"/>\n//   },\n// ]","import React, { useEffect, useState } from 'react'\nimport '../../styles/loading-style.css';\n\nexport const LoadingComponent = ({data}) => {\n  // debugger\n  // const { searchGame } = data\n  const [cleanData, setCleanData] = useState();\n\n  useEffect(() => {\n    setCleanData(data && data.replace(/-/gi, ' '))\n  },[ data ])\n  // const cleanData = !!data && data.replace(/-/gi, ' ')\n  // debugger\n  return (\n    <div className=\"loading__container\">\n      <div className=\"animation__container\">\n        <div className=\"loading--animation\"></div>\n        <div className=\"loading--animation2\"></div>\n        <div className=\"loading--animation3\"></div>\n        <div className=\"loading--animation4\"></div>\n      </div>\n      <h2 className=\"loading--text\">Loading {cleanData}</h2>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { DataContext } from '../../context/DataFetchContext'\n\nexport const SubMenuItem = ({ handleGenrePage }) => {\n  \n  const { dataGenres } = useContext(DataContext)\n  // const { genreLoading, dataGenre, handleGenrePage } = values\n  // const { dataGenre} = useContext(DataContext)\n  // debugger\n  return (\n    <>\n      {\n        <ul className=\"sub--menu animate__animated animate__fadeIn\">\n      {\n        dataGenres.map(item => ((\n          <li \n            className=\"sub--menu--item\"\n            onClick={ () => handleGenrePage(item.slug) }\n            \n          >\n            { item.name }\n          </li>\n        )))\n      }\n    </ul>\n      }\n    </>\n  )\n}\n"],"sourceRoot":""}